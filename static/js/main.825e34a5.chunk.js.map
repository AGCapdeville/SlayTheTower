{"version":3,"sources":["components/screens/map/map.module.scss","components/card/card.module.scss","components/screens/trial/trial.module.scss","components/combat-components/combat-zone/foe-zone/foe-zone.module.scss","components/screens/resolution/resolution.module.scss","components/screens/hero-selection/hero-selection.module.scss","components/screens/title/title.module.scss","components/combat-components/hand/hand.module.scss","components/screens/bonfire/bonfire.module.scss","components/screens/combat/combat.module.scss","components/combat-components/combat-zone/hero-zone/hero-zone.module.scss","components/combat-components/player-status/player-status.module.scss","components/combat-components/draw-zone/draw-zone.module.scss","components/combat-components/discard-zone/discard-zone.module.scss","components/screens/shop/shop.module.scss","components/combat-components/combat-zone/combat-zone.module.scss","ducks/screen.js","game-data/creep-data.js","ducks/foe.js","ducks/player.js","game-data/card-data.js","game-data/heros-data.js","ducks/climbState.js","game-data/game-state.js","components/screens/title/title.jsx","components/combat-components/combat-zone/foe-zone/foe-zone.jsx","components/combat-components/combat-zone/hero-zone/hero-zone.jsx","components/combat-components/combat-zone/combat-zone.jsx","components/card/card.jsx","components/combat-components/hand/hand.jsx","components/combat-components/draw-zone/draw-zone.jsx","ducks/combat.js","components/combat-components/turn-bttn/turn-bttn.jsx","components/combat-components/discard-zone/discard-zone.jsx","components/combat-components/player-status/player-status.jsx","components/screens/combat/combat.jsx","components/screens/resolution/resolution.jsx","components/screens/hero-selection/hero-selection.jsx","ducks/map.js","ducks/shop.js","components/screens/map/map.jsx","components/screens/shop/shop.jsx","components/screens/bonfire/bonfire.jsx","App.js","components/screens/trial/trial.jsx","ducks/index.js","index.js","configurestore.js"],"names":["module","exports","updateScreen","createAction","handleActions","state","action","payload","selectScreen","createSelector","screen","creeps","name","art","health","total","armor","gold","telegraphing","order","target","effect","power","moves","spawnFoe","updateFoe","spawnFloorBoss","selectFoe","foe","useFoe","useSelector","updatePlayer","setDeck","drawCard","playCard","playIndexedCard","discardHand","voidCard","shuffleDeck","resetDeck","drawHand","shuffle","deck","j","x","i","length","Math","floor","random","slice","hand","discard","voidDeck","rest","newDeck","shuffledDiscard","grabCard","newHand","newDiscard","emptyHand","console","log","splice","voidPile","void","selectPlayer","player","usePlayer","cards","requiredHero","type","energy","exhaust","description","card_id","cost","heros","utilityHero","offenseHero","defenseHero","maxHealth","defense","map","id","items","updateClimbState","defeat","playerScore","selectClimbState","climbState","useClimbState","gameState","TitleScreen","dispatch","useDispatch","useFullScreenHandle","className","titleStyle","game","title","menu","onClick","FoeZone","foeHealth","foeMax","foeArmor","telegraph","getTelegraph","useEffect","document","getElementById","style","backgroundColor","height","width","dmg","newBar","ceil","updateFoeHealthBar","opacity","position","newArmor","updateFoeArmorBar","styles","foeZone","foeTitle","foeImg","src","alt","foeHealthBorder","foeHealthIndicator","HeroZone","heroColumn","heroContainer","CombatZone","combatZone","heroVSMonster","Card","props","cardFace","titleSection","cardData","combat","cardArt","cardDescription","Cards","onCardClick","index","cardIndex","getState","card","energyCost","newEnergy","trample","newFoeHealth","parseInt","heal","newPlayerHealth","newPlayerArmor","a","check","navigator","userAgent","vendor","window","opera","test","substr","isMobile","handContainer","key","swipeContainer","onSwiped","event","dir","swipeCard","cardStyle","cardButton","Hand","activeZone","DrawZone","drawZone","updateCombat","TurnBttn","zone","zIndex","combatMsgs","innerHTML","setTimeout","moveMsg","newHealth","newFoeArmor","lengthOfMoves","Object","keys","newPos","newTelegraph","filter","obj","devButton","DiscardZone","discardZone","PlayerStatus","playerStatusContainer","playerGold","playerDefense","playerHealth","CombatScreen","loot","combatZoneOverlay","playerZone","ResolutionScreen","header","body","bttn","gameScreen","menuContainer","menuHeader","menuBody","menuFooter","menuOption","HeroSelection","heroType","heroTitle","heroImg","updateMap","fieldEvent","fieldPaths","fieldPathEvents","count","selectMap","updateShop","setupShop","rollDice","max","shopCards","newShopCards","selectShop","shop","useShop","min","genPathLength","onesOdds","genEvent","roll","fightOdds","elieteOdds","bonfireOdds","trialOdds","shopOdds","genPath","pathLength","setEvent","events","e","push","fillPaths","numberOfPaths","paths","p","startingField","startingPaths","createField","fieldEvents","fieldCount","fieldBatch","MapScreen","currentField","UsePlayer","onPathSelection","field","newField","find","fields","dispatcher","eventHandler","screenContainer","screenHeader","color","margin","screenBody","mapContainer","display","flexDirection","pathButton","legendContainer","legendTitle","legendItem","ShopScreen","customButton","handleOption","option","BonfireScreen","bonfireOption","screens","Title","Combat","Resolution","Map","Shop","Bonfire","Trial","trialTitle","artContainer","trialInfoContainer","trialDescription","trialOptionsContainer","trialOptions","App","Screen","handle","enter","combineReducers","rootElement","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","rootReducer","configureStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.825e34a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenContainer\":\"map_screenContainer__138NT\",\"screen\":\"map_screen__2h83O\",\"screenHeader\":\"map_screenHeader__1MEZg\",\"screenBody\":\"map_screenBody__2Zi0a\",\"mapContainer\":\"map_mapContainer__1VYi0\",\"pathButton\":\"map_pathButton__2TJoE\",\"legendContainer\":\"map_legendContainer__1hI7J\",\"legendTitle\":\"map_legendTitle__3LxL3\",\"legendItem\":\"map_legendItem__3Hu8z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardButton\":\"card_cardButton__3vSh7\",\"card\":\"card_card__1f1QP\",\"cardFace\":\"card_cardFace__3qGSw\",\"cardArt\":\"card_cardArt__2M4gI\",\"titleSection\":\"card_titleSection__ELNaR\",\"title\":\"card_title__3ghvj\",\"energy\":\"card_energy__3iq9D\",\"cardDescription\":\"card_cardDescription__3up_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenContainer\":\"trial_screenContainer__29DCd\",\"screen\":\"trial_screen__1mSLQ\",\"trialTitle\":\"trial_trialTitle__3wuft\",\"artContainer\":\"trial_artContainer__1At8-\",\"trialInfoContainer\":\"trial_trialInfoContainer__zoS1F\",\"trialDescription\":\"trial_trialDescription__2EuTV\",\"trialOptions\":\"trial_trialOptions__XiCBJ\",\"trialOptionsContainer\":\"trial_trialOptionsContainer__3TE8f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"telegraph\":\"foe-zone_telegraph__2A7Jx\",\"foeTitle\":\"foe-zone_foeTitle__2pI1i\",\"foeZone\":\"foe-zone_foeZone__xlu-7\",\"foe\":\"foe-zone_foe__29CPk\",\"foeImg\":\"foe-zone_foeImg__2ecbF\",\"foeHealthBorder\":\"foe-zone_foeHealthBorder__1OcwE\",\"foeHealthBar\":\"foe-zone_foeHealthBar__3xALw\",\"foeHealthIndicator\":\"foe-zone_foeHealthIndicator__22-Nd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameScreen\":\"resolution_gameScreen__2Z8U2\",\"menuContainer\":\"resolution_menuContainer__N4HIa\",\"menuHeader\":\"resolution_menuHeader__3J5Ta\",\"menuBody\":\"resolution_menuBody__2AC6R\",\"menuFooter\":\"resolution_menuFooter__6HZ2y\",\"menuOption\":\"resolution_menuOption__1mI4y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameScreen\":\"hero-selection_gameScreen__CCdN_\",\"menuContainer\":\"hero-selection_menuContainer__gH6KW\",\"heroContainer\":\"hero-selection_heroContainer__3o7wE\",\"heroTitle\":\"hero-selection_heroTitle__1tGMV\",\"heroImg\":\"hero-selection_heroImg__1gPUg\",\"title\":\"hero-selection_title__JAIMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"title_game__y3Wr0\",\"menu\":\"title_menu__2pkpl\",\"title\":\"title_title__2XrX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeZone\":\"hand_activeZone__e-fVo\",\"handContainer\":\"hand_handContainer__2Ctxp\",\"hand\":\"hand_hand__27tNn\",\"swipeContainer\":\"hand_swipeContainer__zU6i5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bonfireOption\":\"bonfire_bonfireOption__1bqrs\",\"screenContainer\":\"bonfire_screenContainer__2ZYo2\",\"screen\":\"bonfire_screen__3Ybym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"combat_game__bGecB\",\"playerZone\":\"combat_playerZone__35zL5\",\"combatZoneOverlay\":\"combat_combatZoneOverlay__3p0qS\",\"combatMsgs\":\"combat_combatMsgs__3XmcZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"herColumn\":\"hero-zone_herColumn__359lf\",\"heroContainer\":\"hero-zone_heroContainer__2huL_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerStatusContainer\":\"player-status_playerStatusContainer__3Ki3i\",\"playerHealth\":\"player-status_playerHealth__10Z4s\",\"playerGold\":\"player-status_playerGold__DvRWe\",\"playerDefense\":\"player-status_playerDefense__Df9yt\",\"playerHealthBorder\":\"player-status_playerHealthBorder__3xFdO\",\"playerHealthIndicator\":\"player-status_playerHealthIndicator__2zOpi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawZone\":\"draw-zone_drawZone__BCzkT\",\"energy\":\"draw-zone_energy__3fhc4\",\"deck\":\"draw-zone_deck__2V8oB\",\"devButton\":\"draw-zone_devButton__zQXGR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discardZone\":\"discard-zone_discardZone__38wSB\",\"void\":\"discard-zone_void__HIbIv\",\"discard\":\"discard-zone_discard__2rdot\",\"devButton\":\"discard-zone_devButton__389Dw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customButton\":\"shop_customButton__ezSf4\",\"screenContainer\":\"shop_screenContainer__3zudU\",\"screen\":\"shop_screen__gdpAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"combatZone\":\"combat-zone_combatZone__3hbN6\",\"partyHealthZone\":\"combat-zone_partyHealthZone__1GA_A\",\"heroVSMonster\":\"combat-zone_heroVSMonster__2YPL6\",\"heroZone\":\"combat-zone_heroZone__30Pw_\",\"monsterZone\":\"combat-zone_monsterZone__2L6PT\"};","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\n\nexport const updateScreen = createAction('screen/UPDATE_SCREEN');\n\nconst initialSreenState = 'Title'; // <-- true start\n\nexport default handleActions({\n    [updateScreen]: (state, action) => state = action.payload,\n}, initialSreenState);\n\nconst selectScreen = createSelector(\n    state => state.screen,\n    screen => screen   \n)\n\nexport const useScreen = () => useSelector(selectScreen);\n\n","\n\n\nexport const creeps = [\n    {\n        name: 'Slime',\n        art: 'https://i.imgur.com/Sun4iBT.png?1',\n        // health: 36, <- normal health\n        health: 5,\n        total: 36,\n        armor: 0,\n        gold: 10,\n        telegraphing: [{ \n                name: ['Spit'],\n                order: 0,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [8]\n            }],\n        moves: [\n            {\n                name: ['Spit'],\n                order: 0,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [8]\n            },\n            {\n                name: ['Whip'],\n                order: 1,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [13]\n            },\n            {\n                name : ['Soften'],\n                order: 2,\n                target: ['self'],\n                effect: ['armor'],\n                power: [12]\n            }\n        ]\n    },\n    {\n        name: 'Living Armor',\n        art: 'https://i.imgur.com/yl0eGRj.png?4',\n        health: 55,\n        total: 55,\n        armor: 0,\n        telegraphing: [\n            {\n                name: ['Lunging Strike'],\n                order: 0,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [30]\n            }],\n        moves: [\n            {\n                name: ['Lunging Strike'],\n                order: 0,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [30]\n            },\n            {\n                name: ['Defensive Mode'],\n                order: 1,\n                target: ['self'],\n                effect: ['wait'],\n                power: [0]\n            },\n            {\n                name: ['Repair'],\n                order: 2,\n                target: ['self'],\n                effect: ['heal'],\n                power: [20]\n            },\n            {\n                name: ['Offensive Mode'],\n                order: 3,\n                target: ['self'],\n                effect: ['wait'],\n                power: [0]\n            },\n        ]\n    }\n    // {\n    //     name: 'Living Armor',\n    //     art: 'https://i.imgur.com/yl0eGRj.png?4',\n    //     health: 52,\n    //     totalHealth: 52,\n    //     armor: 0,\n    //     telegraphing: ['damage 7'],\n    //     moves: {\n    //         'strike':{\n    //             order: 0,\n    //             target: ['hero'],\n    //             effect: ['damage'],\n    //             power: [7]\n    //         },\n    //         'Repair':{\n    //             order: 1,\n    //             target: ['self'],\n    //             effect: ['damage'],\n    //             power: [10]\n    //         },\n    //     }\n    // },\n    // TO REDO: - - - - - - - - - - - - - - - - WIP:\n    // {\n    //     name: 'living armor',\n    //     properties: {\n    //         art: 'art uri',\n    //         health: {\n    //             base: 15,\n    //             mod: 5\n    //         },\n    //         attacks: {\n    //             move: ['strike'],\n    //             dmg: [5]\n    //         },\n    //         deffends: {\n    //             move: ['meld'],\n    //             def: [10]\n    //         }\n    //     }\n    // },\n    // {\n    //     name: 'spooky skeleton',\n    //     properties: {\n    //         art: 'art uri',\n    //         health: {\n    //             base: 10,\n    //             mod: 6\n    //         },\n    //         attacks: {\n    //             move: ['tackle', 'smash'],\n    //             dmg: [4, 8]\n    //         },\n    //         deffends: {\n    //             move: ['calcium'],\n    //             def: [6]\n    //         }\n    //     }\n    // },\n]","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { creeps } from '../game-data/creep-data';\n\n// export const setFoeName = createAction('foe/SET_FOE_NAME');\n// export const setFoeImg = createAction('foe/SET_FOE_IMG');\n// export const setFoeTotalHealth = createAction('foe/SET_FOE_TOTAL_HEALTH');\n// export const setFoeMoves = createAction('foe/SET_FOE_MOVES');\nexport const spawnFoe = createAction('foe/SPAWN_FOE');\nexport const updateFoe = createAction('foe/UPDATE_FOE');\nexport const spawnFloorBoss = createAction('foe/SPAWN_FLOOR_BOSS');\nconst initialState = { };\n\n// name: 'Slime',\n// art: 'https://i.imgur.com/Sun4iBT.png?1',\n// health: 10,\n// totalHealth: 10,\n// armor: 0,\n// telegraphing: ['damage 5'],\n// moves: {\n//     'whip':{\n//         priority: 0,\n//         target: ['hero'],\n//         effect: ['damage'],\n//         power: [5]\n//     },\n//     'spit':{\n//         priority: 1,\n//         target: ['hero'],\n//         effect: ['damage'],\n//         power: [8]\n//     },\n//     'soften':{\n//         priority: 1,\n//         target: ['self'],\n//         effect: ['armor'],\n//         power: [12]\n//     }\n// }\n\n\nexport default handleActions({\n    [spawnFoe]: (state) => ({ ...state, ...creeps[0] }),\n    [spawnFloorBoss]: (state, action) => ({...state, ...action.payload}),\n    [updateFoe]: (state, action) => {\n        return ({ ...state, ...action.payload })\n    },\n}, initialState);\n\n\n// how we grab data from the store\nconst selectFoe = createSelector(\n    state => state.foe,\n    foe => foe   \n)\n\nexport const useFoe = () => useSelector(selectFoe);\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { updateFoe } from './foe';\n\n// TODO: clean up and organize\n\n// Alter Health, Energy & Armor Actions:\nexport const updatePlayer = createAction('player/UPDATE_PLAYER');\n// export const newRound = createAction('player/NEW_ROUND');\n\n// Deck Actions:\nexport const setDeck = createAction('player/SET_DECK');\nexport const drawCard = createAction('player/DRAW_CARD');\nexport const playCard = createAction('player/PLAY_CARD');\n\nexport const playIndexedCard = createAction('player/PLAY_INDEXED_CARD');\nexport const discardHand = createAction('player/DISCARD_HAND');\n\nexport const voidCard = createAction('player/VOID_CARD');\nexport const shuffleDeck = createAction('player/SHUFFLE_DECK');\nexport const resetDeck = createAction('player/RESET_DECK')\n\n// Hand actions\nexport const drawHand = createAction('player/DRAW_HAND');\n\nconst initialState = {\n    deck: [],\n    hand: [],\n    discard: [],\n    voidDeck: []\n}\n\n\nfunction shuffle(deck) {\n    var j, x, i\n    for (i = deck.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1))\n        x = deck[i]\n        deck[i] = deck[j]\n        deck[j] = x\n    }\n    return deck\n}\n\nconst reduceResetDeck = ({ hand, deck, discard, voidDeck, ...rest }) => {\n    discard = [...discard, ...voidDeck]\n    discard = [...discard, ...hand]\n    const newDeck = [...deck, ...discard]\n    return { ...rest, hand:[], deck:newDeck, voidDeck:[], discard:[] }\n}\n\nconst reduceDrawCard = ({ discard, deck, hand, ...rest }) => {\n    if ( deck.length == 0 ){\n        if ( discard.length == 0 ){\n            return { ...rest, discard, deck, hand}\n        } else {\n            const shuffledDiscard = shuffle(discard)\n            const grabCard = shuffledDiscard[shuffledDiscard.length-1]\n            const newDeck = shuffledDiscard.slice(0, shuffledDiscard.length-1)        \n            const newHand = [...hand, grabCard]\n            return { ...rest, hand: newHand, deck: newDeck, discard: [] }\n        }\n    } else {\n        return { ...rest, hand: [...hand, deck[deck.length-1]], deck: deck.slice( 0, deck.length -1), discard }\n    }\n}\n\nconst reducePlayCard = ({ discard, hand, ...rest }) => {\n    const emptyHand = hand.length < 1;\n    \n    if (!emptyHand){\n        const newHand =  hand.slice( 0, hand.length-1)\n        const newDiscard = [...discard, hand[hand.length-1] ]\n        return { ...rest, hand: newHand, discard: newDiscard}\n    }else{\n        return { ...rest, hand, discard}\n    }\n}\n\nconst reducePlayIndexedCard = ({ discard, hand, ...rest } , {payload}) => {\n    const emptyHand = hand.length < 1;\n    console.log(payload)\n\n    if (!emptyHand){\n        const grabCard = hand[payload]\n        hand.splice(payload, 1)\n        const newHand = hand\n        const newDiscard = [...discard, grabCard]\n        return { ...rest, hand: newHand, discard: newDiscard}\n    }else{\n        return { ...rest, hand, discard}\n    }\n}\n\nconst reduceDiscardHand = ({ discard, hand, ...rest }) => {\n    const emptyHand = hand.length < 1;\n\n    if (!emptyHand){\n        const newHand = []\n        const newDiscard = [...discard, ...hand ]\n        return { ...rest, hand: newHand, discard: newDiscard}\n    }else{\n        return { ...rest, hand, discard}\n    }\n}\n\n\nexport default handleActions({\n    [drawHand]: (state) => ({...state, deck: state.deck.slice( 0, state.deck.length -5), hand: [...state.hand, ...state.deck.slice(-5)]}),\n    [shuffleDeck]: (state) => ({...state, deck: shuffle(state.deck)}),\n    [updatePlayer]: (state, action) => ({ ...state, ...action.payload }),\n    [setDeck]: (state, action) => ({...state, deck: action.payload }),\n    \n    [resetDeck]: reduceResetDeck,\n\n    [drawCard]: reduceDrawCard,\n    [playCard]: reducePlayCard,\n    \n    [playIndexedCard]: reducePlayIndexedCard,\n    [discardHand]: reduceDiscardHand,\n\n    [voidCard]: (state, action) => ({...state, hand: state.hand.slice(action.payload, 1), voidPile: [...state.void, state.hand.slice(action.payload, 1)]}),\n}, initialState);\n\n// notes:\n// might need to see if I can set initialStates later ???????\n// [newRound]: (state) => ({...state, energy: initialState.energy, armor: initialState.armor}),\n// deck handle:\n\n\n// how we grab data from the store\nconst selectPlayer = createSelector(\n    state => state.player,\n    player => player   \n)\n\nexport const usePlayer = () => useSelector(selectPlayer);\n\n// Async Actions\nexport const applyCard = (cardIndex) => (dispatch, getState) => {\n    const state = getState();\n\n\n    const card = state.player.hand[cardIndex]\n    const energyCost = card.energy;\n    const foeArmor = state.foe.armor\n\n    if (energyCost <= state.player.energy) {\n        const newEnergy = state.player.energy - energyCost\n        if (card.action.target==\"foe\"){\n            if (card.action.effect==\"damage\"){\n                const damage = card.action.power\n                const trample = foeArmor - damage\n                if (trample < 0) {\n                    const newFoeHealth = parseInt(state.foe.health) + parseInt(trample)\n                    dispatch(updateFoe({ health: newFoeHealth, armor: 0}))\n                }else{\n                    const newFoeArmor = trample\n                    dispatch(updateFoe({ armor: newFoeArmor }))\n                }\n                dispatch(updatePlayer({ energy: newEnergy }))\n            }\n        } else {\n            if (card.action.effect==\"heal\"){\n                const heal = card.action.power\n                const newPlayerHealth = parseInt(state.player.health) + parseInt(heal)\n                dispatch(updatePlayer({ health: newPlayerHealth, energy: newEnergy }))\n            } else if (card.action.effect==\"armor\"){\n                const armor = card.action.power\n                const newPlayerArmor = parseInt(state.player.armor) + parseInt(armor)\n                dispatch(updatePlayer({ armor: newPlayerArmor, energy: newEnergy}))\n            }\n        }\n        dispatch(playIndexedCard(cardIndex))\n    } else {\n        console.log(\"! Not Enough Energy !\")\n    }\n\n\n}\n\n\n\n","\n//  CARD LAYOUT:\n// {\n//     name: '',\n//     requiredHero: 'u',\n//     art: '<art url>',\n//     type: 'attack',\n//     energy: 1,\n//     exhaust: false,\n//     action: {\n//         target: ['foe'],\n//         effect: ['damage'],\n//         power: [5]\n//     },\n//     description: \"5 Damage\",\n//     card_id: 0\n// },\n\n\nexport const cards = [\n    {\n        name: 'Take the Offensive',\n        requiredHero: 'a',\n        art: '<art url>',\n        type: 'attack',\n        energy: 1,\n        exhaust: false,\n        action: {\n            target: ['foe'],\n            effect: ['damage'],\n            power: [5]\n        },\n        description: \"5 Damage\",\n        card_id: 0\n    },\n    {   \n        name: 'Defensive Tactics',\n        requiredHero: 'a',\n        art: '<art url>',\n        type: 'defend',\n        energy: 1,\n        exhaust: false,\n        action: {\n            target: ['hero'],\n            effect: ['armor'],\n            power: [5]\n        },\n        description: \"+5 Defense\",\n        card_id: 1\n    },\n    {   \n        name: 'Heal',\n        requiredHero: 'a',\n        art: '<art url>',\n        type: 'skill',\n        energy: 2,\n        exhaust: true,\n        action: {\n            target: ['hero'],\n            effect: ['heal'],\n            power: [8]\n        },\n        description: \"Heal 8 Damage\",\n        card_id: 2,\n        cost: 100,\n    },\n    {\n        name: 'Lunge From Above',\n        requiredHero: 'a',\n        art: '<art url>',\n        type: 'attack',\n        energy: 1,\n        exhaust: true,\n        action: {\n            target: ['foe', 'hero'],\n            effect: ['damage', 'damage'],\n            power: [20, 5]\n        },\n        description: \"Deal 20 Damage, take 5 Damage\",\n        card_id: 3,\n        cost: 75,\n    }\n];\n\n","import {cards} from './card-data'\n\nexport const heros = [\n\n    {\n        utilityHero: 'staff',\n        offenseHero: 'sword',\n        defenseHero: 'shield',\n        health: 55,\n        maxHealth: 55,\n        energy: 3,\n        defense: 0,\n        deck: [0,0,0,0,0,1,1,1,1,1,2].map(id => cards[id]),\n        hand: [],\n        discard: [],\n        voidDeck: [],\n        gold: 50,\n        items: []\n    }\n];\n\n\n\n\n\n\n\n\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nexport const updateClimbState = createAction('climbState/UPDATE_CLIMB_STATE');\n\nconst initialState = {\n    defeat: false,\n    floor: 0,\n    playerScore: 0,\n}\n\nexport default handleActions({\n    [updateClimbState]: (state, action) => ({ ...state, ...action.payload }),\n}, initialState);\n\n\nconst selectClimbState = createSelector(\n    state => state.climbState,\n    climbState => climbState   \n)\n\nexport const useClimbState = () => useSelector(selectClimbState);\n\n\n","\nexport const gameState = {\n\n    defeat: false,\n    floor: 0,\n    playerScore: 0,\n\n}","import React, { useEffect } from 'react';\nimport titleStyle from \"./title.module.scss\";\nimport { updateScreen } from '../../../ducks/screen';\nimport { useDispatch } from 'react-redux';\n\nimport { updatePlayer } from '../../../ducks/player'\nimport { heros } from '../../../game-data/heros-data'\n\nimport { updateClimbState } from '../../../ducks/climbState';\nimport { gameState } from '../../../game-data/game-state';\n\n// full screen......\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\n\n\nconst TitleScreen = () => {\n\n    const dispatch = useDispatch();\n  \n    // TODO: Move to New Game Screen\n    dispatch(updatePlayer(heros[0]))\n    dispatch(updateClimbState(gameState))\n\n    // full screen....\n    const handle = useFullScreenHandle();\n\n    // useEffect(() => handle.enter, []);\n    \n    return (\n            <div className={titleStyle.game} >\n\n                <div className={titleStyle.game} >\n                    <div className={titleStyle.title} >SLAY THE TOWER</div>\n                    <div className={titleStyle.menu} onClick={() => dispatch(updateScreen('HeroSelection'))}> NEW GAME </div>\n                    <div className={titleStyle.menu} onClick={() => dispatch(updateScreen('Map'))}> MAP </div>\n                </div>\n\n            </div>\n    );\n}\n\nexport default TitleScreen","import React from 'react';\nimport foe, { useFoe } from '../../../../ducks/foe'\nimport styles from \"./foe-zone.module.scss\";\nimport { useEffect } from 'react';\n\nfunction updateFoeHealthBar(foeHealth, foeMax){\n    var x = document.getElementById(\"foeHealthBar\")\n    x.style.backgroundColor = \"red\"\n\n    if (foeHealth == foeMax){\n        x.style.height = \"2vh\"\n        x.style.width = \"20vw\"\n    }\n\n    if (foeHealth < foeMax){\n        const dmg = ((foeHealth/foeMax)*20)\n        const newBar = Math.ceil(foeHealth - dmg)\n        x.style.width = newBar + \"vw\"        \n    }\n}\n\nfunction updateFoeArmorBar(armor){\n    var x = document.getElementById(\"foeArmorBar\")\n    x.style.backgroundColor = \"lightblue\"\n    x.style.opacity = \".75\"\n    x.style.position = \"absolute\"\n\n    if (armor == 0){\n        x.style.height = \"2vh\"\n        x.style.width = \"0vw\"\n    }\n\n    if (armor > 0){\n        // const dmg = ((foeHealth/foeMax)*20)\n        const newArmor = ((armor/100)*20)\n        x.style.width = newArmor + \"vw\"        \n    }\n}\n\nfunction getTelegraph(foe){\n    try{\n        // debugger;\n        console.log(\"contents:\", foe.telegraphing)\n        const answer = foe.telegraphing[0].effect + \" \"+ foe.telegraphing[0].power\n        return answer\n    }catch{\n        const answer = \"...\"\n        return answer\n    }\n}\n\nconst FoeZone = () => {\n\n    const { health: foeHealth } = useFoe();\n    const { total: foeMax } = useFoe();\n    const { armor: foeArmor } = useFoe();\n    const foe = useFoe();\n    // console.log(\"telegraph:\", getTelegraph(foe))\n    const telegraph = getTelegraph(foe)\n    \n\n    useEffect(() => {\n        updateFoeHealthBar(foeHealth, foeMax)\n    }, [foeHealth]);\n\n    useEffect(() => {\n        updateFoeArmorBar(foeArmor)\n    }, [foeArmor])\n    \n    return(\n        <div className={styles.foeZone}>\n\n            <div className = {styles.foe}>\n\n                <div className={styles.telegraph}> {telegraph} </div>\n                <div className={styles.foeTitle}> {foe.name} </div>\n                <img className = {styles.foeImg} src={foe.art} alt=\"foe img\"/>\n\n                <div className = {styles.foeHealthBorder}> \n                    <div className = {styles.foeHealthIndicator}> \n                        {foe.health} / {foe.total} \n                    </div>\n                    <div id=\"foeArmorBar\"> </div>\n                    <div id=\"foeHealthBar\"> </div>\n                    {/* className = {styles.foeHealthBar} */}\n                </div>\n\n                {/* {document.getElementById(\"foeHealthBar\").style.width= \"5\"} */}\n\n            </div>  \n        </div>        \n    );\n}\n\n\nexport default FoeZone;\n","import React from 'react';\nimport styles from \"./hero-zone.module.scss\";\n\n\nconst HeroZone = () => {\n\n    return(\n        <div className={styles.heroColumn}>\n\n            <div className={styles.heroContainer}> Utility hero</div>\n            <div className={styles.heroContainer}> Attack hero</div>\n            <div className={styles.heroContainer}> Defense hero</div>\n\n        </div>\n    );\n}\n\n\nexport default HeroZone;\n","import React from 'react';\nimport styles from './combat-zone.module.scss'\n\nimport FoeZone from './foe-zone';\nimport HeroZone from './hero-zone';\n\n\nconst CombatZone = () => {\n\n    return (\n        <div className = {styles.combatZone}>\n            <div className = {styles.heroVSMonster}>\n                <HeroZone />\n                <FoeZone />\n            </div>\n        </div>\n    );\n}\n\n\nexport default CombatZone;\n","import React from 'react';\nimport styles from './card.module.scss'\n\n\nconst Card = (props) => {\n    return(\n        <div>\n\n            <div className = {styles.cardFace}>\n                <div className = {styles.titleSection}>\n                    <div className = {styles.title}> \n                        {props.cardData.name} \n                    </div> \n\n                    <div className = {styles.energy}>\n                        {props.cardData.energy}\n                    </div>\n\n                    {!props.combat && \n                        <div>\n                            G: {props.cardData.cost}\n                        </div> \n                    }\n                </div>\n                \n                <div className={styles.cardArt}>\n                    {props.cardData.art}\n                </div>\n\n                <div className={styles.cardDescription}>\n                    {props.cardData.description}\n                </div>\n            </div>\n\n        </div>        \n    )\n}\n\nexport default Card;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport styles from './hand.module.scss'\nimport cardStyle from '../../card/card.module.scss'\n\nimport { usePlayer, applyCard } from '../../../ducks/player';\nimport Card from '../../card';\n\nimport { useSwipeable, Swipeable } from 'react-swipeable'\n\nfunction isMobile() {\n    var check = false;\n    (function(a){\n      if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) \n        check = true;\n    })(navigator.userAgent||navigator.vendor||window.opera);\n    return check;\n}\n\nconst Cards = () =>{\n    \n    const player = usePlayer();\n    const dispatch = useDispatch();\n    const onCardClick = (index) =>  dispatch(applyCard(index));\n\n    const config = {\n        onSwipedUp: () => console.log('swiped up! :'),\n        preventDefaultTouchmoveEvent: true,\n        trackMouse: true\n    };\n    \n    const swipeCard = ( index, event ) => {\n        if (event.dir === 'Up'){\n            onCardClick(index)\n        }\n    }\n\n    if (isMobile()){\n        return(\n            <div className={styles.handContainer}>\n                {\n                player.hand.map( (cardData, index) => \n                    <Swipeable key={index} className={styles.swipeContainer} onSwiped={ (event) => swipeCard(index, event) }>\n                        <div id={index} className={cardStyle.card}>\n                            <Card \n                                cardData={cardData} \n                                combat={true}\n                            />\n                        </div>\n                    </Swipeable>\n                    )\n                }\n            </div>\n        ) \n\n    }else{\n        return(\n            <div className={styles.handContainer}>\n                {\n                    player.hand.map( (cardData, index) =>\n                        <button key={index} className={cardStyle.cardButton} onClick={ () => onCardClick(index) }>\n                            <div className={cardStyle.card}>\n                                <Card \n                                    cardData={cardData} \n                                    combat={true}\n                                />\n                            </div>\n                        </button>                \n                    )\n                }                \n            </div>\n        )\n    }\n\n    \n}\n\nconst Hand = () => {\n    const dispatch = useDispatch()\n\n    return (\n        <div className = {styles.activeZone}>\n            <div className = {styles.hand}>\n                <Cards /> \n            </div>\n        </div>\n    );\n}\n\n\nexport default Hand;\n\n","import React from 'react';\nimport styles from './draw-zone.module.scss'\n\nimport { usePlayer } from '../../../ducks/player';\nimport { useDispatch } from 'react-redux'\n\n\nconst DrawZone = () =>{\n    const player = usePlayer();\n    const dispatch = useDispatch()\n\n    return(\n        <div className={styles.drawZone}>\n            <div className={styles.energy}>\n                ENERGY: \n                <div/>\n                {player.energy}\n            </div>\n            <div className={styles.deck}>\n                DECK: <div/> {player.deck.length}\n                {/* <div/> */}\n                {/* <button className={styles.devButton} onClick={ () => dispatch( drawCard() ) }> DRAW </button> */}\n            </div>\n        </div>\n    );\n}\n\n\nexport default DrawZone;\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { updateFoe } from './foe';\nimport { updatePlayer, discardHand, drawCard } from './player';\n\nexport const updateCombat = createAction('foe/UPDATE_COMBAT');\n\nconst initialState = {};\n\nexport default handleActions({\n    [updateCombat]: (state, action) => ({ ...state.combat, ...action.payload }),\n}, initialState);\n\n\n// how we grab data from the store\nconst selectCombat = createSelector(\n    state => state.combat,\n    combat => combat   \n)\n\nexport const useCombat = () => useSelector(selectCombat);\n\nexport const endTurn = () => (dispatch, getState) => {\n\n    var zone = document.getElementById('playerZone');\n    console.log(\"zone\", zone)\n\n    zone.style.height = \"40vh\"\n    zone.style.width = \"100vw\"\n    zone.style.backgroundColor = \"black\"\n    zone.style.opacity = .75\n    zone.style.position = \"absolute\"\n    zone.style.zIndex = 100\n\n    var turnBttn = document.getElementById('turnBttn');\n    \n\n    var combatMsgs = document.getElementById('combatMsgs');\n\n    combatMsgs.innerHTML = \"Foes Turn!\"\n    setTimeout( function()\n    { \n        combatMsgs.innerHTML = \"Waiting.\"; \n        dispatch( discardHand() )\n    }, 1000 );\n    setTimeout( function(){ combatMsgs.innerHTML = \"Waiting..\"; }, 1500 );\n    setTimeout( function(){ combatMsgs.innerHTML = \"Waiting...\"; }, 2000 );\n    \n    const state = getState()\n    const player = state.player\n    const foe = state.foe\n\n    const telegraphing = foe.telegraphing\n\n    if ( telegraphing[0].effect == \"damage\" ){\n        const dmg = telegraphing[0].power\n        const moveMsg = foe.name + \" uses \" + telegraphing[0].name + \" dealing\\n\" + telegraphing[0].power + \" dmg\"\n        setTimeout( function(){ combatMsgs.innerHTML = moveMsg }, 3000);\n\n        const trample = player.armor - dmg\n        if ( trample <= 0 ){\n            const newArmor = 0\n            const newHealth = player.health + trample\n            setTimeout( function(){ dispatch( updatePlayer({ health: newHealth, armor: newArmor }) ) },4000);\n            \n        } else {\n            const newArmor = trample\n            setTimeout( function(){ dispatch( updatePlayer({ armor: newArmor }) ) },4000);    \n        }\n        //  if players health drops to 0, exit game... do that later\n\n    } else if (telegraphing[0].effect == 'armor') {\n        const newFoeArmor = telegraphing[0].power\n        const moveMsg = foe.name + \" uses \" + telegraphing[0].name + \" gaining\\n\" + telegraphing[0].power + \" armor\"\n        setTimeout( function(){ combatMsgs.innerHTML = moveMsg }, 3000)\n        setTimeout( function(){ dispatch( updateFoe({ armor: newFoeArmor })) },4000);\n    }\n\n    // adding in a new foe effects...\n    // if ( telegraphing[0].effect == ) \n\n    const moves = foe.moves\n    const lengthOfMoves = Object.keys(moves).length\n    const position = telegraphing[0].order\n\n    if ( position + 1 < lengthOfMoves ) {\n        const newPos = position+1\n        const newTelegraph = moves.filter(obj => {\n            if (obj.order === newPos){\n                return obj\n            }\n        })\n        \n        console.log (\"new Telegraph\",newTelegraph)\n        setTimeout( function(){ dispatch( updateFoe({ telegraphing: newTelegraph }) )}, 4500)\n   \n    } else {\n        const newPos = 0\n        const newTelegraph = moves.filter(obj => {\n            if (obj.order == newPos){\n                return obj\n            }        \n        })        \n        console.log (\"new Telegraph\",newTelegraph)\n        setTimeout( function(){ dispatch( updateFoe({ telegraphing: newTelegraph }) )}, 4500)\n    }\n\n\n    // notify player foe turn is over, and their turn now begins...\n    // with that we have to reset player armor & energy\n    // could handle everything from getState and updates here...\n\n    // TODO: await (dispatch)... create a function with Await(game action),(how-long). ( A Promise )\n    setTimeout( function(){ combatMsgs.innerHTML = \"Foe's Turn Over\" }, 5000);\n    setTimeout( function(){ combatMsgs.innerHTML = \"Armor & Energy Reset\" }, 6000);\n    setTimeout( function(){ dispatch( updatePlayer({ energy: 3, armor:0 }) )}, 6100);\n    setTimeout( function(){ combatMsgs.innerHTML = \"Your Turn...\" }, 7000);\n    \n    setTimeout( function(){     \n        dispatch( drawCard() )\n    }, 7000);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n    }, 7300);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n    }, 7600);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n    }, 7900);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n        zone.style.height = \"0vh\"\n        zone.style.width = \"0vw\"\n\n        // turnBttn.cursor = \"allowed\";\n        // turnBttn.backgroundColor = \"darkslategrey\"\n        // turnBttn.style.opacity = 1\n\n    }, 8200);\n\n\n\n}","import React from 'react';\nimport styles from './turn-bttn.scss'\n\n// import { usePlayer, playCard } from '../../ducks/player';\nimport { useDispatch } from 'react-redux'\n\nimport { endTurn } from '../../../ducks/combat'\n\n\n\nconst TurnBttn = () =>{\n    // const player = usePlayer();\n    const dispatch = useDispatch();\n\n    const onBttnClick = () =>  dispatch(endTurn());\n\n    return(\n        <button id=\"turnBttn\" onClick={onBttnClick} className = {styles.devButton}>\n            [ END TURN ]\n        </button>\n    );\n}\n\n\nexport default TurnBttn;\n","import React from 'react';\nimport styles from './discard-zone.module.scss'\n\nimport { usePlayer, playCard, playIndexedCard } from '../../../ducks/player';\nimport { useDispatch } from 'react-redux'\n\nimport TurnBttn from '../turn-bttn';\n\nconst DiscardZone = () =>{\n    const player = usePlayer();\n    const dispatch = useDispatch();\n    return(\n        <div className = {styles.discardZone}>\n            <div className={styles.void}> \n                VOID: <div/> {player.voidDeck.length}\n            </div>\n            <br/>\n            <div className={styles.discard}>\n                DISCARD: <div/> {player.discard.length}\n            </div>\n            <br/>\n            <TurnBttn />\n        </div>\n    );\n}\n\n\nexport default DiscardZone;\n","import React from 'react';\nimport styles from './player-status.module.scss'\n\nimport { usePlayer } from '../../../ducks/player';\nimport { useEffect } from 'react';\n\n\n// function updateHealthBar(health, maxHealth){\n//     var bar = document.getElementById(\"playerHealthBar\")\n//     bar.style.backgroundColor = 'darkgreen'\n\n//     if (health == maxHealth){\n//         bar.style.height = \"4vh\"\n//         bar.style.width = \"80vw\"\n//     }\n\n//     if (health < maxHealth){\n//         const dmg = ((health/maxHealth)*80) // 80vw\n//         // const newBar = Math.ceil(health - dmg)\n//         bar.style.width = dmg + \"vw\"        \n//     }\n// }\n\n// function updateArmorBar(armor){\n//     var bar = document.getElementById(\"armorBar\")\n//     bar.style.backgroundColor = 'lightblue'\n//     bar.style.position = 'absolute'\n//     bar.style.opacity = '.75'\n\n//     if (armor == 0){\n//         bar.style.height = \"4vh\"\n//         bar.style.width = \"0vw\" // 80 is max armor... should reach that tho...\n//     }\n\n//     if (armor > 0 ){\n//         const newArmor = (armor/80) // 80vw\n//         bar.style.width = armor + \"vw\"        \n//     }\n// }\n\nconst PlayerStatus = () =>{\n\n    const player = usePlayer();\n\n    // useEffect( () => {\n    //     updateHealthBar(player.health, player.maxHealth)\n    // }, [player.health])\n\n    // useEffect( () => {\n    //     updateArmorBar(player.armor)\n    // }, [player.armor])\n    \n    return(\n        <div className = {styles.playerStatusContainer}>\n            <div className = {styles.playerGold}>\n                G: {player.gold}\n            </div>\n            \n            <div className = {styles.playerDefense}>\n                Defense: {player.armor}\n            </div>\n\n            <div className = {styles.playerHealth}>\n                ❤️ {player.health} / {player.maxHealth}\n            </div>\n\n            {/* <div className = {styles.playerHealthBorder}>  */}\n                {/* <div className = {styles.playerHealthIndicator}> */}\n                {/* </div> */}\n                {/* <div id=\"playerHealthBar\"> </div>  */}\n                {/* <div id=\"armorBar\"> </div> */}\n            {/* </div> */}\n            \n        </div>\n    );\n}\n\n\nexport default PlayerStatus;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./combat.module.scss\";\n\nimport { usePlayer, updatePlayer } from '../../../ducks/player';\n\nimport CombatZone from '../../combat-components/combat-zone';\n\nimport { updateScreen } from '../../../ducks/screen';\n\nimport Hand from '../../combat-components/hand';\nimport DrawZone from '../../combat-components/draw-zone';\nimport DiscardZone from '../../combat-components/discard-zone';\n\nimport { useFoe } from '../../../ducks/foe';\n\nimport { updateClimbState } from '../../../ducks/climbState';\n\nimport PartyStatus from '../../combat-components/player-status';\n\n\nconst CombatScreen = () => {\n    const { gold: loot } = useFoe();\n    const { health: foeHealth } = useFoe();\n    const player = usePlayer();\n\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        // This block of code only executes when foeHealth changes\n        if (foeHealth <= 0) {\n            dispatch( updateClimbState({ loot: loot, playerGold: player.gold }) )\n            dispatch( updatePlayer({ energy: 3, defense:0 }) )\n            dispatch( updateScreen('Resolution') ) \n        }\n    }, [foeHealth]);\n\n    useEffect(() => {\n        if (player.health <= 0) {\n            dispatch( updateClimbState({defeat:true}) )\n            dispatch( updatePlayer({ energy: 3, defense:0 }) )\n            dispatch( updateScreen('Resolution') ) \n        }\n    }, [player.health]);\n\n    return (\n    <div className={styles.game}>\n\n        <PartyStatus />\n\n        <div style={{zIndex: -1}}>\n            <CombatZone />\n        </div>\n\n        {/* make the combat messages toggle-able and keep message record... TODO! */}\n        <div id='combatZone' className={styles.combatZoneOverlay}>\n            <div id='combatMsgs' className={styles.combatMsgs}> COMBAT MSGS </div>\n        </div>\n\n        <div id='playerZone'></div>\n        <Hand />\n        <div className={styles.playerZone}> \n            <DrawZone />\n            <DiscardZone />\n        </div>\n            \n    </div>\n    );\n    \n}\n\n\nexport default CombatScreen;\n\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./resolution.module.scss\";\nimport { useClimbState } from '../../../ducks/climbState'\n\nimport { usePlayer, updatePlayer } from '../../../ducks/player';\n\nimport { updateScreen } from '../../../ducks/screen';\n\n\n// need to import reward cards...\n// select 3 random reward cards and display them.\n\n\n// for reward: body\n// import { drawHand, shuffleDeck, useCard } from '../../ducks/player';\n\n\nconst ResolutionScreen = () => {\n\n    const dispatch = useDispatch();\n    const climbState = useClimbState();\n\n    // console.log(player.gold)\n\n    let header = ''\n    let body = ''\n    let bttn = ''\n        \n    if ( !climbState.defeat ) {\n        header = 'VICTORY'\n        body = `You found G: +` + climbState.loot + ` \\n !!! Cards to come later...`\n        bttn = 'CONTINUE'\n        dispatch(updatePlayer({gold:climbState.playerGold + climbState.loot}))\n\n    } else {\n        header = 'DEFEAT'\n        body = 'You Lost!'\n        bttn = 'EXIT'\n    }\n\n    return (\n    <div className={styles.gameScreen}>\n        <div className={styles.menuContainer}>\n\n            <div className={styles.menuHeader}>\n                {header}\n            </div>\n\n            <div className={styles.menuBody}>\n                {body}\n            </div>\n\n            <div className={styles.menuFooter}>\n                <div className={styles.menuOption} onClick={() => dispatch(updateScreen('Map'))}>\n                    {bttn}\n                </div>\n            </div>\n\n        </div>\n    </div>\n    );\n    \n}\n\n\nexport default ResolutionScreen;\n\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./hero-selection.module.scss\";\n\n\nimport { gameState } from '../../../game-data/game-state';\nimport { updateClimbState } from '../../../ducks/climbState';\nimport { updatePlayer } from '../../../ducks/player'\nimport { heros } from '../../../game-data/heros-data'\nimport { updateScreen } from '../../../ducks/screen';\n\n// import { HeroDetail } from './hero-detail';\n\n\n// in this screen player chooses hero weapon / deck\n\nconst HeroSelection = () => {\n\n    const dispatch = useDispatch();\n\n    const onCardClick = (heroType) => {\n        console.log(heroType)\n        dispatch(updatePlayer(heros[0]))\n        dispatch(updateClimbState(gameState))\n        dispatch(updateScreen('Map'))\n        // will be changed to map screen.\n    }\n\n    return (\n        <div className={styles.gameScreen}>\n            <div className={styles.title} >CHOOSE YOUR HERO</div>\n\n            <div className={styles.menuContainer}>\n\n                <div onClick={ () => onCardClick('sword') } className={styles.heroContainer}>\n                    <div className={styles.heroTitle}> sword </div>\n                    <div className={styles.heroImg}></div>\n                </div>\n\n                {/* <div onClick={() => choice('staff')} className={styles.heroContainer}>\n                    <div className={styles.heroTitle}> staff </div>\n                    <div className={styles.heroImg}></div>\n                </div> */}\n            </div>\n        </div>\n    );\n}\n\n\nexport default HeroSelection;\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nexport const updateMap = createAction('map/UPDATE_MAP');\n\n\n// maybe add some trackers for trials, bonfires, elites & shops. To somehow limit or increase it?\n\nconst initialState = {\n    fieldEvent: \"event name\",\n    fieldPaths: 0,\n    fieldPathEvents: [],\n    count: 0\n}\n\n\nexport default handleActions({\n    [updateMap]: (state, action) => ({ ...state, ...action.payload }),\n}, initialState);\n\n\nconst selectMap = createSelector(\n    state => state.map,\n    map => map   \n)\n\nexport const useMap = () => useSelector(selectMap);\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nimport {cards} from \"../game-data/card-data\"\n\nexport const updateShop = createAction('shop/UPDATE_SHOP');\nexport const setupShop = createAction('shop/SETUP_SHOP');\n\nconst initialState = {\n    shopCards: []\n}\n\nfunction rollDice(max) {\n    return 1 + Math.floor(Math.random()*max)\n  }\n\nconst reduceSetUpShop = ({ shopCards, ...rest}) => {\n\n    console.log(\"0 : roll D10:\", rollDice(10))\n    console.log(\"1 : roll D10:\", rollDice(10))\n    console.log(\"2 : roll D10:\", rollDice(10))\n\n    let newShopCards = [...shopCards, cards[3], cards[3], cards[3] ]\n    return { ...rest, shopCards: newShopCards}\n}\n\n\nexport default handleActions({\n    [updateShop]: (state, action) => ({ ...state, ...action.payload }),\n    [setupShop]: reduceSetUpShop\n}, initialState);\n\n\nconst selectShop = createSelector(\n    state => state.shop,\n    shop => shop   \n)\n\nexport const useShop = () => useSelector(selectShop);\n\n\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport _, { random, isEmpty } from 'lodash';\nimport styles from \"./map.module.scss\";\n\n\nimport { useMap, updateMap } from '../../../ducks/map';\nimport { updateScreen } from '../../../ducks/screen';\n\n// For Combat:\nimport { usePlayer, drawHand, shuffleDeck, resetDeck } from '../../../ducks/player';\nimport { spawnFoe } from '../../../ducks/foe';\nimport { setupShop } from '../../../ducks/shop';\n\n\nfunction eventHandler(event, dispatcher){\n  console.log(\"EVENT:\", event)\n  switch (event) {\n    case '👹':\n      // for now... reset map after boss.\n      dispatcher(updateMap(startingField(3)));\n      dispatcher(updateScreen({count:0}));\n\n      // add argument for boss spawn..\n      // dispatcher(spawnFoe());\n      dispatcher(updateScreen('Title'));\n      break;\n    case '💢':\n      // TODO: make a elite fight ... so dispatch a elite...\n      dispatcher(spawnFoe());\n      dispatcher(resetDeck());\n      dispatcher(shuffleDeck());\n      dispatcher(drawHand());\n      // Load fight before screen update?\n      dispatcher(updateScreen('Combat'));\n      break;\n    case '🔥':\n      // TODO: set up rest, training & mending \n      dispatcher(updateScreen('Bonfire'));\n      break;\n    case '❗':\n      // TODO: set up a few trials for demo\n      dispatcher(updateScreen('Trial'));\n      break;\n    case '🕋':\n      dispatcher(setupShop());\n      dispatcher(updateScreen('Shop'));\n      break;\n    case '⚔️':\n      dispatcher(spawnFoe());\n      dispatcher(resetDeck());\n      dispatcher(shuffleDeck());\n      dispatcher(drawHand());\n      // Load fight before screen update?\n      dispatcher(updateScreen('Combat'));\n      break;\n\n    default:\n      break;\n  }\n}\n\nfunction rollDice(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; \n}\n\nfunction genPathLength(){\n  let length = rollDice(1,4)\n  let onesOdds = rollDice(0,50)\n\n  if (onesOdds == 0 && length == 1){\n    return 1\n  }\n  if (onesOdds < 1 && length == 3){\n    return 4\n  }\n  return length\n}\n\nfunction genEvent( roll, fightOdds, elieteOdds, bonfireOdds, trialOdds, shopOdds){\n  if ( roll < fightOdds){\n    return {  fieldEvent: '⚔️' }\n  }else if ( roll < elieteOdds ){\n    return {  fieldEvent: '💢' }\n  }else if ( roll < bonfireOdds ){\n    return {  fieldEvent: '🔥' }\n  }else if ( roll < trialOdds ){\n    return {  fieldEvent: '❗' }\n  }else if ( roll < shopOdds){\n    return {  fieldEvent: '🕋' }\n  }else{\n    return {  fieldEvent: '⚔️' }\n  }\n}\n\nfunction genPath( pathLength, setEvent ){\n\n  if ( setEvent ){\n    \n    let events = []\n    for (let e = 0; e < pathLength; e++) {\n      let roll = rollDice(0,101);\n      events.push(genEvent(roll, 70, 85, 100, 0, 0))\n    }\n\n    return({\n      fieldEvent: setEvent,\n      fieldPaths: pathLength,\n      fieldPathEvents: events\n    })\n\n  }else{\n\n    // generate paths\n    let events = []\n    for (let e = 0; e < pathLength; e++) {\n      let roll = rollDice(0,101);\n      events.push(genEvent(roll, 70, 90, 100))\n    }\n\n    // generate field of said paths\n    let roll = rollDice(0,101);\n    return({\n      fieldEvent: genEvent(roll, 70, 80, 87, 95, 100).fieldEvent,\n      fieldPaths: pathLength,\n      fieldPathEvents: events\n    })\n\n  }\n}\n\nfunction fillPaths( numberOfPaths, setEvent) {\n  const paths = []\n\n  for (let p = 0; p < numberOfPaths; p++) {\n    // Gen a new number of paths per field choice\n    paths.push( genPath( genPathLength(), setEvent ))\n  }\n\n  return paths\n}\n\nfunction startingField(startingPaths){\n  let newField = {\n    fieldEvent: 'START',\n    fieldPaths: startingPaths,\n    fieldPathEvents: fillPaths(startingPaths, '⚔️'),\n    count: 0\n  }\n  return newField\n}\n\nfunction createField( fieldEvents, fieldCount ){\n  let pathLength = 0\n  let fieldBatch = []\n\n  if ( fieldCount === 7){\n    for (let i = 0; i < fieldEvents.length; i++) {\n      fieldBatch.push({\n        fieldEvent: fieldEvents[i].fieldEvent,\n        fieldPaths: 0,\n        fieldPathEvents: [{\n          fieldEvent: \"👹\"\n        }]\n      })\n    }\n  }else{\n    for (let i = 0; i < fieldEvents.length; i++) {\n      pathLength = genPathLength()\n      fieldBatch.push({\n        fieldEvent: fieldEvents[i].fieldEvent,\n        fieldPaths: pathLength,\n        fieldPathEvents: fillPaths(pathLength)\n      })\n    }\n  }\n\n  return fieldBatch\n}\n\nconst MapScreen = () => {\n\n  const dispatch = useDispatch();\n  const currentField = useMap();\n  const UsePlayer = usePlayer();\n\n\n  useEffect(() => {\n    if (currentField.count === 0){\n      dispatch(updateMap(startingField(3)))\n    }\n  }, []);\n  \n\n  const onPathSelection = (field) => {\n    let newField = {}\n\n    // check if the next event is going to be floor boss:\n    let isBossNext = field.fieldPathEvents.find( fields => fields.fieldEvent === \"👹\" )\n    \n    if ( isBossNext ){\n      newField = {\n        fieldEvent: field.fieldEvent,\n        fieldPaths: 1,\n        fieldPathEvents: [{\n            fieldEvent: \"👹\",\n            fieldPaths: 0,\n          fieldPathEvents: []\n        }],\n        count: currentField.count + 1\n      }\n    }else{\n      newField = {\n        fieldEvent: field.fieldEvent,\n        fieldPaths: field.fieldPathEvents.length,\n        fieldPathEvents: createField(field.fieldPathEvents, currentField.count),\n        count: currentField.count + 1\n      }\n    }\n    // update map...\n    dispatch(updateMap(newField))\n    eventHandler(newField.fieldEvent, dispatch)\n  }\n\n\n  return (\n    <div className={styles.screenContainer}>\n      <div className={styles.screen}>\n        \n        <div className={styles.screenHeader}>\n          <strong style={{color:'red', margin:'10px' }}> ❤️ {UsePlayer.health}/{UsePlayer.maxHealth}</strong>\n          <strong style={{color:'gold', margin:'10px'}}> 💰{UsePlayer.gold}</strong>\n        </div>\n\n        <div className={styles.screenBody}>\n\n          <div className={styles.mapContainer}>\n            <h1> Field Event: {currentField.fieldEvent}</h1>\n\n            <div style={{display:'flex', flexDirection:'row',}}>\n              {currentField.fieldPathEvents.map( (field, index) =>\n                <button key={index} className={styles.pathButton} onClick={() => onPathSelection(field)}>\n                    <h2>{field.fieldEvent}</h2>\n                    {field.fieldPathEvents.map( (e, index) => \n                      <div key={index} style={{display:'flex', margin:'2px', opacity:'.5'}}>\n                        {e.fieldEvent}\n                      </div>\n                    )}\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className={styles.legendContainer}>\n            <div className={styles.legendTitle}>LEGEND:</div>\n            <div className={styles.legendItem}> FIGHT : ⚔️</div>\n            <div className={styles.legendItem}> ELITE : 💢</div>\n            <div className={styles.legendItem}> BONFIRE : 🔥</div>\n            <div className={styles.legendItem}> TRIAL : ❗</div>\n            <div className={styles.legendItem}> SHOP : 🕋</div>\n            <div className={styles.legendItem}> BOSS : 👹</div>\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n  );\n\n}\n\n\nexport default MapScreen;\n\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./shop.module.scss\";\n\nimport { useClimbState } from '../../../ducks/climbState'\nimport { usePlayer, updatePlayer } from '../../../ducks/player';\nimport { updateScreen } from '../../../ducks/screen';\n\n// import cardData from '../../../game-data/card-data'\n\nimport Card from '../../card'\nimport { updateShop, setupShop, useShop } from '../../../ducks/shop';\n\nconst ShopScreen = () => {\n\n    const dispatch = useDispatch();\n    const climbState = useClimbState();\n    const shop = useShop();\n    const player = usePlayer();\n \n        \n    return (\n    <div className={styles.screenContainer}>\n        <div className={styles.screen}>\n\n            <h1>SHOP</h1>\n            <br />\n            <div>\n                G: {player.gold}\n            </div>\n            <br />\n\n            <div style={{display: 'flex', flexDirection: 'column'}}>\n                <div style={{display: 'flex', flexDirection: 'row'}}>\n                    {shop.shopCards.map( (cardData, index) => \n                        <button key={index} className={styles.customButton}>\n                            <Card cardData={cardData} combat={false} />\n                        </button>\n                    )}\n                </div>\n            </div>\n            <br />\n\n            <div>\n                <button onClick={() => dispatch( updateScreen('Map') ) }>\n                    RETURN TO MAP\n                </button>\n            </div>\n\n        </div>\n    </div>\n    );\n    \n}\n\n\nexport default ShopScreen;\n\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./bonfire.module.scss\";\n\nimport { useClimbState } from '../../../ducks/climbState'\nimport { usePlayer, updatePlayer } from '../../../ducks/player';\nimport { updateScreen } from '../../../ducks/screen';\n\n// import cardData from '../../../game-data/card-data'\n\nimport Card from '../../card'\nimport { updateShop, setupShop, useShop } from '../../../ducks/shop';\n\nfunction handleOption(option, dispatch){\n    switch (option) {\n        case 'train':\n            // let player know what happend with animation of sorts.\n            dispatch(updateScreen('Map'))\n        case 'rest':\n            dispatch(updateScreen('Map'))\n        case 'mend':\n            dispatch(updateScreen('Map'))\n    }\n}\n\nconst BonfireScreen = () => {\n\n    const dispatch = useDispatch();\n    const climbState = useClimbState();\n    const shop = useShop();\n    const player = usePlayer();\n\n\n    return (\n    <div className={styles.screenContainer}>\n        <div className={styles.screen}>\n\n\n        <h1>🔥 Bonfire 🔥 </h1>\n\n        <h4>❤️{player.health}</h4>\n\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n            <div style={{display: 'flex', flexDirection: 'row'}}>\n                <button className={styles.bonfireOption} onClick={() => handleOption('train', dispatch)}>🗻 TRAIN </button>\n                <button className={styles.bonfireOption} onClick={() => handleOption('rest', dispatch)}>🔥 REST </button>\n                <button className={styles.bonfireOption} onClick={() => handleOption('mend', dispatch)}>✨ MEND </button>\n            </div>\n        </div>\n\n        <div>\n            <button onClick={() => dispatch( updateScreen('Map') ) }>\n                RETURN TO MAP\n            </button>\n        </div>\n\n        </div>\n    </div>\n    );\n}\n\nexport default BonfireScreen;\n","import React from 'react';\nimport Title from './components/screens/title';\nimport Combat from './components/screens/combat';\nimport Resolution from './components/screens/resolution';\nimport HeroSelection from './components/screens/hero-selection';\nimport Map from './components/screens/map';\nimport Shop from './components/screens/shop';\nimport Bonfire from './components/screens/bonfire';\nimport Trial from './components/screens/trial';\n\nimport { useScreen } from './ducks/screen';\n\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\n\nconst screens = {\n  Title,\n  Combat,\n  Resolution,\n  HeroSelection,\n  Map,\n  Shop,\n  Bonfire,\n  Trial\n}\n\nconst App = () => {\n  const screen = useScreen();\n  const Screen = screens[screen];\n\n  const handle = useFullScreenHandle();\n  \n  return (\n    <>\n    <button onClick={handle.enter}>\n      Enter fullscreen\n    </button>\n\n    <FullScreen handle={handle}>\n      <Screen />\n    </FullScreen>\n    \n    </>\n  )\n\n}\n\nexport default App\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./trial.module.scss\";\n\nimport { useClimbState } from '../../../ducks/climbState'\nimport { usePlayer, updatePlayer } from '../../../ducks/player';\nimport { updateScreen } from '../../../ducks/screen';\n\nimport Card from '../../card'\nimport { updateShop, setupShop, useShop } from '../../../ducks/shop';\n\nconst TrialScreen = () => {\n\n    const dispatch = useDispatch();\n    const climbState = useClimbState();\n    const player = usePlayer();\n\n\n    return (\n    <div className={styles.screenContainer}>\n        <div className={styles.screen}>\n\n        <div className={styles.trialTitle}>\n            Trial Title\n            <h4>❤️{player.health}</h4>\n        </div>\n\n        <div className={styles.artContainer}>\n            <h4> trial art here </h4>\n        </div>\n\n        <div className={styles.trialInfoContainer}>\n            <div className={styles.trialDescription}>\n                <h5> trial description </h5>\n                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor...  \n            </div>\n\n            <div className={styles.trialOptionsContainer}>\n                <button className={styles.trialOptions} onClick={() => dispatch( updateScreen('Map') ) }>Attempt...</button>\n                <button className={styles.trialOptions} onClick={() => dispatch( updateScreen('Map') ) }>Run...</button>\n                <button className={styles.trialOptions} onClick={() => dispatch( updateScreen('Map') ) }>Bargin...</button>\n            </div>\n        </div>\n\n\n        </div>\n    </div>\n    );\n}\n\nexport default TrialScreen;\n","import { combineReducers } from 'redux';\nimport player from './player';\nimport foe from './foe';\nimport screen from './screen';\nimport combat from './combat';\nimport climbState from './climbState';\nimport map from './map';\nimport shop from './shop';\n\nexport default combineReducers({\n    player,\n    foe,\n    screen,\n    combat,\n    climbState,\n    map,\n    shop\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport { Provider } from 'react-redux'\nimport configureStore from './configurestore'\n\nconst rootElement = document.getElementById('root');\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    rootElement\n);\n","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport rootReducer from './ducks/'\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers)\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n  return store;\n}\n\n\n"],"sourceRoot":""}