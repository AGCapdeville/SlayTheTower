{"version":3,"sources":["components/hero/hero.module.scss","components/card/card.module.scss","components/screens/map/map.module.scss","components/screens/trial/trial.module.scss","components/screens/bonfire/bonfire.module.scss","components/combat-components/combat-zone/foe-zone/foe-zone.module.scss","components/monsters/fire/fire.module.scss","components/screens/resolution/resolution.module.scss","components/screens/hero-selection/hero-selection.module.scss","components/screens/title/title.module.scss","components/combat-components/combat-log/combat-log.module.scss","components/monsters/slime/slime.module.scss","components/combat-components/discard-zone/discard-zone.module.scss","components/combat-components/player-status/player-status.module.scss","components/combat-components/combat-zone/combat-zone.module.scss","components/combat-components/hand/hand.module.scss","components/combat-components/draw-zone/draw-zone.module.scss","components/screens/shop/shop.module.scss","components/transition/transition.module.scss","components/screens/combat/combat.module.scss","sound_clips/play_card_zapsplat_foley.mp3","sound_clips/error_sound.mp3","components/combat-components/combat-zone/hero-zone/hero-zone.module.scss","sound_clips/menu_select.mp3","ducks/screen.js","game-data/monster-data.js","ducks/monster.js","ducks/combat.js","ducks/player.js","game-data/card-data.js","game-data/heros-data.js","ducks/game_state.js","game-data/game-state.js","components/screens/title/title.jsx","components/monsters/slime/slime.jsx","components/combat-components/combat-zone/foe-zone/foe-zone.jsx","components/monsters/fire/fire.jsx","components/hero/hero.jsx","components/combat-components/combat-zone/hero-zone/hero-zone.jsx","components/combat-components/combat-zone/combat-zone.jsx","components/card/card.jsx","components/combat-components/hand/hand.jsx","components/combat-components/draw-zone/draw-zone.jsx","components/combat-components/discard-zone/discard-zone.jsx","components/combat-components/combat-log/combat-log.jsx","components/combat-components/player-status/player-status.jsx","components/screens/combat/combat.jsx","components/screens/resolution/resolution.jsx","components/screens/hero-selection/hero-selection.jsx","ducks/map.js","ducks/shop.js","components/screens/map/map.jsx","components/screens/shop/shop.jsx","components/screens/bonfire/bonfire.jsx","components/screens/trial/trial.jsx","game-data/tracks.js","ducks/music.js","components/music/music.jsx","components/transition/transition.jsx","App.js","ducks/index.js","index.js","configurestore.js"],"names":["module","exports","updateScreen","createAction","handleActions","state","action","transition_animation","payload","selectScreen","createSelector","screen","useScreen","useSelector","toScreen","transitionTime","document","getElementById","animate","opacity","backgroundColor","zIndex","duration","iterations","monsters","name","aligment","aligmentDuration","health","total","defense","gold","telegraphing","order","target","effect","power","moves","spawnMonster","updateMonster","spawnFloorBoss","find","m","selectMonster","monster","useMonster","updateCombat","logCombat","combatLog","origin","description","selectCombat","combat","endTurn","dispatch","getState","playerOverlay","style","height","width","position","bottom","setTimeout","discardHand","player","index","length","parseInt","utilityHeroAilgmentsDuration","splice","reduceMonsterAligments","includes","dmg","moveMsg","trample","newHealth","updatePlayer","newDefense","lengthOfMoves","Object","keys","newPos","newTelegraph","filter","obj","console","log","offenseHeroAilgments","offenseHeroAilgmentsDuration","utilityHeroAilgments","defenseHeroAilgments","defenseHeroAilgmentsDuration","reduceAligments","energy","drawCard","setDeck","playCard","playIndexedCard","voidCard","shuffleDeck","resetDeck","drawHand","shuffle","deck","j","x","i","Math","floor","random","slice","hand","discard","voidDeck","rest","newDeck","shuffledDiscard","grabCard","newHand","newDiscard","emptyHand","voidPile","void","selectPlayer","usePlayer","heroStrikeAnimation","heroElement","transform","applyCard","cardIndex","card","energyCost","standing","requiredHeros","offHeroStanding","offenseHeroStatus","defHeroStanding","defenseHeroStatus","utilHeroStanding","utilityHeroStatus","checkStanding","requiredHero","foeDefense","cardSounds","createElement","mageBody","shieldBody","swordBody","energyText","src","cardSuccess","play","choice","moveHero","newEnergy","newFoeHealth","push","newPlayerHealth","maxHealth","newPlayerDefense","cardError","cards","art","type","exhaust","cost","heros","utilityHero","offenseHero","defenseHero","map","id","items","updateGameState","defeat","playerScore","selectGameState","game_state","useGameState","gameState","TitleScreen","useDispatch","useFullScreenHandle","className","titleStyle","game","title","menu","onClick","Slime","styles","monsterContainer","slime","rightEye","leftEye","monsterList","Fire","spike","spikeL","spikeR","triEye","FoeZone","foeHealth","foeMax","Monster","telegraph","getTelegraph","useEffect","newBar","ceil","updateFoeHealthBar","updateFoeDefBar","foeZone","foe","foeTitle","foeHealthBorder","foeHealthIndicator","Hero","props","heroType","heroContainer","heroBody","headContainer","hood","headMageHero","chest","waist","staff","heroHandRight","heroHandLeft","koHeroBody","koHood","koHeadMageHero","koChest","koStaff","headSwordHero","swordContainer","swordHilt","grippedHands","swordTip","swordPattern","headShieldHero","shield","HeroZone","heroColumn","status","CombatZone","combatZone","foeContainer","Card","cardFace","titleSection","cardData","cardArt","cardDescription","costRow","reqHeros","whiteDot","redDot","blueDot","greenDot","requiredHeroIcon","Cards","onCardClick","handContainer","key","cardStyle","cardButton","Hand","activeZone","DrawZone","drawZone","fontSize","DiscardZone","discardZone","devButton","CombatLog","combatLogHeader","scrollableLog","heroLog","monsterLog","PlayerStatus","playerStatusContainer","playerGold","playerDefense","playerHealth","CombatScreen","loot","playerZone","ResolutionScreen","header","body","bttn","gameScreen","menuContainer","menuHeader","menuBody","menuFooter","menuOption","HeroSelection","heroTitle","heroImg","updateMap","fieldEvent","fieldPaths","fieldPathEvents","count","selectMap","updateShop","setupShop","rollDice","max","shopCards","newShopCards","selectShop","shop","min","genPathLength","onesOdds","genEvent","roll","fightOdds","elieteOdds","bonfireOdds","trialOdds","shopOdds","genPath","pathLength","setEvent","events","e","fillPaths","numberOfPaths","paths","p","startingField","startingPaths","createField","fieldEvents","fieldCount","fieldBatch","MapScreen","currentField","UsePlayer","onPathSelection","field","newField","fields","event","dispatcher","eventHandler","screenContainer","screenHeader","color","margin","screenBody","mapContainer","display","flexDirection","pathButton","legendContainer","legendTitle","legendItem","ShopScreen","handleOption","option","restB","resurectB","trainB","disabled","healthPoints","twentyFivePercent","playMenuSound","sounds","menuSound","volume","BonfireScreen","heroLineUp","onMouseEnter","bonfireOption","subtext","updateGame","TrialScreen","trialTitle","artContainer","trialInfoContainer","trialDescription","trialOptionsContainer","trialOptions","track_list","for","artist","path","setTrack","load","loop","mute","updateVolume","initialState","curr_track","is_playing","is_looping","is_muted","curr_volume","parseFloat","track","autoplay","muted","reduceUpdateVoulme","selectMusic","music","Music","screenTrack","String","playButton","musicToggle","innerHTML","muteToggleButton","onChange","value","Transition","overlay","screens","Title","Combat","Resolution","Map","Shop","Bonfire","Trial","App","Screen","handle","enter","combineReducers","rootElement","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","rootReducer","configureStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.bc503095.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"heroContainer\":\"hero_heroContainer__1nv9h\",\"hood\":\"hero_hood__bdzJZ\",\"idle\":\"hero_idle__3omxh\",\"headContainer\":\"hero_headContainer__3IgWc\",\"headMageHero\":\"hero_headMageHero__gq_MW\",\"headSwordHero\":\"hero_headSwordHero__2vSsO\",\"headShieldHero\":\"hero_headShieldHero__1rkOT\",\"heroBody\":\"hero_heroBody__22OY8\",\"koHeroBody\":\"hero_koHeroBody__3LNkH\",\"chest\":\"hero_chest__1PQnz\",\"koChest\":\"hero_koChest__3XBbc\",\"waist\":\"hero_waist__KTNY5\",\"heroMove\":\"hero_heroMove__3vAuj\",\"staff\":\"hero_staff__1HoBV\",\"staffIdle\":\"hero_staffIdle__2-Pj4\",\"aniCast\":\"hero_aniCast__1S6BO\",\"staffSwing\":\"hero_staffSwing__2Uapv\",\"koStaff\":\"hero_koStaff__2FZzg\",\"fall\":\"hero_fall__3BWHm\",\"staffFall\":\"hero_staffFall__2Clac\",\"heroHandRight\":\"hero_heroHandRight__Nt5DM\",\"heroHandLeft\":\"hero_heroHandLeft__4sBAP\",\"swordContainer\":\"hero_swordContainer__1Y_t6\",\"grippedHands\":\"hero_grippedHands__3pzNi\",\"swordHilt\":\"hero_swordHilt__2uYP9\",\"swordIdle\":\"hero_swordIdle__3kXl0\",\"swordTip\":\"hero_swordTip__2h5Uk\",\"swordPattern\":\"hero_swordPattern__pI-17\",\"aniSwing\":\"hero_aniSwing__2S5VX\",\"swingSword\":\"hero_swingSword__wsc_D\",\"shield\":\"hero_shield__3IY5g\",\"shieldIdle\":\"hero_shieldIdle__1Rny_\",\"aniBash\":\"hero_aniBash__1nRJP\",\"shieldBash\":\"hero_shieldBash__30qzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardButton\":\"card_cardButton__3vSh7\",\"card\":\"card_card__1f1QP\",\"cardFace\":\"card_cardFace__3qGSw\",\"cardArt\":\"card_cardArt__2M4gI\",\"titleSection\":\"card_titleSection__ELNaR\",\"title\":\"card_title__3ghvj\",\"costRow\":\"card_costRow__3F4mP\",\"energy\":\"card_energy__3iq9D\",\"requiredHero\":\"card_requiredHero__1enB_\",\"cardDescription\":\"card_cardDescription__3up_e\",\"redDot\":\"card_redDot__12nHq\",\"blueDot\":\"card_blueDot__3CR05\",\"greenDot\":\"card_greenDot__1yGiB\",\"whiteDot\":\"card_whiteDot__1WBvz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenContainer\":\"map_screenContainer__138NT\",\"screen\":\"map_screen__2h83O\",\"screenHeader\":\"map_screenHeader__1MEZg\",\"screenBody\":\"map_screenBody__2Zi0a\",\"mapContainer\":\"map_mapContainer__1VYi0\",\"pathButton\":\"map_pathButton__2TJoE\",\"legendContainer\":\"map_legendContainer__1hI7J\",\"legendTitle\":\"map_legendTitle__3LxL3\",\"legendItem\":\"map_legendItem__3Hu8z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenContainer\":\"trial_screenContainer__29DCd\",\"screen\":\"trial_screen__1mSLQ\",\"trialTitle\":\"trial_trialTitle__3wuft\",\"artContainer\":\"trial_artContainer__1At8-\",\"trialInfoContainer\":\"trial_trialInfoContainer__zoS1F\",\"trialDescription\":\"trial_trialDescription__2EuTV\",\"trialOptions\":\"trial_trialOptions__XiCBJ\",\"trialOptionsContainer\":\"trial_trialOptionsContainer__3TE8f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bonfireOption\":\"bonfire_bonfireOption__1bqrs\",\"subtext\":\"bonfire_subtext__3jkv9\",\"screenContainer\":\"bonfire_screenContainer__2ZYo2\",\"screen\":\"bonfire_screen__3Ybym\",\"heroLineUp\":\"bonfire_heroLineUp__2Novw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"telegraph\":\"foe-zone_telegraph__2A7Jx\",\"foeTitle\":\"foe-zone_foeTitle__2pI1i\",\"foeZone\":\"foe-zone_foeZone__xlu-7\",\"foe\":\"foe-zone_foe__29CPk\",\"foeImg\":\"foe-zone_foeImg__2ecbF\",\"foeHealthBorder\":\"foe-zone_foeHealthBorder__1OcwE\",\"foeHealthBar\":\"foe-zone_foeHealthBar__3xALw\",\"foeHealthIndicator\":\"foe-zone_foeHealthIndicator__22-Nd\",\"monsterContainer\":\"foe-zone_monsterContainer__1C5WD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monsterContainer\":\"fire_monsterContainer__1vGua\",\"spike\":\"fire_spike__2jzLI\",\"fireIdle\":\"fire_fireIdle__6av27\",\"spikeL\":\"fire_spikeL__3ipDQ\",\"spikeR\":\"fire_spikeR__ZsJaf\",\"triEye\":\"fire_triEye__3UYDk\",\"tryEyeAni\":\"fire_tryEyeAni__3FVyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameScreen\":\"resolution_gameScreen__2Z8U2\",\"menuContainer\":\"resolution_menuContainer__N4HIa\",\"menuHeader\":\"resolution_menuHeader__3J5Ta\",\"menuBody\":\"resolution_menuBody__2AC6R\",\"menuFooter\":\"resolution_menuFooter__6HZ2y\",\"menuOption\":\"resolution_menuOption__1mI4y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameScreen\":\"hero-selection_gameScreen__CCdN_\",\"menuContainer\":\"hero-selection_menuContainer__gH6KW\",\"heroContainer\":\"hero-selection_heroContainer__3o7wE\",\"heroTitle\":\"hero-selection_heroTitle__1tGMV\",\"heroImg\":\"hero-selection_heroImg__1gPUg\",\"title\":\"hero-selection_title__JAIMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"title_game__y3Wr0\",\"menu\":\"title_menu__2pkpl\",\"title\":\"title_title__2XrX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"combatLog\":\"combat-log_combatLog__2qqWk\",\"combatLogHeader\":\"combat-log_combatLogHeader__2kCz6\",\"scrollableLog\":\"combat-log_scrollableLog__36g4E\",\"heroLog\":\"combat-log_heroLog__3F6z8\",\"monsterLog\":\"combat-log_monsterLog__2zD7b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monsterContainer\":\"slime_monsterContainer__3X3Wi\",\"slime\":\"slime_slime__29uu9\",\"slimeIdle\":\"slime_slimeIdle__1OwCd\",\"rightEye\":\"slime_rightEye__3n_IF\",\"leftEye\":\"slime_leftEye__kH1ps\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discardZone\":\"discard-zone_discardZone__38wSB\",\"void\":\"discard-zone_void__HIbIv\",\"discard\":\"discard-zone_discard__2rdot\",\"devButton\":\"discard-zone_devButton__389Dw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerStatusContainer\":\"player-status_playerStatusContainer__3Ki3i\",\"playerHealth\":\"player-status_playerHealth__10Z4s\",\"playerGold\":\"player-status_playerGold__DvRWe\",\"playerDefense\":\"player-status_playerDefense__Df9yt\",\"playerHealthBorder\":\"player-status_playerHealthBorder__3xFdO\",\"playerHealthIndicator\":\"player-status_playerHealthIndicator__2zOpi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"combatZone\":\"combat-zone_combatZone__3hbN6\",\"partyHealthZone\":\"combat-zone_partyHealthZone__1GA_A\",\"heroContainer\":\"combat-zone_heroContainer__1ktU4\",\"foeContainer\":\"combat-zone_foeContainer__y-Yjk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeZone\":\"hand_activeZone__e-fVo\",\"handContainer\":\"hand_handContainer__2Ctxp\",\"hand\":\"hand_hand__27tNn\",\"swipeContainer\":\"hand_swipeContainer__zU6i5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawZone\":\"draw-zone_drawZone__BCzkT\",\"energy\":\"draw-zone_energy__3fhc4\",\"deck\":\"draw-zone_deck__2V8oB\",\"devButton\":\"draw-zone_devButton__zQXGR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardButton\":\"shop_cardButton__1Vhul\",\"screenContainer\":\"shop_screenContainer__3zudU\",\"screen\":\"shop_screen__gdpAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"transition_overlay__2Qa0j\",\"aniFade\":\"transition_aniFade__3JkE-\",\"fadeOut\":\"transition_fadeOut__OSVbp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"combat_game__bGecB\",\"playerZone\":\"combat_playerZone__35zL5\",\"combatZoneOverlay\":\"combat_combatZoneOverlay__3p0qS\"};","module.exports = __webpack_public_path__ + \"static/media/play_card_zapsplat_foley.dc8b7ab4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/error_sound.12329e7a.mp3\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"herColumn\":\"hero-zone_herColumn__359lf\",\"offHero\":\"hero-zone_offHero__EIBwo\",\"defHero\":\"hero-zone_defHero__1usiC\",\"utilHero\":\"hero-zone_utilHero__3Iv2m\",\"heroContainer\":\"hero-zone_heroContainer__2huL_\"};","module.exports = __webpack_public_path__ + \"static/media/menu_select.90345373.mp3\";","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { act } from \"react-dom/test-utils\";\n\nimport {transition_style} from '../components/transition/transition.module.scss'\n\n\nexport const updateScreen = createAction('screen/UPDATE_SCREEN');\n\nconst initialSreenState = 'Title';\n\n\nexport default handleActions({\n    [updateScreen]: (state, action) => {\n        transition_animation(action.payload)\n        return(state=action.payload)\n    },\n}, initialSreenState);\n\nconst selectScreen = createSelector(\n    state => state.screen,\n    screen => screen   \n)\n\nexport const useScreen = () => useSelector(selectScreen);\n\n\nexport const transition_animation = (toScreen) => {\n\n    let overlayT = document.getElementById(\"overlayT\");\n\n    let transitionTime = 1000;\n\n    if (toScreen === 'Combat'){\n        transitionTime = 600;\n    }\n    if (toScreen === 'Resolution'){\n        transitionTime = 300;\n    }\n\n    overlayT.animate([\n        {opacity: 1, backgroundColor: 'white', zIndex: 100},\n        {opacity: 1, backgroundColor: 'black', zIndex: 100},\n        {opacity: 0, zIndex: 100 }\n    ], {\n        duration: transitionTime,\n        iterations: 1\n    });\n}\n","export const monsters = [\n    {\n        name: 'Slime',\n        aligment: [],\n        aligmentDuration: [],\n        // health: 36, <- normal health\n        health: 10,\n        total: 36,\n        defense: 0,\n        gold: 10,\n        telegraphing: [{ \n                name: ['Spit'],\n                order: 0,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [8]\n            }],\n        moves: [\n            {\n                name: ['Spit'],\n                order: 0,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [8]\n            },\n            {\n                name: ['Whip'],\n                order: 1,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [13]\n            },\n            {\n                name : ['Soften'],\n                order: 2,\n                target: ['self'],\n                effect: ['defense'],\n                power: [12]\n            }\n        ]\n    },\n    {\n        name: 'Fire',\n        aligment: [],\n        aligmentDuration: [],\n        // health: 36, <- normal health\n        health: 40,\n        total: 40,\n        defense: 0,\n        gold: 30,\n        telegraphing: [{ \n                name: ['Spit'],\n                order: 0,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [8]\n            }],\n        moves: [\n            {\n                name: ['Spit'],\n                order: 0,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [8]\n            },\n            {\n                name: ['Whip'],\n                order: 1,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [13]\n            },\n            {\n                name : ['Soften'],\n                order: 2,\n                target: ['self'],\n                effect: ['defense'],\n                power: [12]\n            }\n        ]\n    }\n]","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { monsters } from '../game-data/monster-data';\n\n// export const setFoeName = createAction('foe/SET_FOE_NAME');\n// export const setFoeImg = createAction('foe/SET_FOE_IMG');\n// export const setFoeTotalHealth = createAction('foe/SET_FOE_TOTAL_HEALTH');\n// export const setFoeMoves = createAction('foe/SET_FOE_MOVES');\nexport const spawnMonster = createAction('monster/SPAWN_MONSTER');\nexport const updateMonster = createAction('monster/UPDATE_MONSTER');\nexport const spawnFloorBoss = createAction('monster/SPAWN_FLOOR_BOSS');\nconst initialState = { };\n\n// name: 'Slime',\n// health: 10,\n// totalHealth: 10,\n// defense: 0,\n// telegraphing: ['damage 5'],\n// moves: {\n//     'whip':{\n//         priority: 0,\n//         target: ['hero'],\n//         effect: ['damage'],\n//         power: [5]\n//     },\n//     'spit':{\n//         priority: 1,\n//         target: ['hero'],\n//         effect: ['damage'],\n//         power: [8]\n//     },\n//     'soften':{\n//         priority: 1,\n//         target: ['self'],\n//         effect: ['defense'],\n//         power: [12]\n//     }\n// }\n\n\nexport default handleActions({\n    [spawnMonster]: (state, action) => ({\n        ...state, \n        ...monsters.find( m => action.payload === m.name),\n    }),\n    [spawnFloorBoss]: (state, action) => ({...state, ...action.payload}),\n    [updateMonster]: (state, action) => {\n        return ({ ...state, ...action.payload })\n    },\n}, initialState);\n\n\n// how we grab data from the store\nconst selectMonster = createSelector(\n    state => state.monster,\n    monster => monster   \n)\n\nexport const useMonster = () => useSelector(selectMonster);\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { updateMonster } from './monster';\n\nimport { updatePlayer, discardHand, drawCard } from './player';\n\n\nexport const updateCombat = createAction('combat/UPDATE_COMBAT');\nexport const logCombat = createAction('combat/LOG_COMBAT');\nexport const resetCombatLog = createAction('combat/RESET_COMBAT_LOG');\n\nconst initialState = {\n    combatLog : \n        [{\n            origin: 'player',\n            description: 'Start of combat'\n        }]\n};\n\nexport default handleActions({\n    [updateCombat]: (state, action) => ({ ...state, ...action.payload }),\n    [logCombat]: (state, action) => ({ ...state.combatLog, combatLog: [...state.combatLog, action.payload] })\n}, initialState);\n\n\n// how we grab data from the store\nconst selectCombat = createSelector(\n    state => state.combat,\n    combat => combat   \n)\n\nexport const useCombat = () => useSelector(selectCombat);\n\n\nfunction strikeAnimation(bodyElement){\n\n    setTimeout( function(){\n        bodyElement.style.marginLeft = '15px';\n    }, 300)\n        \n    setTimeout( function(){\n        bodyElement.style.marginLeft = '10px';\n    }, 100)\n    \n    setTimeout( function(){\n        bodyElement.style.marginLeft = '0px';\n    }, 200)\n\n    setTimeout( function(){\n        bodyElement.style.marginLeft = '5px';\n    }, 240)\n}\n\nfunction damageFlash(bodyElement){\n\n    setTimeout( function(){\n        bodyElement.style.opacity = 1;\n    }, 300)\n        \n    setTimeout( function(){\n        bodyElement.style.opacity = .75;\n    }, 100)\n\n    setTimeout( function(){\n        bodyElement.style.opacity = .5;\n    }, 150)\n    \n    setTimeout( function(){\n        bodyElement.style.opacity = 0;\n    }, 200)\n\n    setTimeout( function(){\n        bodyElement.style.opacity = .75;\n    }, 240)\n\n    setTimeout( function(){\n        bodyElement.style.opacity = 0;\n    }, 280)\n    \n}\n\n\nfunction reduceAligments(player){\n\n    console.log('reducing aligment durration!')\n\n    for (let index = 0; index < player.offenseHeroAilgments.length; index++) {\n        if ( parseInt(player.offenseHeroAilgmentsDuration[index]) - 1 === 0 ){\n            // last turn with given ailgment.\n            player.offenseHeroAilgmentsDuration[index] -= 1;\n\n        }else if ( parseInt(player.offenseHeroAilgmentsDuration[index]) - 1 < 0 ){\n            // aligment is removed.\n            player.offenseHeroAilgments.splice(index,1);\n            player.offenseHeroAilgmentsDuration.splice(index,1);\n        }\n    }\n\n    for (let index = 0; index < player.utilityHeroAilgments.length; index++) {\n        console.log( 'aligment:', player.utilityHeroAilgments[index], 'lasting:', parseInt(player.utilityHeroAilgmentsDuration[index]) )\n        if ( parseInt(player.utilityHeroAilgmentsDuration[index]) - 1 === 0 ){\n            // last turn with given ailgment.\n            player.utilityHeroAilgmentsDuration[index] -= 1;\n\n        }else if ( parseInt(player.utilityHeroAilgmentsDuration[index]) - 1 < 0 ){\n            // aligment is removed.\n            player.utilityHeroAilgments.splice(index,1);\n            player.utilityHeroAilgmentsDuration.splice(index,1);\n            \n        }\n    }\n\n    for (let index = 0; index < player.defenseHeroAilgments.length; index++) {\n        if ( parseInt(player.defenseHeroAilgmentsDuration[index]) - 1 === 0 ){\n            // last turn with given ailgment.\n            player.defenseHeroAilgmentsDuration[index] -= 1;\n\n        }else if ( parseInt(player.defenseHeroAilgmentsDuration[index]) - 1 < 0 ){\n            // aligment is removed.\n            player.defenseHeroAilgments.splice(index,1);\n            player.defenseHeroAilgmentsDuration.splice(index,1);\n        }\n    }\n}\n\nfunction reduceMonsterAligments(monster){\n    for (let index = 0; index < monster.aligment.length; index++) {\n        if ( parseInt(monster.aligmentDuration[index]) - 1 === 0 ){\n            // last turn with given ailgment. Maybe...\n            monster.aligmentDuration[index] -= 1;\n\n        }else if ( parseInt(monster.utilityHeroAilgmentsDuration[index]) - 1 < 0 ){\n            // aligment is removed.\n            monster.aligmentDuration.splice(index,1);\n            monster.aligment.splice(index,1);\n        }\n    }\n}\n\nexport const endTurn = () => (dispatch, getState) => {\n\n    let playerOverlay = document.getElementById('playerOverlay');\n\n\n    playerOverlay.style.height = \"40vh\"\n    playerOverlay.style.width = \"100vw\"\n    playerOverlay.style.backgroundColor = \"black\"\n    playerOverlay.style.opacity = .75\n    playerOverlay.style.position = \"absolute\"\n    playerOverlay.style.zIndex = 100\n    playerOverlay.style.bottom = 0\n    \n    setTimeout( function(){ \n        dispatch( discardHand() )\n    }, 1000 );\n\n    const state = getState()\n    const player = state.player\n    const monster = state.monster\n\n    const telegraphing = monster.telegraphing\n\n    reduceMonsterAligments(monster);\n\n    if ( !monster.aligment.includes('blind') ){\n\n        if ( telegraphing[0].effect == \"damage\" ){\n\n\n            const dmg = telegraphing[0].power\n            const moveMsg = monster.name + \" used \" + telegraphing[0].name + \", dealing\\n\" + telegraphing[0].power + \" damage.\"\n\n            setTimeout( function(){\n                dispatch(logCombat( {origin:'monster', description:moveMsg} ), 1000)\n            }, 1000);\n\n            const trample = player.defense - dmg\n            if ( trample <= 0 ){\n                const newDefense = 0\n                const newHealth = player.health + trample\n                setTimeout( function(){ dispatch( updatePlayer({ health: newHealth, defense: newDefense }) ) },1000);\n                \n            } else {\n                const newDefense = trample\n                setTimeout( function(){ dispatch( updatePlayer({ defense: newDefense }) ) },1000);    \n            }\n\n\n        } else if (telegraphing[0].effect == 'defense') {\n\n\n            const newDefense = telegraphing[0].power\n            const moveMsg = monster.name + \" used \" + telegraphing[0].name + \", gained\\n +\" + telegraphing[0].power + \" defense.\"\n\n            setTimeout( function(){\n                //  combatMsgs.innerHTML = moveMsg \n                dispatch(logCombat( {origin:'monster', description:moveMsg} ), 1000)\n            }, 1000)\n\n            setTimeout( function(){ \n                dispatch( updateMonster({ defense: newDefense })) \n            },1100);\n\n\n        }\n    }\n\n    const moves = monster.moves\n    const lengthOfMoves = Object.keys(moves).length\n    const position = telegraphing[0].order\n\n    if ( position + 1 < lengthOfMoves ) {\n        const newPos = position+1\n        const newTelegraph = moves.filter(obj => {\n            if (obj.order === newPos){\n                return obj\n            }\n        })\n        \n        // console.log (\"new Telegraph\",newTelegraph)\n        setTimeout( function(){ dispatch( updateMonster({ telegraphing: newTelegraph }) )}, 1200)\n   \n    } else {\n        const newPos = 0\n        const newTelegraph = moves.filter(obj => {\n            if (obj.order == newPos){\n                return obj\n            }        \n        })        \n        // console.log (\"new Telegraph\",newTelegraph)\n        setTimeout( function(){ dispatch( updateMonster({ telegraphing: newTelegraph }) )}, 1200)\n    }\n\n    reduceAligments(state.player);\n\n\n    setTimeout( function(){\n        dispatch( updatePlayer({ energy: 3, defense: 0 }) \n    )}, 1200);\n    \n    setTimeout( function(){     \n        dispatch( drawCard() )\n    }, 1500);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n    }, 2000);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n    }, 2500);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n    }, 3000);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n        playerOverlay.style.height = \"0vh\"\n        playerOverlay.style.width = \"0vw\"\n    }, 3500);\n\n\n}\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { updateMonster } from './monster';\n\nimport { logCombat } from './combat';\n\n// sounds clips\nimport cardSuccess from '../sound_clips/play_card_zapsplat_foley.mp3';\nimport cardError from '../sound_clips/error_sound.mp3';\n\n// Alter Health, Energy & Defense Actions:\nexport const updatePlayer = createAction('player/UPDATE_PLAYER');\n\n// Deck Actions:\nexport const setDeck = createAction('player/SET_DECK');\nexport const drawCard = createAction('player/DRAW_CARD');\nexport const playCard = createAction('player/PLAY_CARD');\n\nexport const playIndexedCard = createAction('player/PLAY_INDEXED_CARD');\nexport const discardHand = createAction('player/DISCARD_HAND');\n\nexport const voidCard = createAction('player/VOID_CARD');\nexport const shuffleDeck = createAction('player/SHUFFLE_DECK');\nexport const resetDeck = createAction('player/RESET_DECK')\n\n// Hand actions\nexport const drawHand = createAction('player/DRAW_HAND');\n\n\n\nconst initialState = {\n    deck: [],\n    hand: [],\n    discard: [],\n    voidDeck: []\n}\n\n\nfunction shuffle(deck) {\n    var j, x, i\n    for (i = deck.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1))\n        x = deck[i]\n        deck[i] = deck[j]\n        deck[j] = x\n    }\n    return deck\n}\n\nconst reduceResetDeck = ({ hand, deck, discard, voidDeck, ...rest }) => {\n    discard = [...discard, ...voidDeck]\n    discard = [...discard, ...hand]\n    const newDeck = [...deck, ...discard]\n    return { ...rest, hand:[], deck:newDeck, voidDeck:[], discard:[] }\n}\n\nconst reduceDrawCard = ({ discard, deck, hand, ...rest }) => {\n    if ( deck.length == 0 ){\n        if ( discard.length == 0 ){\n            return { ...rest, discard, deck, hand}\n        } else {\n            const shuffledDiscard = shuffle(discard)\n            const grabCard = shuffledDiscard[shuffledDiscard.length-1]\n            const newDeck = shuffledDiscard.slice(0, shuffledDiscard.length-1)        \n            const newHand = [...hand, grabCard]\n            return { ...rest, hand: newHand, deck: newDeck, discard: [] }\n        }\n    } else {\n        return { ...rest, hand: [...hand, deck[deck.length-1]], deck: deck.slice( 0, deck.length -1), discard }\n    }\n}\n\nconst reducePlayCard = ({ discard, hand, ...rest }) => {\n    const emptyHand = hand.length < 1;\n    \n    if (!emptyHand){\n        const newHand =  hand.slice( 0, hand.length-1)\n        const newDiscard = [...discard, hand[hand.length-1] ]\n        return { ...rest, hand: newHand, discard: newDiscard}\n    }else{\n        return { ...rest, hand, discard}\n    }\n}\n\nconst reducePlayIndexedCard = ({ discard, hand, ...rest } , {payload}) => {\n    const emptyHand = hand.length < 1;\n    console.log(payload)\n\n    if (!emptyHand){\n        const grabCard = hand[payload]\n        hand.splice(payload, 1)\n        const newHand = hand\n        const newDiscard = [...discard, grabCard]\n        return { ...rest, hand: newHand, discard: newDiscard}\n    }else{\n        return { ...rest, hand, discard}\n    }\n}\n\nconst reduceDiscardHand = ({ discard, hand, ...rest }) => {\n    const emptyHand = hand.length < 1;\n\n    if (!emptyHand){\n        const newHand = []\n        const newDiscard = [...discard, ...hand ]\n        return { ...rest, hand: newHand, discard: newDiscard}\n    }else{\n        return { ...rest, hand, discard}\n    }\n}\n\n\nexport default handleActions({\n    [drawHand]: (state) => ({...state, deck: state.deck.slice( 0, state.deck.length -5), hand: [...state.hand, ...state.deck.slice(-5)]}),\n    [shuffleDeck]: (state) => ({...state, deck: shuffle(state.deck)}),\n    [updatePlayer]: (state, action) => ({ ...state, ...action.payload }),\n    [setDeck]: (state, action) => ({...state, deck: action.payload }),\n    \n    [resetDeck]: reduceResetDeck,\n\n    [drawCard]: reduceDrawCard,\n    [playCard]: reducePlayCard,\n    \n    [playIndexedCard]: reducePlayIndexedCard,\n    [discardHand]: reduceDiscardHand,\n\n    [voidCard]: (state, action) => ({...state, hand: state.hand.slice(action.payload, 1), voidPile: [...state.void, state.hand.slice(action.payload, 1)]}),\n}, initialState);\n\n\n// how we grab data from the store\nconst selectPlayer = createSelector(\n    state => state.player,\n    player => player   \n)\n\nexport const usePlayer = () => useSelector(selectPlayer);\n\n\n/* requiredHero :\n// a - any hero standing\n// o - off needed\n// u - util needed\n// d - def needed\n// do - def & off needed\n// ud - util & def needed\n// ou - off & util needed\n// e - every hero needed\n*/\nfunction checkStanding(state, requiredHeros){\n\n    const offHeroStanding = ((state.player.offenseHeroStatus === 'standing' && !state.player.offenseHeroAilgments.includes('blind') ) ? true : false);\n    const defHeroStanding = ((state.player.defenseHeroStatus === 'standing' && !state.player.defenseHeroAilgments.includes('blind') ) ? true : false);\n    const utilHeroStanding = ((state.player.utilityHeroStatus === 'standing' && !state.player.utilityHeroAilgments.includes('blind') ) ? true : false);\n\n    console.log('standing heros: off:', offHeroStanding, ', def:', defHeroStanding, ', util:',utilHeroStanding);\n    console.log('req heros:',requiredHeros);\n\n    switch (requiredHeros) {\n        case 'a':\n            // console.log('')\n            return (offHeroStanding || defHeroStanding || utilHeroStanding);\n        case 'o':\n            return (offHeroStanding);\n        case 'u':\n            return (utilHeroStanding);\n        case 'd':\n            return (defHeroStanding);\n        case 'do':\n            return (defHeroStanding && offHeroStanding);\n        case 'du':\n            return (defHeroStanding && utilHeroStanding);\n        case 'ou':\n            return (offHeroStanding && utilHeroStanding);\n        case 'e':\n            return (offHeroStanding && defHeroStanding && utilHeroStanding);\n    }\n}\n\n// Animations START:\nfunction heroStrikeAnimation(heroElement){\n    let transitionTime = 500;\n    heroElement.animate([\n        {transform: 'translate(0px,0px)'},\n        {transform: 'translate(95px, 0px)'},\n        {transform: 'translate(155px, 0px)'},\n        {transform: 'translate(-1px, 0px)'},\n        {transform: 'translate(0, 0px)'}\n\n    ], {\n        duration: transitionTime,\n        iterations: 1\n    });\n}\n\nfunction damageFlash(bodyElement){\n\n    setTimeout( function(){\n        bodyElement.style.opacity = 1;\n    }, 300)\n        \n    setTimeout( function(){\n        bodyElement.style.opacity = .75;\n    }, 100)\n\n    setTimeout( function(){\n        bodyElement.style.opacity = .5;\n    }, 150)\n    \n    setTimeout( function(){\n        bodyElement.style.opacity = 0;\n    }, 200)\n\n    setTimeout( function(){\n        bodyElement.style.opacity = .75;\n    }, 240)\n\n    setTimeout( function(){\n        bodyElement.style.opacity = 0;\n    }, 280)\n    \n}\n\nfunction leftRightShake(element){\n    let transitionTime = 250;\n    element.animate([\n        {transform: 'translate(0px,0px)'},\n        {transform: 'translate(10px, 0px)'},\n        {transform: 'translate(-10px, 0px)'},\n        {transform: 'translate(0, 0px)'}\n    ], {\n        duration: transitionTime,\n        iterations: 1\n    });\n}\n\n// Animations END\nfunction moveHero(requiredHeros, mageBody, shieldBody, swordBody){\n    switch (requiredHeros) {\n        case 'a':\n            let choice = Math.floor(Math.random() * 3); \n            if (choice === 1) {\n                heroStrikeAnimation(swordBody);\n            }else if( choice === 2){\n                heroStrikeAnimation(shieldBody);\n            }else{\n                heroStrikeAnimation(mageBody);\n            }\n            break;\n        case 'o':\n            heroStrikeAnimation(swordBody);\n            break;\n        case 'u':\n            heroStrikeAnimation(mageBody);\n            break;\n        case 'd':\n            heroStrikeAnimation(shieldBody);\n            break;\n        case 'do':\n            heroStrikeAnimation(swordBody);\n            heroStrikeAnimation(shieldBody);\n            break;\n        case 'du':\n            heroStrikeAnimation(shieldBody);\n            heroStrikeAnimation(mageBody);\n            break;\n        case 'ou':\n            heroStrikeAnimation(swordBody);\n            heroStrikeAnimation(mageBody);\n            break;\n        case 'e':\n            heroStrikeAnimation(swordBody);\n            heroStrikeAnimation(shieldBody);\n            heroStrikeAnimation(mageBody);\n            break;\n    }\n}\n\n// Async Actions\nexport const applyCard = (cardIndex) => (dispatch, getState) => {\n    const state = getState();\n    // const musicDriver = state.useMusic;\n\n    const card = state.player.hand[cardIndex]\n    const energyCost = card.energy;\n    const standing = checkStanding(state, card.requiredHero);     \n    const foeDefense = state.monster.defense\n\n    let cardSounds = document.createElement('audio');\n\n    let mageBody = document.getElementById('mageBody');\n    let koMageBody = document.getElementById('koMageBody');\n    let shieldBody = document.getElementById('shieldBody');\n    let swordBody = document.getElementById('swordBody');\n\n    let energyText = document.getElementById('heroEnergyText');\n\n\n\n    if (energyCost <= state.player.energy) {\n        cardSounds.src = cardSuccess;\n        cardSounds.play();\n\n        if (standing){\n        \n            moveHero(card.requiredHero, mageBody, shieldBody, swordBody);\n            const newEnergy = state.player.energy - energyCost\n\n            for (let i = 0; i < card.action.target.length; i++) {\n\n                if (card.action.target[i] == \"foe\"){\n                    if (card.action.effect[i] == 'damage'){\n                        const trample = foeDefense - card.action.power[i];\n                        console.log('foe damage:', card.action.power[i])\n                        if (trample < 0) {\n                            const newFoeHealth = parseInt(state.monster.health) + parseInt(trample);\n                            dispatch(updateMonster({ health: newFoeHealth, defense: 0}));\n                            dispatch(logCombat({ origin: 'player', description: ('Player used: '+card.name+' dealing '+((-1)*(trample))+' damage.' ) }))\n                        }else{\n                            const newFoeDefense = trample;\n                            dispatch(updateMonster({ defense: newFoeDefense }));\n                            dispatch(logCombat({ origin: 'player', description: ('Player used: '+card.name+' dealing 0 damage.' ) }))\n                        }\n                        dispatch(updatePlayer({ energy: newEnergy }));\n                    }else if (card.action.effect[i] == 'blind'){\n                        state.monster.aligment.push('blind');\n                        state.monster.aligmentDuration.push(card.action.power);\n                        dispatch(updatePlayer({ energy: newEnergy }))\n                    }else if (card.action.effect[i] == 'defenseTotal'){\n                        const trample = foeDefense - state.player.defense;\n                        if (trample < 0) {\n                            const newFoeHealth = parseInt(state.monster.health) + parseInt(trample);\n                            dispatch(updateMonster({ health: newFoeHealth, defense: 0}));\n                            dispatch(logCombat({ origin: 'player', description: ('Player used: '+card.name+' dealing '+((-1)*(trample))+' damage.' ) }))\n                        }else{\n                            const newFoeDefense = trample;\n                            dispatch(updateMonster({ defense: newFoeDefense }));\n                            dispatch(logCombat({ origin: 'player', description: ('Player used: '+card.name+' dealing 0 damage.' ) }))\n                        }\n                    }\n                }else if (card.action.target[i] == \"player\"){\n                    if (card.action.effect[i]==\"heal\"){\n                        const newPlayerHealth = ( parseInt(state.player.health) + parseInt(card.action.power[i]) ) > parseInt(state.player.maxHealth) ? (parseInt(state.player.maxHealth)) : (parseInt(state.player.health) + parseInt(card.action.power[i]));\n                        dispatch(updatePlayer({ health: newPlayerHealth, energy: newEnergy }))\n                        dispatch(logCombat({ origin: 'player', description: ('Player used: '+card.name+' healing '+card.action.power[i]+' party health' ) }))\n    \n                    } else if (card.action.effect[i]==\"defense\"){\n                        const defense = card.action.power[i]\n                        const newPlayerDefense = parseInt(state.player.defense) + parseInt(defense)\n                        dispatch(updatePlayer({ defense: newPlayerDefense, energy: newEnergy}))\n                        dispatch(logCombat({ origin: 'player', description: ('Player used: '+card.name+' gaining '+defense+' party defense' ) }))\n                    } else if (card.action.effect[i]=='delayUtility'){\n                        state.player.utilityHeroAilgments.push('blind');\n                        state.player.utilityHeroAilgmentsDuration.push(card.action.power);\n                        dispatch(updatePlayer({ energy: newEnergy }))\n                    }\n\n                } else {\n                    //something strange?\n                    console.log('effects something other than player or foe, like drawing an aditional card etc');\n                }\n            }\n\n            // TARGET: FOE\n            // if (card.action.target==\"foe\"){    \n\n            //     // FOE DAMAGED\n            //     if (card.action.effect==\"damage\"){\n\n            //         const damage = card.action.power;\n            //         const trample = foeDefense - damage;\n            //         if (trample < 0) {\n            //             const newFoeHealth = parseInt(state.monster.health) + parseInt(trample);\n            //             dispatch(updateMonster({ health: newFoeHealth, defense: 0}));\n            //             dispatch(logCombat({ origin: 'player', description: ('Player used: '+card.name+' dealing '+((-1)*(trample))+' damage.' ) }))\n            //         }else{\n            //             const newFoeDefense = trample;\n            //             dispatch(updateMonster({ defense: newFoeDefense }));\n            //             dispatch(logCombat({ origin: 'player', description: ('Player used: '+card.name+' dealing 0 damage.' ) }))\n            //         }\n            //         dispatch(updatePlayer({ energy: newEnergy }));\n            //     }\n\n\n            // } else {\n            //     if (card.action.effect==\"heal\"){\n            //         const heal = card.action.power\n            //         const newPlayerHealth = parseInt(state.player.health) + parseInt(heal)\n            //         dispatch(updatePlayer({ health: newPlayerHealth, energy: newEnergy }))\n            //         dispatch(logCombat({ origin: 'player', description: ('Player used: '+card.name+' healing '+heal+' party health' ) }))\n\n            //     } else if (card.action.effect==\"defense\"){\n            //         const defense = card.action.power\n            //         const newPlayerDefense = parseInt(state.player.defense) + parseInt(defense)\n            //         dispatch(updatePlayer({ defense: newPlayerDefense, energy: newEnergy}))\n            //         dispatch(logCombat({ origin: 'player', description: ('Player used: '+card.name+' gaining '+defense+' party defense' ) }))\n            //     }\n            // }\n            dispatch(playIndexedCard(cardIndex))\n\n        }else{\n            console.log('! Required hero not standing !')\n        }\n    } else {\n        cardSounds.src = cardError;\n        cardSounds.play();\n        leftRightShake(energyText);\n    }\n\n\n}\n\n\n\n","\n//  CARD LAYOUT:\n// {\n//     name: '',\n//     requiredHero: 'u',\n//     art: '<art url>',\n//     type: 'attack',\n//     energy: 1,\n//     exhaust: false,\n//     action: {\n//         target: ['foe'],\n//         effect: ['damage'],\n//         power: [5]\n//     },\n//     description: \"5 Damage\",\n//     card_id: 0\n// },\n\n\n// requiredHero :\n\n// a - any hero standing\n// o - off needed\n// u - util needed\n// d - def needed\n// do - def & off needed\n// ud - util & def needed\n// ou - off & util needed\n// e - every hero needed\n\n\nexport const cards = [\n    {\n        name: 'Take the Offensive',\n        requiredHero: 'a',\n        art: '<art url>',\n        type: 'attack',\n        energy: 1,\n        exhaust: false,\n        action: {\n            target: ['foe'],\n            effect: ['damage'],\n            power: [7]\n        },\n        description: \"7 Damage\",\n    },\n    {   \n        name: 'Defensive Tactics',\n        requiredHero: 'a',\n        art: '<art url>',\n        type: 'defend',\n        energy: 1,\n        exhaust: false,\n        action: {\n            target: ['player'],\n            effect: ['defense'],\n            power: [7]\n        },\n        description: \"+7 Defense\",\n    },\n    {   \n        name: 'Heal',\n        requiredHero: 'u',\n        art: '<art url>',\n        type: 'skill',\n        energy: 1,\n        exhaust: true,\n        action: {\n            target: ['player'],\n            effect: ['heal'],\n            power: [8]\n        },\n        description: \"Heal +8\",\n        cost: 100,\n    },\n    {\n        name: 'Trading Blows',\n        requiredHero: 'o',\n        art: '<art url>',\n        type: 'attack',\n        energy: 1,\n        exhaust: true,\n        action: {\n            target: ['foe', 'hero'],\n            effect: ['damage', 'damage'],\n            power: [20, 7]\n        },\n        description: \"Deal 20 Damage, take 5 Damage\",\n        cost: 45,\n    },\n    {\n        name: 'Radiant Shield',\n        requiredHero: 'du',\n        art: '<art url>',\n        type: 'mix',\n        energy: 2,\n        exhaust: true,\n        action: {\n            target: ['player','player'],\n            effect: ['defense','heal'],\n            power: [10,5]\n        },\n        description: \"+10 Defense, +5 health\",\n        cost: 45,\n    },\n    {\n        name: 'Shield Bash',\n        requiredHero: 'd',\n        art: '<art url>',\n        type: 'defend',\n        energy: 1,\n        exhaust: false,\n        action: {\n            target: ['foe'],\n            effect: ['defenseTotal'],\n            power: [1]\n        },\n        description: \"Deal damage equal to your armor\",\n        cost: 45,\n    },\n    {\n        name: 'Blinding Ray',\n        requiredHero: 'u',\n        art: '<art url>',\n        type: 'utility',\n        energy: 2,\n        exhaust: false,\n        action: {\n            target: ['foe','player'],\n            effect: ['blind','delayUtility'],\n            power: [1,1]\n        },\n        description: \"Blind enemy for 1 turns\",\n        cost: 45,\n    },\n];\n\n","import {cards} from './card-data'\n\nexport const heros = [\n\n    {\n        utilityHero: 'staff',\n        utilityHeroStatus: 'standing',\n        utilityHeroAilgments: [],\n        utilityHeroAilgmentsDuration: [],\n\n        offenseHero: 'sword',\n        offenseHeroStatus: 'standing',\n        offenseHeroAilgments: [],\n        offenseHeroAilgmentsDuration: [],\n\n        defenseHero: 'shield',\n        defenseHeroStatus: 'standing',\n        defenseHeroAilgments: [],\n        defenseHeroAilgmentsDuration: [],\n\n        health: 55,\n        maxHealth: 55,\n        energy: 3,\n        defense: 0,\n        // deck: [0,0,0,0,0,1,1,1,1,1,2,5,6].map(id => cards[id]),\n        deck: [0,0,0,1,1,2,2,5,6,6].map(id => cards[id]),\n\n        hand: [],\n        discard: [],\n        voidDeck: [],\n        gold: 50,\n        items: []\n    }\n    \n];\n\n\n\n\n\n\n\n\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nexport const updateGameState = createAction('game_state/UPDATE_GAME_STATE');\n\nconst initialState = {\n    screen: 'title',\n    defeat: false,\n    floor: 0,\n    playerScore: 0,\n}\n\nexport default handleActions({\n    [updateGameState]: (state, action) => ({ ...state, ...action.payload }),\n}, initialState);\n\n\nconst selectGameState = createSelector(\n    state => state.game_state,\n    game_state => game_state   \n)\n\nexport const useGameState = () => useSelector(selectGameState);\n\n\n","\nexport const gameState = {\n\n    screen: 'title',\n    defeat: false,\n    floor: 0,\n    playerScore: 0,\n\n}","import React from 'react';\nimport titleStyle from \"./title.module.scss\";\nimport { updateScreen } from '../../../ducks/screen';\nimport { useDispatch } from 'react-redux';\n\nimport { updatePlayer } from '../../../ducks/player'\nimport { heros } from '../../../game-data/heros-data'\n\nimport { updateGameState } from '../../../ducks/game_state';\nimport { gameState } from '../../../game-data/game-state';\n\n// full screen......\nimport { useFullScreenHandle } from \"react-full-screen\";\n\n\nconst TitleScreen = () => {\n\n    const dispatch = useDispatch();\n    // TODO: Move to New Game Screen\n    dispatch(updatePlayer(heros[0]))\n    dispatch(updateGameState(gameState))\n    // full screen....\n    const handle = useFullScreenHandle();\n\n    \n    return (\n            <div className={titleStyle.game} >\n\n                <div className={titleStyle.game} >\n                    <div className={titleStyle.title} >SLAY THE TOWER</div>\n                    <div className={titleStyle.menu} onClick={() => \n                            {\n                                dispatch(updateGameState({screen:'HeroSelection'}));\n                                dispatch(updateScreen('HeroSelection'));\n                            }\n                        }> NEW GAME </div>\n                    <div className={titleStyle.menu} onClick={() => \n                            {\n                                dispatch(updateGameState({screen:'Map'}))\n                                dispatch(updateScreen('Map'))\n                            }\n                        }> MAP </div>\n                </div>\n\n            </div>\n    );\n}\n\nexport default TitleScreen","import React from 'react';\nimport styles from './slime.module.scss'\n\n\nconst Slime = () => {\n\n    return(\n        <div className={styles.monsterContainer}>\n            <div className={styles.slime}>\n                <div className={styles.rightEye}></div>\n                <div className={styles.leftEye}></div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Slime;","import React from 'react';\nimport { useMonster } from '../../../../ducks/monster'\nimport styles from \"./foe-zone.module.scss\";\nimport { useEffect } from 'react';\n\nimport Slime from '../../../monsters/slime';\nimport Fire from '../../../monsters/fire';\nconst monsterList = {\n    Slime,\n    Fire\n}\n\nfunction updateFoeHealthBar(foeHealth, foeMax){\n    var x = document.getElementById(\"foeHealthBar\")\n    x.style.backgroundColor = \"red\"\n\n    if (foeHealth === foeMax){\n        x.style.height = \"2vh\"\n        x.style.width = \"20vw\"\n    }\n\n    if (foeHealth < foeMax){\n        const dmg = ((foeHealth/foeMax)*20)\n        const newBar = Math.ceil(foeHealth - dmg)\n        x.style.width = newBar + \"vw\"        \n    }\n}\n\nfunction updateFoeDefBar(defense){\n    var x = document.getElementById(\"foeDefenseBar\")\n    x.style.backgroundColor = \"lightblue\"\n    x.style.opacity = \".75\"\n    x.style.position = \"absolute\"\n\n    if (defense === 0){\n        x.style.height = \"2vh\"\n        x.style.width = \"0vw\"\n    }\n\n    if (defense > 0){\n        // const dmg = ((foeHealth/foeMax)*20)\n        const newDefense = ((defense/100)*20)\n        x.style.width = newDefense + \"vw\"        \n    }\n}\n\nfunction getTelegraph(monster){\n    \n    const effect = monster.telegraphing[0].effect;\n    const power = monster.telegraphing[0].power;\n    \n    // console.log('effect:', effect);\n\n    if (effect[0] === \"damage\"){\n        return ('🔪 '+power);\n    }else if (effect[0] === \"defense\"){\n        return ('🛡️ '+power);\n    }else{\n        return '...';\n    }\n\n}\n\nconst FoeZone = () => {\n\n    const { health: foeHealth } = useMonster();\n    const { total: foeMax } = useMonster();\n    const { defense: foeDefense } = useMonster();\n    const monster = useMonster();\n    console.log('foe.name:', monster.name);\n    const Monster = monsterList[monster.name];\n    const telegraph = getTelegraph(monster)\n\n\n    useEffect(() => {\n        updateFoeHealthBar(foeHealth, foeMax)\n    }, [foeHealth]);\n\n    useEffect(() => {\n        updateFoeDefBar(foeDefense)\n    }, [foeDefense])\n    \n    return(\n        <div className={styles.foeZone}>\n\n            <div className = {styles.foe}>\n\n                <div className={styles.telegraph}> {telegraph} </div>\n                <div className={styles.foeTitle}> {monster.name} </div>\n                \n                <div className={styles.monsterContainer}>\n                    <Monster/>\n                </div>\n\n                <div className = {styles.foeHealthBorder}> \n                    <div className = {styles.foeHealthIndicator}> \n                        {monster.health} / {monster.total} \n                    </div>\n                    <div id=\"foeDefenseBar\"> </div>\n                    <div id=\"foeHealthBar\"> </div>\n                </div>\n\n            </div>  \n        </div>        \n    );\n}\n\n\nexport default FoeZone;\n","import React from 'react';\nimport styles from './fire.module.scss'\n\n\nconst Fire = () => {\n\n    return(\n        <div className={styles.monsterContainer}>\n            \n            <div className={styles.spike}>\n                <div className={styles.spikeL}>\n                    <div className={styles.spikeL}></div>\n                </div>\n                <div className={styles.spikeR}>\n                    <div className={styles.spikeR}></div>\n                </div>\n                <div className={styles.triEye}></div>\n            </div>\n\n        </div>\n    )\n}\n\n\nexport default Fire;","import React from 'react';\nimport styles from './hero.module.scss';\n\n\n\nconst Hero = (props) => {\n    \n    if (props.heroType === 'mage'){\n        return(\n            <div id=\"mage\" className={styles.heroContainer}>\n                \n                {/* live body */}\n                <div id=\"mageBody\" className={styles.heroBody}>\n                    <div className={styles.headContainer}>\n                        <div className={styles.hood}>\n                        <div className={styles.headMageHero}></div>\n                        </div>\n                    </div>\n                    <div className={styles.chest}></div>\n                    <div className={styles.waist}></div>\n                    <div id='staff' className={styles.staff}>\n                        <div className={styles.heroHandRight}></div>\n                        <div className={styles.heroHandLeft}></div>\n                    </div>\n                </div>\n\n                {/* 'KO' body */}\n                <div id=\"koMageBody\" className={styles.koHeroBody}>\n                    <div className={styles.headContainer}>\n                        <div className={styles.koHood} >\n                        <div id=\"koMageHead\" className={styles.koHeadMageHero}></div>\n                        </div>\n                    </div>\n                    <div className={styles.koChest}></div>\n                    <div className={styles.waist}></div>\n                    <div id='koStaff' className={styles.koStaff}>\n                        <div className={styles.heroHandRight}></div>\n                        <div className={styles.heroHandLeft}></div>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }else if (props.heroType === 'sword'){\n        return(\n            <div id='sword' className={styles.heroContainer}> \n                <div id=\"swordBody\" className={styles.heroBody}>\n\n                    <div className={styles.headContainer}>\n                        <div className={styles.hood}>\n                        <div className={styles.headSwordHero}></div>\n                        </div>\n                    </div>\n\n                    <div className={styles.chest}></div>\n                    <div className={styles.waist}></div>\n                    \n                    <div id='swordContainer' className={styles.swordContainer}>\n                        <div id='swordHilt' className={styles.swordHilt}> \n                        <div id='gripedHands' className={styles.grippedHands}></div>\n                        <div id='swordTip' className={styles.swordTip}> \n                            <div id='swordPattern' className={styles.swordPattern}> \n                            </div>\n                        </div>\n                        </div>\n                    </div>\n                \n                </div>\n            </div>\n        )\n    }else{\n        return(\n            <div id='shield' className={styles.heroContainer}> \n                <div id=\"shieldBody\" className={styles.heroBody}>\n            \n                <div className={styles.headContainer}>\n                    <div className={styles.hood}>\n                    <div className={styles.headShieldHero}></div>\n                    </div>\n                </div>\n            \n                <div className={styles.chest}></div>\n                <div className={styles.waist}></div>\n                \n                <div id='shield' className={styles.shield}> \n                </div>\n                \n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Hero;\n","import React from 'react';\nimport styles from \"./hero-zone.module.scss\";\n\nimport Hero from \"../../../hero\";\n\n\nconst HeroZone = () => {\n\n    return(\n        <div className={styles.heroColumn}>\n\n            <Hero \n                heroType={'mage'} \n                status={'normal'}\n            />\n\n            <Hero \n                heroType={'sword'} \n                status={'normal'}\n            />\n\n            <Hero \n                heroType={'shield'} \n                status={'normal'}\n            />\n\n        </div>\n    );\n}\n\n\nexport default HeroZone;\n","import React from 'react';\nimport styles from './combat-zone.module.scss'\n\nimport FoeZone from './foe-zone';\nimport HeroZone from './hero-zone';\n\n\nconst CombatZone = () => {\n\n    return (\n        <div className = {styles.combatZone}>\n\n            <div className = {styles.heroContainer}>\n                <HeroZone />\n            </div>\n\n            <div className = {styles.foeContainer}>\n                <FoeZone />\n            </div>\n            \n        </div>\n    );\n}\n\n\nexport default CombatZone;\n","import React from 'react';\nimport styles from './card.module.scss'\n\n\nconst Card = (props) => {\n    return(\n        <div>\n            <div className = {styles.cardFace}>\n                <div className = {styles.titleSection}>\n                    <div className = {styles.title}> \n                        {props.cardData.name} \n                    </div> \n\n                    {!props.combat && \n                        <div>\n                            G: {props.cardData.cost}\n                        </div> \n                    }\n                </div>\n                \n                <div className={styles.cardArt}>\n                    {props.cardData.art}\n                </div>\n\n                <div className={styles.cardDescription}>\n                    {props.cardData.description}\n                </div>\n\n                <div className = {styles.costRow}>\n                    <div className = {styles.energy}>\n                        ⚡ {props.cardData.energy}\n                    </div>\n\n                    <div className = {styles.requiredHero}>\n                        {requiredHeroIcon(props.cardData.requiredHero)}\n                    </div>\n                </div>\n            </div>\n        </div>        \n    )\n}\n\n\n/* requiredHero :\n// a - any hero standing: white dot\n// o - off needed: red dot\n// u - util needed: blue dot\n// d - def needed: green dot\n// do - def & off needed: green & blue dot\n// ud - util & def needed: blue & etc...\n// ou - off & util needed: ...\n// e - every hero needed: red, blue & green\n*/\n\nfunction requiredHeroIcon(reqHeros){\n    switch (reqHeros) {\n        case 'a':\n            return( <div className={styles.whiteDot}/> )\n        case 'o':\n            return( <div className={styles.redDot}/> )\n        case 'u':\n            return( <div className={styles.blueDot}/> )\n        case 'd':\n            return( <div className={styles.greenDot}/> )\n        case 'do':\n            return( <div className={styles.whiteDot}/> )\n        case 'ud':\n            return( <div className={styles.whiteDot}/> )\n        case 'ou':\n            return( <div className={styles.whiteDot}/> )\n        case 'e':\n            return( <div className={styles.whiteDot}/> )\n        default:\n            return( <div className={styles.whiteDot}/> )\n    }\n}\n\nexport default Card;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport styles from './hand.module.scss'\nimport cardStyle from '../../card/card.module.scss'\n\nimport { usePlayer, applyCard } from '../../../ducks/player';\nimport Card from '../../card';\n\n// function isMobile() {\n//     var check = false;\n//     (function(a){\n//       if( /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) \n//         check = true;\n//     })(navigator.userAgent||navigator.vendor||window.opera);\n//     return check;\n// }\n\n\n\nconst Cards = () =>{\n    \n    const player = usePlayer();\n    const dispatch = useDispatch();\n    const onCardClick = (index) =>  {\n        dispatch(applyCard(index))\n    };\n\n\n    const config = {\n        onSwipedUp: () => console.log('swiped up! :'),\n        preventDefaultTouchmoveEvent: true,\n        trackMouse: true\n    };\n    \n    const swipeCard = ( index, event ) => {\n        if (event.dir === 'Up'){\n            onCardClick(index)\n        }\n    }\n\n    return(\n        <div className={styles.handContainer}>\n            {\n                player.hand.map( (cardData, index) =>\n                    <button key={index} className={cardStyle.cardButton} onClick={ () => onCardClick(index) }>\n                        <div className={cardStyle.card}>\n                            <Card \n                                cardData={cardData} \n                                combat={true}\n                            />\n                        </div>\n                    </button>                \n                )\n            }                \n        </div>\n    )\n}\n\nconst Hand = () => {\n\n    return (\n        <div className = {styles.activeZone}>\n            <div className = {styles.hand}>\n                <Cards /> \n            </div>\n        </div>\n    );\n}\n\n\nexport default Hand;\n\n","import React from 'react';\nimport styles from './draw-zone.module.scss'\nimport { usePlayer } from '../../../ducks/player';\n\n\nconst DrawZone = () =>{\n    const player = usePlayer();\n\n    return(\n        <div className={styles.drawZone}>\n            \n            <div id='heroEnergyText' className={styles.energy}>\n                <span style={{fontSize: '18px'}}>⚡</span> ENERGY: {player.energy}\n            </div>\n            \n            <div className={styles.deck}>\n                DECK: {player.deck.length}\n            \n            </div>\n        </div>\n    );\n}\n\n\nexport default DrawZone;\n","import React from 'react';\nimport styles from './discard-zone.module.scss'\n\nimport { usePlayer } from '../../../ducks/player';\nimport { useDispatch } from 'react-redux'\n\nimport { endTurn } from '../../../ducks/combat'\n\n\nconst DiscardZone = () =>{\n    const player = usePlayer();\n    const dispatch = useDispatch();\n    \n    const onBttnClick = () =>  dispatch(endTurn());\n\n    return(\n        <div className = {styles.discardZone}>\n\n            <div className={styles.void}> \n                VOID: {player.voidDeck.length}\n            </div>\n\n            <div className={styles.discard}>\n                DISCARD: {player.discard.length}\n            </div>\n\n            <button id=\"turnBttn\" onClick={onBttnClick} className = {styles.devButton}>\n                [ END TURN ]\n            </button>\n        \n        </div>\n    );\n}\n\n\nexport default DiscardZone;\n","import React from 'react';\nimport styles from './combat-log.module.scss'\n// import { useDispatch } from 'react-redux'\nimport { useCombat } from '../../../ducks/combat';\n\n\nconst CombatLog = () => {\n\n    const combat = useCombat();\n\n    console.log('combat:', combat)\n\n    return(\n        <div id='combatMsgs' className={styles.combatLog}>\n            <div className={styles.combatLogHeader}>\n                Combat Log\n            </div>\n            <div className={styles.scrollableLog}>\n                {combat.combatLog.map( (log, index) => \n                    <div key={index}> \n                        {\n                            log.origin === 'player' ? \n                                <>\n                                    <div className={styles.heroLog}>\n                                        {log.description}\n                                    </div>\n                                </>\n                                :\n                                <>\n                                    <div className={styles.monsterLog}>\n                                        {log.description}\n                                    </div>\n                                </>\n                        }\n                    </div>\n                )}\n            </div>\n\n        </div>\n    );\n}\n\n\nexport default CombatLog;\n","import React from 'react';\nimport styles from './player-status.module.scss'\n\nimport { usePlayer } from '../../../ducks/player';\n\nconst PlayerStatus = () =>{\n\n    const player = usePlayer();\n    \n    return(\n        <div className = {styles.playerStatusContainer}>\n            <div className = {styles.playerGold}>\n                G: {player.gold}\n            </div>\n            \n            <div className = {styles.playerDefense}>\n                Defense: {player.defense}\n            </div>\n\n            <div className = {styles.playerHealth}>\n                ❤️ {player.health} / {player.maxHealth}\n            </div>\n            \n        </div>\n    );\n}\n\n\nexport default PlayerStatus;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./combat.module.scss\";\n\nimport { usePlayer, updatePlayer } from '../../../ducks/player';\n\nimport CombatZone from '../../combat-components/combat-zone';\n\nimport { updateScreen } from '../../../ducks/screen';\n\nimport Hand from '../../combat-components/hand';\nimport DrawZone from '../../combat-components/draw-zone';\nimport DiscardZone from '../../combat-components/discard-zone';\nimport CombatLog from '../../combat-components/combat-log';\n\nimport { useMonster } from '../../../ducks/monster';\nimport { updateCombat } from '../../../ducks/combat';\n\nimport { updateGameState } from '../../../ducks/game_state';\n\nimport PartyStatus from '../../combat-components/player-status';\n\n\nconst CombatScreen = () => {\n    const { gold: loot } = useMonster();\n    const { health: foeHealth } = useMonster();\n    const player = usePlayer();\n\n    const dispatch = useDispatch();\n    \n    useEffect(()=>{\n        dispatch( updatePlayer({ energy: 3, defense:0 }) );\n    }, [])\n    \n    useEffect(() => {\n        // This block of code only executes when foeHealth changes\n        if (foeHealth <= 0) {\n            dispatch( updateGameState({loot: loot, playerGold: player.gold }) )\n            \n            dispatch( updateCombat({\n                combatLog : \n                    [{\n                        origin: 'player',\n                        description: 'Start of combat'\n                    }]\n            }))\n\n            setTimeout( function(){\n                dispatch(updateGameState({screen:'Resolution'}));\n                dispatch( updateScreen('Resolution') ) \n            }, 1000);\n        }\n    }, [foeHealth]);\n\n    useEffect(() => {\n        if (player.health <= 0) {\n            dispatch( updateGameState({defeat:true}) )\n            dispatch( updateCombat({\n                combatLog : \n                    [{\n                        origin: 'player',\n                        description: 'Start of combat'\n                    }]\n            }))\n\n            setTimeout( function(){\n                dispatch(updateGameState({screen:'Resolution'}));\n                dispatch( updateScreen('Resolution') ) \n            }, 1000);       \n        }\n    }, [player.health]);\n\n    return (\n    <div className={styles.game}>\n\n        <PartyStatus />\n\n        <CombatZone />\n\n        <CombatLog />\n\n        {/* this is the overlay for the players hand... */}\n        <div id='playerOverlay'></div>\n        \n        <Hand />\n        \n        <div className={styles.playerZone}> \n            <DrawZone />\n            <DiscardZone />\n        </div>\n            \n    </div>\n    );\n    \n}\n\n\nexport default CombatScreen;\n\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./resolution.module.scss\";\nimport { useGameState } from '../../../ducks/game_state'\n\nimport { usePlayer, updatePlayer } from '../../../ducks/player';\n\nimport { updateScreen } from '../../../ducks/screen';\nimport { updateGameState } from '../../../ducks/game_state';\n\n\n// need to import reward cards...\n// select 3 random reward cards and display them.\n\n\n// for reward: body\n// import { drawHand, shuffleDeck, useCard } from '../../ducks/player';\n\n\nconst ResolutionScreen = () => {\n\n    const dispatch = useDispatch();\n    const gameState = useGameState();\n\n    // console.log(player.gold)\n\n    let header = ''\n    let body = ''\n    let bttn = ''\n        \n    if ( !gameState.defeat ) {\n        header = 'VICTORY'\n        body = `You found G: +` + gameState.loot + ` \\n !!! Cards to come later...`\n        bttn = 'CONTINUE'\n        dispatch(updatePlayer({gold:gameState.playerGold + gameState.loot}))\n\n    } else {\n        header = 'DEFEAT'\n        body = 'You Lost!'\n        bttn = 'EXIT'\n    }\n\n    return (\n    <div className={styles.gameScreen}>\n        <div className={styles.menuContainer}>\n\n            <div className={styles.menuHeader}>\n                {header}\n            </div>\n\n            <div className={styles.menuBody}>\n                {body}\n            </div>\n\n            <div className={styles.menuFooter}>\n                <div className={styles.menuOption} onClick={() => \n                        {\n                            dispatch( updateGameState({screen:'Map'}) );\n                            dispatch( updateScreen('Map') );\n                        }\n                    }>\n                    {bttn}\n                </div>\n            </div>\n\n        </div>\n    </div>\n    );\n    \n}\n\n\nexport default ResolutionScreen;\n\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./hero-selection.module.scss\";\n\n\nimport { gameState } from '../../../game-data/game-state';\nimport { updateGameState } from '../../../ducks/game_state';\nimport { updatePlayer } from '../../../ducks/player'\nimport { heros } from '../../../game-data/heros-data'\nimport { updateScreen } from '../../../ducks/screen';\n\n// import { HeroDetail } from './hero-detail';\n\n\n// in this screen player chooses hero weapon / deck\n\nconst HeroSelection = () => {\n\n    const dispatch = useDispatch();\n\n    const onCardClick = (heroType) => {\n        console.log(heroType)\n        dispatch(updatePlayer(heros[0]))\n        dispatch(updateGameState(gameState))\n        dispatch(updateGameState({screen:'Map'}));\n        dispatch(updateScreen('Map'))\n        // will be changed to map screen.\n    }\n\n    return (\n        <div className={styles.gameScreen}>\n            <div className={styles.title} >CHOOSE YOUR HERO</div>\n\n            <div className={styles.menuContainer}>\n\n                <div onClick={ () => onCardClick('sword') } className={styles.heroContainer}>\n                    <div className={styles.heroTitle}> sword </div>\n                    <div className={styles.heroImg}></div>\n                </div>\n\n                {/* <div onClick={() => choice('staff')} className={styles.heroContainer}>\n                    <div className={styles.heroTitle}> staff </div>\n                    <div className={styles.heroImg}></div>\n                </div> */}\n            </div>\n        </div>\n    );\n}\n\n\nexport default HeroSelection;\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nexport const updateMap = createAction('map/UPDATE_MAP');\n\n\n// maybe add some trackers for trials, bonfires, elites & shops. To somehow limit or increase it?\n\nconst initialState = {\n    fieldEvent: \"event name\",\n    fieldPaths: 0,\n    fieldPathEvents: [],\n    count: 0\n}\n\n\nexport default handleActions({\n    [updateMap]: (state, action) => ({ ...state, ...action.payload }),\n}, initialState);\n\n\nconst selectMap = createSelector(\n    state => state.map,\n    map => map   \n)\n\nexport const useMap = () => useSelector(selectMap);\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nimport {cards} from \"../game-data/card-data\"\n\nexport const updateShop = createAction('shop/UPDATE_SHOP');\nexport const setupShop = createAction('shop/SETUP_SHOP');\n\nconst initialState = {\n    shopCards: []\n}\n\nfunction rollDice(max) {\n    return 1 + Math.floor(Math.random()*max)\n  }\n\nconst reduceSetUpShop = ({ shopCards, ...rest}) => {\n\n    console.log(\"0 : roll D10:\", rollDice(10))\n    console.log(\"1 : roll D10:\", rollDice(10))\n    console.log(\"2 : roll D10:\", rollDice(10))\n\n    let newShopCards = [...shopCards, cards[3], cards[3], cards[3] ]\n    return { ...rest, shopCards: newShopCards}\n}\n\n\nexport default handleActions({\n    [updateShop]: (state, action) => ({ ...state, ...action.payload }),\n    [setupShop]: reduceSetUpShop\n}, initialState);\n\n\nconst selectShop = createSelector(\n    state => state.shop,\n    shop => shop   \n)\n\nexport const useShop = () => useSelector(selectShop);\n\n\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./map.module.scss\";\n\n// import { useMusic, load, loop, mute, setTrack} from '../../../ducks/music';\n// import { track_list } from '../../../game-data/tracks';\n\nimport { useMap, updateMap } from '../../../ducks/map';\nimport { updateScreen } from '../../../ducks/screen';\nimport { updateGameState } from '../../../ducks/game_state';\n\n// For Combat:\nimport { usePlayer, drawHand, shuffleDeck, resetDeck } from '../../../ducks/player';\nimport { spawnMonster } from '../../../ducks/monster';\nimport { setupShop } from '../../../ducks/shop';\n\n\nfunction eventHandler(event, dispatcher){\n  console.log(\"EVENT:\", event)\n  switch (event) {\n    case '👹':\n      // for now... reset map after boss.\n      dispatcher(updateMap(startingField(3)));\n      dispatcher(updateScreen({count:0}));\n\n      // add argument for boss spawn..\n      // dispatcher(spawnFoe());\n      dispatcher(updateGameState({screen:'Title'}));\n      dispatcher(updateScreen('Title'));\n      break;\n    case '💢':\n      // TODO: make a elite fight ... so dispatch a elite...\n      dispatcher(spawnMonster('Fire'));\n      dispatcher(resetDeck());\n      dispatcher(shuffleDeck());\n      dispatcher(drawHand());\n      // Load fight before screen update?\n      dispatcher(updateGameState({screen:'Combat'}));\n      dispatcher(updateScreen('Combat'));\n      break;\n    case '🔥':\n      // TODO: set up rest, training & mending \n      dispatcher(updateGameState({screen:'Bonfire'}));\n      dispatcher(updateScreen('Bonfire'));\n      break;\n    case '❗':\n      // TODO: set up a few trials for demo\n      dispatcher(updateGameState({screen:'Trial'}));\n      dispatcher(updateScreen('Trial'));\n      break;\n    case '🕋':\n      dispatcher(updateGameState({screen:'Shop'}));\n      dispatcher(setupShop())\n      dispatcher(updateScreen('Shop'));\n      break;\n    case '⚔️':\n      dispatcher(spawnMonster('Slime'));\n      dispatcher(resetDeck());\n      dispatcher(shuffleDeck());\n      dispatcher(drawHand());\n      // Load fight before screen update?\n      dispatcher(updateGameState({screen:'Combat'}));\n      dispatcher(updateScreen('Combat'));\n      break;\n\n    default:\n      break;\n  }\n}\n\nfunction rollDice(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; \n}\n\nfunction genPathLength(){\n  let length = rollDice(1,4)\n  let onesOdds = rollDice(0,50)\n\n  if (onesOdds == 0 && length == 1){\n    return 1\n  }\n  if (onesOdds < 1 && length == 3){\n    return 4\n  }\n  return length\n}\n\nfunction genEvent( roll, fightOdds, elieteOdds, bonfireOdds, trialOdds, shopOdds){\n  if ( roll < fightOdds){\n    return {  fieldEvent: '⚔️' }\n  }else if ( roll < elieteOdds ){\n    return {  fieldEvent: '💢' }\n  }else if ( roll < bonfireOdds ){\n    return {  fieldEvent: '🔥' }\n  }else if ( roll < trialOdds ){\n    return {  fieldEvent: '❗' }\n  }else if ( roll < shopOdds){\n    return {  fieldEvent: '🕋' }\n  }else{\n    return {  fieldEvent: '⚔️' }\n  }\n}\n\nfunction genPath( pathLength, setEvent ){\n\n  if ( setEvent ){\n    \n    let events = []\n    for (let e = 0; e < pathLength; e++) {\n      let roll = rollDice(0,101);\n      events.push(genEvent(roll, 70, 85, 100, 0, 0))\n    }\n\n    return({\n      fieldEvent: setEvent,\n      fieldPaths: pathLength,\n      fieldPathEvents: events\n    })\n\n  }else{\n\n    // generate paths\n    let events = []\n    for (let e = 0; e < pathLength; e++) {\n      let roll = rollDice(0,101);\n      events.push(genEvent(roll, 70, 90, 100))\n    }\n\n    // generate field of said paths\n    let roll = rollDice(0,101);\n    return({\n      fieldEvent: genEvent(roll, 70, 80, 87, 95, 100).fieldEvent,\n      fieldPaths: pathLength,\n      fieldPathEvents: events\n    })\n\n  }\n}\n\nfunction fillPaths( numberOfPaths, setEvent) {\n  const paths = []\n\n  for (let p = 0; p < numberOfPaths; p++) {\n    // Gen a new number of paths per field choice\n    paths.push( genPath( genPathLength(), setEvent ))\n  }\n\n  return paths\n}\n\nfunction startingField(startingPaths){\n  let newField = {\n    fieldEvent: 'START',\n    fieldPaths: startingPaths,\n    fieldPathEvents: fillPaths(startingPaths, '⚔️'),\n    count: 0\n  }\n  return newField\n}\n\nfunction createField( fieldEvents, fieldCount ){\n  let pathLength = 0\n  let fieldBatch = []\n\n  if ( fieldCount === 7){\n    for (let i = 0; i < fieldEvents.length; i++) {\n      fieldBatch.push({\n        fieldEvent: fieldEvents[i].fieldEvent,\n        fieldPaths: 0,\n        fieldPathEvents: [{\n          fieldEvent: \"👹\"\n        }]\n      })\n    }\n  }else{\n    for (let i = 0; i < fieldEvents.length; i++) {\n      pathLength = genPathLength()\n      fieldBatch.push({\n        fieldEvent: fieldEvents[i].fieldEvent,\n        fieldPaths: pathLength,\n        fieldPathEvents: fillPaths(pathLength)\n      })\n    }\n  }\n\n  return fieldBatch\n}\n\nconst MapScreen = () => {\n\n  const dispatch = useDispatch();\n  const currentField = useMap();\n  const UsePlayer = usePlayer();\n\n\n  useEffect(() => {\n    if (currentField.count === 0){\n      dispatch(updateMap(startingField(3)))\n    }\n  }, []);\n  \n\n  const onPathSelection = (field) => {\n    let newField = {}\n\n    // check if the next event is going to be floor boss:\n    let isBossNext = field.fieldPathEvents.find( fields => fields.fieldEvent === \"👹\" )\n    \n    if ( isBossNext ){\n      newField = {\n        fieldEvent: field.fieldEvent,\n        fieldPaths: 1,\n        fieldPathEvents: [{\n            fieldEvent: \"👹\",\n            fieldPaths: 0,\n          fieldPathEvents: []\n        }],\n        count: currentField.count + 1\n      }\n    }else{\n      newField = {\n        fieldEvent: field.fieldEvent,\n        fieldPaths: field.fieldPathEvents.length,\n        fieldPathEvents: createField(field.fieldPathEvents, currentField.count),\n        count: currentField.count + 1\n      }\n    }\n    // update map...\n    dispatch(updateMap(newField))\n    eventHandler(newField.fieldEvent, dispatch)\n  }\n\n\n  return (\n    <div className={styles.screenContainer}>\n      <div className={styles.screen}>\n        \n        <div className={styles.screenHeader}>\n          <strong style={{color:'red', margin:'10px' }}> ❤️ {UsePlayer.health}/{UsePlayer.maxHealth}</strong>\n          <strong style={{color:'gold', margin:'10px'}}> 💰{UsePlayer.gold}</strong>\n        </div>\n\n        <div className={styles.screenBody}>\n\n          <div className={styles.mapContainer}>\n            <h1> Field Event: {currentField.fieldEvent}</h1>\n\n            <div style={{display:'flex', flexDirection:'row',}}>\n              {currentField.fieldPathEvents.map( (field, index) =>\n                <button key={index} className={styles.pathButton} onClick={() => onPathSelection(field)}>\n                    <h2>{field.fieldEvent}</h2>\n                    {field.fieldPathEvents.map( (e, index) => \n                      <div key={index} style={{display:'flex', margin:'2px', opacity:'.5'}}>\n                        {e.fieldEvent}\n                      </div>\n                    )}\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className={styles.legendContainer}>\n            <div className={styles.legendTitle}>LEGEND:</div>\n            <div className={styles.legendItem}> FIGHT : ⚔️</div>\n            <div className={styles.legendItem}> ELITE : 💢</div>\n            <div className={styles.legendItem}> BONFIRE : 🔥</div>\n            <div className={styles.legendItem}> TRIAL : ❗</div>\n            <div className={styles.legendItem}> SHOP : 🕋</div>\n            <div className={styles.legendItem}> BOSS : 👹</div>\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n  );\n\n}\n\n\nexport default MapScreen;\n\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport styles from \"./shop.module.scss\";\nimport cardStyle from '../../card/card.module.scss';\n\n\nimport { useGameState } from '../../../ducks/game_state'\nimport { usePlayer, updatePlayer } from '../../../ducks/player';\nimport { updateScreen } from '../../../ducks/screen';\nimport { updateGameState } from '../../../ducks/game_state';\n\n// import cardData from '../../../game-data/card-data'\n\nimport Card from '../../card'\nimport { updateShop, setupShop, useShop } from '../../../ducks/shop';\n\nconst ShopScreen = () => {\n\n    const dispatch = useDispatch();\n    const gameState = useGameState();\n    const shop = useShop();\n    const player = usePlayer();\n \n\n    return (\n    <div className={styles.screenContainer}>\n        <div className={styles.screen}>\n\n            <h1>SHOP</h1>\n\n            <br />\n\n            <div>\n                G: {player.gold}\n            </div>\n\n            <br />\n\n            <div style={{display: 'flex', flexDirection: 'column'}}>\n\n                <div style={{display: 'flex', flexDirection: 'row'}}>\n\n                    {shop.shopCards.map( (cardData, index) => \n                        <button key={index} className={styles.cardButton}>\n                            <div className={cardStyle.card}>\n                                <Card cardData={cardData} combat={false} />\n                            </div>\n                        </button>\n                    )}\n                    \n                </div>\n\n            </div>\n\n            <br />\n\n            <div>\n                <button onClick={() => \n                        {\n                            dispatch( updateGameState({screen:'Map'}) );\n                            dispatch( updateScreen('Map') ) \n                        }\n                    }>\n                    RETURN TO MAP\n                </button>\n            </div>\n\n        </div>\n    </div>\n    );\n    \n}\n\n\nexport default ShopScreen;\n\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./bonfire.module.scss\";\n\nimport { updateGameState, useGameState } from '../../../ducks/game_state'\nimport { updatePlayer, usePlayer } from '../../../ducks/player';\nimport { updateScreen } from '../../../ducks/screen';\nimport Hero from \"../../hero\";\n\nimport menuSound from '../../../sound_clips/menu_select.mp3'\n\n// import { useShop } from '../../../ducks/shop';\n\nfunction handleOption(option, dispatch, player){\n    let restB = document.getElementById('restButton');\n    let resurectB = document.getElementById('resurectButton');\n    let trainB = document.getElementById('trainButton');\n    \n    restB.disabled = true;\n    restB.style.zIndex = -1;\n    resurectB.disabled = true;\n    resurectB.style.zIndex = -1;\n    trainB.disabled = true;\n    trainB.style.zIndex = -1;\n\n    switch (option) {\n        case 'train':\n            console.log('train button pressed')\n            dispatch(updateGameState({screen:'Map'}));\n            dispatch(updateScreen('Map'))\n            break;\n\n        case 'rest':\n            console.log('rest button pressed')\n\n            let healthPoints = document.getElementById('healthPointsBonfire');\n\n            let twentyFivePercent = player.health * 0.25\n            \n            if( Math.floor(player.health + twentyFivePercent) > player.maxHealth){\n                dispatch(updatePlayer({health: player.maxHealth}));\n            }else{\n                dispatch(updatePlayer({health: Math.floor(player.health + twentyFivePercent) }));\n            }\n\n            healthPoints.animate([\n                {transform: 'scale(1)'},\n                {transform: 'scale(1.4)'},\n                {transform: 'scale(1)'}\n            ], {\n                duration: 500,\n                iterations: 1\n            })\n\n            dispatch(updateGameState({screen:'Map'}));\n            setTimeout( function(){\n                dispatch(updateScreen('Map'))\n            }, 1000);\n\n            break;\n        case 'resurect':\n            console.log('resurect button pressed')\n            dispatch(updateGameState({screen:'Map'}));\n            dispatch(updateScreen('Map'))\n            break;\n    }\n}\n\nfunction playMenuSound(){\n    let sounds = document.createElement('audio');\n    sounds.src = menuSound;\n    sounds.volume = 0.1;\n    sounds.play();\n}\n\nconst BonfireScreen = () => {\n\n    const dispatch = useDispatch();\n    const player = usePlayer();\n\n    return (\n        <div className={styles.screenContainer}>\n        <div className={styles.screen}>\n\n        <h1>🔥 Bonfire 🔥 </h1>\n\n        <h4 id=\"healthPointsBonfire\">❤️{player.health} / {player.maxHealth}</h4>\n\n        <div className={styles.heroLineUp}>\n            <Hero \n                heroType={'mage'} \n                status={'normal'}\n            />\n\n            <Hero \n                heroType={'sword'} \n                status={'normal'}\n            />\n\n            <Hero \n                heroType={'shield'} \n                status={'normal'}\n            />\n        </div>\n\n\n        <div style={{display: 'flex', flexDirection: 'column'}}>\n            <div style={{display: 'flex', flexDirection: 'row'}}>\n\n                <button id=\"trainButton\" onMouseEnter={()=>playMenuSound()} className={styles.bonfireOption} onClick={() => handleOption('train', dispatch, player)} >\n                    🗻 TRAIN \n                    <div className={styles.subtext}>Upgrade a heros card...</div>\n                </button>\n\n                <button id=\"restButton\" onMouseEnter={()=>playMenuSound()} className={styles.bonfireOption} onClick={() => handleOption('rest', dispatch, player)}>\n                    🔥 REST \n                    <div className={styles.subtext}>Heal 25% of parties health points...</div>\n                </button>\n\n                <button id=\"resurectButton\"  onMouseEnter={()=>playMenuSound()} className={styles.bonfireOption} onClick={() => handleOption('resurect', dispatch, player)}>\n                    ✨ Resurect\n                    <div className={styles.subtext}>Resurect all dead heros...</div>\n                </button>\n\n            </div>\n        </div>\n\n        </div>\n    </div>\n    );\n}\n\nexport default BonfireScreen;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./trial.module.scss\";\n\nimport { updateGameState } from '../../../ducks/game_state'\nimport { usePlayer } from '../../../ducks/player';\nimport { updateScreen } from '../../../ducks/screen';\n\nconst updateGame = (dispatch, choice) =>{\n    console.log('choice:', choice);\n    dispatch(updateGameState({screen:'Map'}));\n    dispatch(updateScreen('Map'));\n}\n\nconst TrialScreen = () => {\n\n    const dispatch = useDispatch();\n    // const game_state = useGameState();\n    const player = usePlayer();\n\n\n    return (\n    <div className={styles.screenContainer}>\n        <div className={styles.screen}>\n\n        <div className={styles.trialTitle}>\n            Trial Title\n            <h4>❤️{player.health}</h4>\n        </div>\n\n        <div className={styles.artContainer}>\n            <h4> trial art here </h4>\n        </div>\n\n        <div className={styles.trialInfoContainer}>\n            <div className={styles.trialDescription}>\n                <h5> trial description </h5>\n                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor...  \n            </div>\n\n            <div className={styles.trialOptionsContainer}>\n                <button className={styles.trialOptions} onClick={() => updateGame(dispatch, 'attempt')}>Attempt...</button>\n                <button className={styles.trialOptions} onClick={() => updateGame(dispatch, 'run')}>Run...</button>\n                <button className={styles.trialOptions} onClick={() => updateGame(dispatch, 'bargin')}>Bargin...</button>\n            </div>\n        </div>\n\n\n        </div>\n    </div>\n    );\n}\n\nexport default TrialScreen;\n","export const track_list = [\n    {\n      for: \"Title\",\n      name: \"Night in a seashell\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_42_-_Night_in_a_seashell.mp3\"\n    },\n    {\n      for: \"Map\",\n      name: \"The adventure\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_22_-_The_adventure.mp3\"\n    },\n    {\n      for: \"Combat\",\n      name: \"Intensive puzzle resolution\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_36_-_Intensive_puzzle_resolution.mp3\"\n    },\n    {\n      for: \"Resolution\",\n      name: \"WIN\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_11_-_WIN.mp3\"\n    },\n    {\n      for: \"Fail\",\n      name: \"Chocolate Valley\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_51_-_Chocolate_Valley.mp3\"\n    },\n    {\n      for: \"Shop\",\n      name: \"Tea with Granma\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_56_-_Tea_with_Granma.mp3\"\n    },{\n      for: \"Bonfire\",\n      name: \"Night in a seashell\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_42_-_Night_in_a_seashell.mp3\"\n    },{\n      for: \"Trial\",\n      name: \"The Challenge\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_62_-_The_Challenge.mp3\"\n    },{\n      for: \"end\",\n      name: \"Night in a seashell\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_70_-_Ending.mp3\"\n    },\n    {\n      for: \"HeroSelection\",\n      name: \"Night in a seashell\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_70_-_Ending.mp3\"\n    },\n\n  ];","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nimport {track_list} from \"../game-data/tracks\"\n\nexport const setTrack = createAction('music/SET_TRACK');\nexport const load = createAction('music/LOAD');\nexport const loop = createAction('music/LOOP');\nexport const mute = createAction('music/MUTE');\nexport const updateVolume = createAction('music/UPDATE_VOLUME');\n\n\nconst initialState = {\n    curr_track : document.createElement('audio'),\n    is_playing : false,\n    is_looping : false,\n    is_muted: true,\n    curr_volume: parseFloat(0.5),\n}\n\nconst reduceMuteTrack = ({ curr_track, is_muted, ...rest}) => {\n    if (is_muted){\n        curr_track.muted = false\n        return { ...rest, is_muted: false, curr_track: curr_track}\n    }else{\n        curr_track.muted = true\n        return { ...rest, is_muted: true, curr_track: curr_track}\n    }\n}\n\nconst reduceLoadTrack = ({ curr_track, track, is_looping, curr_volume, ...rest}) => {\n    curr_track.src = track.path;\n    curr_track.load();\n    curr_track.autoplay = true; \n    curr_track.loop = is_looping;\n    console.log('volume:', curr_volume);\n    curr_track.volume = curr_volume;\n    return { ...rest, curr_track: curr_track, track: track, is_looping: is_looping, curr_volume: curr_volume }\n}\n\nconst reduceUpdateVoulme = (state, volume) => {\n    state.curr_volume = parseFloat(volume);\n    state.curr_track.volume = parseFloat(volume);\n}\n\nexport default handleActions({\n    [setTrack]: (state, action) => ({ ...state, track: action.payload}),\n    [load]: reduceLoadTrack,\n    [loop]: (state, action) => ({ ...state, is_looping: action.payload}),\n    [mute]: reduceMuteTrack,\n    [updateVolume]: (state, action) => {\n        reduceUpdateVoulme( state, action.payload )\n        return({ ...state, curr_volume: parseFloat(action.payload)})\n    }\n}, initialState);\n\n\nconst selectMusic = createSelector(\n    state => state.music,\n    music => music   \n)\n\nexport const useMusic = () => useSelector(selectMusic);\n","import React, { useEffect } from 'react';\nimport { useMusic, load, loop, mute, setTrack, updateVolume} from '../../ducks/music';\nimport { track_list } from '../../game-data/tracks';\nimport { useDispatch } from 'react-redux'\nimport {useScreen} from '../../ducks/screen';\n\n\nconst playButton = (dispatch, screen) => {    \n    const screenTrack = track_list.find(track => track.for === String(screen));\n    dispatch(setTrack(screenTrack));\n\n    dispatch(mute());\n\n    if(screen !== 'Resolution'){\n        dispatch(loop(true));\n    }else{\n        dispatch(loop(false));\n    }\n    dispatch(load());\n\n    let playButton = document.getElementById('musicPlayButton');\n    playButton.style.opacity = '0';\n    playButton.style.position = 'absolute';\n    playButton.style.zIndex = '-1';\n    playButton.disabled = 'disabled';\n\n    let muteToggleButton = document.getElementById('musicToggle');\n    muteToggleButton.style.opacity = '1';\n}\n\nconst muteToggleButton = (dispatch, is_muted, screen) => {\n    let musicToggle = document.getElementById('musicToggle');\n    dispatch(mute());\n\n    if (is_muted){\n        document.getElementById(\"musicToggle\").innerHTML = \"Sound: ON\";\n        musicToggle.style.opacity = 1;\n        \n        const screenTrack = track_list.find(track => track.for === String(screen));\n        \n        if (screen !== 'Resolution'){\n            dispatch(loop(true));\n        }else{\n            dispatch(loop(false));\n        }\n\n        dispatch(setTrack(screenTrack));\n        dispatch(load());\n\n    }else{\n        document.getElementById(\"musicToggle\").innerHTML = \"Sound: OFF\";\n        musicToggle.style.opacity = .5;\n\n    }\n    \n}\n\nconst Music = () => {\n\n    const music = useMusic();\n    const dispatch = useDispatch();\n    const screen = useScreen();\n\n    useEffect(() => {\n        if (!music.is_muted){\n            console.log('Screen:', screen);\n            const screenTrack = track_list.find(track => track.for === String(screen));\n            console.log('attempting to load:',screenTrack);\n            if(screen !== 'Resolution'){\n                dispatch(loop(true));\n            }else{\n                dispatch(loop(false));\n            }\n            dispatch(setTrack(screenTrack));\n            dispatch(load());\n        }\n    },[screen])\n\n    return(\n        <>\n            <div>\n                <button id=\"musicPlayButton\" onClick={ () => playButton(dispatch, screen) }>\n                    Allow Music\n                </button>\n                <button id=\"musicToggle\" style={{opacity:'0', zIndex:'-1'}} onClick={ () => muteToggleButton(dispatch, music.is_muted, screen) }> \n                    Sound: ON\n                </button>\n                <br/> \n                <input id=\"volume\" type=\"range\" min=\"10\" max=\"100\" onChange={ (e) => dispatch(updateVolume(e.target.value/100)) }/>\n                <audio id='audio'> </audio>\n            </div>\n        </>\n    )\n    \n    \n}\n\nexport default Music;\n\n","import React from 'react';\nimport styles from './transition.module.scss'\n\n\nconst Transition = () => {\n    return(\n        <div id='overlayT' className={styles.overlay}>\n        </div>        \n    )\n}\n\nexport default Transition;\n","import React from 'react';\n\n// Screens\nimport Title from './components/screens/title';\nimport Combat from './components/screens/combat';\nimport Resolution from './components/screens/resolution';\nimport HeroSelection from './components/screens/hero-selection';\nimport Map from './components/screens/map';\nimport Shop from './components/screens/shop';\nimport Bonfire from './components/screens/bonfire';\nimport Trial from './components/screens/trial';\n\nimport Music from './components/music';\n\nimport { useScreen } from './ducks/screen';\n\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\n\nimport Transition from './components/transition';\n\nconst screens = {\n  Title,\n  Combat,\n  Resolution,\n  HeroSelection,\n  Map,\n  Shop,\n  Bonfire,\n  Trial\n}\n\n\n\nconst App = () => {\n  const screen = useScreen();\n  const Screen = screens[screen];\n\n  const handle = useFullScreenHandle();\n  \n  return (\n    <>\n      <button onClick={handle.enter}>\n        Enter fullscreen\n      </button>\n\n      <Music />\n\n      <FullScreen handle={handle}>\n        <Transition />\n        <Screen />\n      </FullScreen>\n    </>\n  )\n\n}\n\nexport default App\n","import { combineReducers } from 'redux';\nimport player from './player';\nimport monster from './monster';\nimport screen from './screen';\nimport combat from './combat';\nimport game_state from './game_state';\nimport map from './map';\nimport shop from './shop';\nimport music from './music';\n\nexport default combineReducers({\n    player,\n    monster,\n    screen,\n    combat,\n    game_state,\n    map,\n    shop,\n    music\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport { Provider } from 'react-redux'\nimport configureStore from './configurestore'\n\nconst rootElement = document.getElementById('root');\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    rootElement\n);\n","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport rootReducer from './ducks/'\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers)\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n  return store;\n}\n\n\n"],"sourceRoot":""}