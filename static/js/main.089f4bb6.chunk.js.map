{"version":3,"sources":["components/screens/end/end.module.scss","components/screens/hero-selection/hero-selection.module.scss","components/screens/title/title.module.scss","components/screens/encounter/encounter.module.scss","components/draw-zone/draw-zone.module.scss","components/discard-zone/discard-zone.module.scss","components/player-health/player-health.module.scss","components/screens/map/map.module.scss","ducks/screen.js","game-data/creep-data.js","ducks/foe.js","ducks/player.js","game-data/card-data.js","game-data/heros-data.js","ducks/climbState.js","game-data/game-state.js","components/screens/title/title.jsx","components/hand/hand.jsx","components/draw-zone/draw-zone.jsx","components/discard-zone/discard-zone.jsx","components/player-health/player-health.jsx","components/foe-zone/foe-zone.jsx","ducks/encounter.js","components/turn-bttn/turn-bttn.jsx","components/screens/encounter/encounter.jsx","components/screens/end/end.jsx","components/screens/hero-selection/hero-selection.jsx","game-data/path-data.js","components/screens/map/map.jsx","App.js","ducks/index.js","index.js","configurestore.js","components/hand/hand.module.scss","components/foe-zone/foe-zone.module.scss"],"names":["module","exports","setScreen","createAction","handleActions","state","action","payload","selectScreen","createSelector","screen","creeps","name","art","health","total","armor","telegraphing","order","target","effect","power","moves","spawnFoe","updateFoe","selectFoe","foe","useFoe","useSelector","updatePlayer","setDeck","drawCard","playCard","playIndexedCard","discardHand","voidCard","shuffleDeck","drawHand","shuffle","deck","j","x","i","length","Math","floor","random","slice","hand","discard","rest","shuffledDiscard","grabCard","newDeck","newHand","newDiscard","emptyHand","console","log","splice","voidPile","void","selectPlayer","player","usePlayer","cards","type","energy","exhaust","description","card_id","heros","hero","maxHealth","map","id","updateClimbState","defeat","playerScore","selectClimbState","climbState","gameState","TitleScreen","dispatch","useDispatch","className","titleStyle","game","title","menu","onClick","Card","onCardClick","index","cardIndex","getState","card","energyCost","foeArmor","newEnergy","trample","newFoeHealth","parseInt","heal","newPlayerHealth","newPlayerArmor","key","styles","customButton","titleSection","Hand","activeZone","DrawZone","drawZone","DiscardZone","discardZone","PlayerHealth","useEffect","bar","document","getElementById","style","backgroundColor","height","width","dmg","updateHealthBar","position","opacity","updateArmorBar","playerHealthBorder","playerHealthIndicator","getTelegraph","FoeZone","foeHealth","foeMax","telegraph","newBar","ceil","updateFoeHealthBar","newArmor","updateFoeArmorBar","foeZone","foeTitle","foeImg","src","alt","foeHealthBorder","foeHealthIndicator","updateEncounter","encounter","TurnBttn","zone","combatMsgs","innerHTML","setTimeout","moveMsg","newHealth","newFoeArmor","lengthOfMoves","Object","keys","newPos","newTelegraph","filter","obj","devButton","EncounterScreen","combatZoneOverlay","playerZone","EndScreen","header","body","bttn","gameScreen","menuContainer","menuHeader","menuBody","menuFooter","menuOption","HeroSelection","heroType","heroContainer","heroTitle","heroImg","paths","path","entryPoint","exitPoint","pathLimit","eventType","exitPointConnected","getHeading","directionX","directionY","getLeftOfDirection","direction","checkPath","y","find","e","checkPathVoid","genNewPath","currentX","currentY","newDirectionX","newDirectionY","locationX","locationY","northPathRequired","eastPathRequired","southPathRequired","westPathRequired","northPathVoid","eastPathVoid","southPathVoid","westPathVoid","canTurnRight","canTurn","updateX","updateY","checkRightPath","min","max","heading","dice","requiredPaths","north","east","south","west","push","getRequiredPaths","voidPaths","getVoidPaths","getRightOfDirection","flip","genMap","walkLength","rows","columns","array","Array","initMap","mapWidth","mapHeight","startingPath","step","pathInfo","screens","Title","Encounter","End","Map","pathRowContainer","xCord","pathColumnOutline","yCord","pathRowOutline","nodeRow","nodeBlock","d","App","Screen","combineReducers","rootElement","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","rootReducer","configureStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.089f4bb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameScreen\":\"end_gameScreen__3_bHv\",\"menuContainer\":\"end_menuContainer__20kGJ\",\"menuHeader\":\"end_menuHeader__3XtIx\",\"menuBody\":\"end_menuBody__1hAks\",\"menuFooter\":\"end_menuFooter__2EMr_\",\"menuOption\":\"end_menuOption__1DeVu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameScreen\":\"hero-selection_gameScreen__CCdN_\",\"menuContainer\":\"hero-selection_menuContainer__gH6KW\",\"heroContainer\":\"hero-selection_heroContainer__3o7wE\",\"heroTitle\":\"hero-selection_heroTitle__1tGMV\",\"heroImg\":\"hero-selection_heroImg__1gPUg\",\"title\":\"hero-selection_title__JAIMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"title_game__y3Wr0\",\"menu\":\"title_menu__2pkpl\",\"title\":\"title_title__2XrX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"encounter_game__ht2XY\",\"playerZone\":\"encounter_playerZone__1sPHB\",\"combatZoneOverlay\":\"encounter_combatZoneOverlay__13FuS\",\"combatMsgs\":\"encounter_combatMsgs__2tEeR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawZone\":\"draw-zone_drawZone__29T8p\",\"energy\":\"draw-zone_energy__1txD3\",\"deck\":\"draw-zone_deck__3wxHk\",\"devButton\":\"draw-zone_devButton__lMg0t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discardZone\":\"discard-zone_discardZone__ebvxy\",\"void\":\"discard-zone_void__3aCqG\",\"discard\":\"discard-zone_discard__1RQku\",\"devButton\":\"discard-zone_devButton__qShdt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerHealthBorder\":\"player-health_playerHealthBorder__3CNh9\",\"playerHealthIndicator\":\"player-health_playerHealthIndicator__2DJ9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameScreen\":\"map_gameScreen__2szj2\",\"menuContainer\":\"map_menuContainer__3LGRf\",\"menuHeader\":\"map_menuHeader__2jCHg\",\"menuBody\":\"map_menuBody__Oh96d\",\"menuFooter\":\"map_menuFooter__2ZoNJ\",\"menuOption\":\"map_menuOption__348-F\",\"pathRowContainer\":\"map_pathRowContainer__MIfIz\",\"pathRow\":\"map_pathRow__2OLcN\",\"node\":\"map_node__1N4no\",\"pathColumnOutline\":\"map_pathColumnOutline__CP89M\",\"pathRowOutline\":\"map_pathRowOutline__18O8C\",\"nodeRow\":\"map_nodeRow__1ItbN\",\"nodeBlock\":\"map_nodeBlock__2gX7d\",\"pathArray\":\"map_pathArray__2UhAn\"};","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\n\nexport const setScreen = createAction('screen/SET_SCREEN');\n\nconst initialSreenState = 'Title';\n\nexport default handleActions({\n    [setScreen]: (state, action) => state = action.payload,\n}, initialSreenState);\n\nconst selectScreen = createSelector(\n    state => state.screen,\n    screen => screen   \n)\n\nexport const useScreen = () => useSelector(selectScreen);\n\n","\n\n\nexport const creeps = [\n    {\n        name: 'Slime',\n        art: 'https://i.imgur.com/Sun4iBT.png?1',\n        // health: 36, <- normal health\n        health: 5,\n        total: 36,\n        armor: 0,\n        telegraphing: [{ \n                name: ['Spit'],\n                order: 0,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [8]\n            }],\n        moves: [\n            {\n                name: ['Spit'],\n                order: 0,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [8]\n            },\n            {\n                name: ['Whip'],\n                order: 1,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [13]\n            },\n            {\n                name : ['Soften'],\n                order: 2,\n                target: ['self'],\n                effect: ['armor'],\n                power: [12]\n            }\n        ]\n    },\n    {\n        name: 'Living Armor',\n        art: 'https://i.imgur.com/yl0eGRj.png?4',\n        health: 55,\n        total: 55,\n        armor: 0,\n        telegraphing: [\n            {\n                name: ['Lunging Strike'],\n                order: 0,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [30]\n            }],\n        moves: [\n            {\n                name: ['Lunging Strike'],\n                order: 0,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [30]\n            },\n            {\n                name: ['Defensive Mode'],\n                order: 1,\n                target: ['self'],\n                effect: ['wait'],\n                power: [0]\n            },\n            {\n                name: ['Repair'],\n                order: 2,\n                target: ['self'],\n                effect: ['heal'],\n                power: [20]\n            },\n            {\n                name: ['Offensive Mode'],\n                order: 3,\n                target: ['self'],\n                effect: ['wait'],\n                power: [0]\n            },\n        ]\n    }\n    // {\n    //     name: 'Living Armor',\n    //     art: 'https://i.imgur.com/yl0eGRj.png?4',\n    //     health: 52,\n    //     totalHealth: 52,\n    //     armor: 0,\n    //     telegraphing: ['damage 7'],\n    //     moves: {\n    //         'strike':{\n    //             order: 0,\n    //             target: ['hero'],\n    //             effect: ['damage'],\n    //             power: [7]\n    //         },\n    //         'Repair':{\n    //             order: 1,\n    //             target: ['self'],\n    //             effect: ['damage'],\n    //             power: [10]\n    //         },\n    //     }\n    // },\n    // TO REDO: - - - - - - - - - - - - - - - - WIP:\n    // {\n    //     name: 'living armor',\n    //     properties: {\n    //         art: 'art uri',\n    //         health: {\n    //             base: 15,\n    //             mod: 5\n    //         },\n    //         attacks: {\n    //             move: ['strike'],\n    //             dmg: [5]\n    //         },\n    //         deffends: {\n    //             move: ['meld'],\n    //             def: [10]\n    //         }\n    //     }\n    // },\n    // {\n    //     name: 'spooky skeleton',\n    //     properties: {\n    //         art: 'art uri',\n    //         health: {\n    //             base: 10,\n    //             mod: 6\n    //         },\n    //         attacks: {\n    //             move: ['tackle', 'smash'],\n    //             dmg: [4, 8]\n    //         },\n    //         deffends: {\n    //             move: ['calcium'],\n    //             def: [6]\n    //         }\n    //     }\n    // },\n]","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { creeps } from '../game-data/creep-data';\n\n// export const setFoeName = createAction('foe/SET_FOE_NAME');\n// export const setFoeImg = createAction('foe/SET_FOE_IMG');\n// export const setFoeTotalHealth = createAction('foe/SET_FOE_TOTAL_HEALTH');\n// export const setFoeMoves = createAction('foe/SET_FOE_MOVES');\nexport const spawnFoe = createAction('foe/SPAWN_FOE');\nexport const updateFoe = createAction('foe/UPDATE_FOE');\n\nconst initialState = { };\n\n// name: 'Slime',\n// art: 'https://i.imgur.com/Sun4iBT.png?1',\n// health: 10,\n// totalHealth: 10,\n// armor: 0,\n// telegraphing: ['damage 5'],\n// moves: {\n//     'whip':{\n//         priority: 0,\n//         target: ['hero'],\n//         effect: ['damage'],\n//         power: [5]\n//     },\n//     'spit':{\n//         priority: 1,\n//         target: ['hero'],\n//         effect: ['damage'],\n//         power: [8]\n//     },\n//     'soften':{\n//         priority: 1,\n//         target: ['self'],\n//         effect: ['armor'],\n//         power: [12]\n//     }\n// }\n\n\nexport default handleActions({\n    [spawnFoe]: (state) => ({ ...state, ...creeps[0] }),\n    [updateFoe]: (state, action) => {\n        return ({ ...state, ...action.payload })\n    },\n}, initialState);\n\n\n// how we grab data from the store\nconst selectFoe = createSelector(\n    state => state.foe,\n    foe => foe   \n)\n\nexport const useFoe = () => useSelector(selectFoe);\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { updateFoe } from './foe';\n\n// TODO: clean up and organize\n\n// Alter Health, Energy & Armor Actions:\nexport const updatePlayer = createAction('player/UPDATE_PLAYER');\n// export const newRound = createAction('player/NEW_ROUND');\n\n// Deck Actions:\nexport const setDeck = createAction('player/SET_DECK');\nexport const drawCard = createAction('player/DRAW_CARD');\nexport const playCard = createAction('player/PLAY_CARD');\n\nexport const playIndexedCard = createAction('player/PLAY_INDEXED_CARD');\nexport const discardHand = createAction('player/DISCARD_HAND');\n\nexport const voidCard = createAction('player/VOID_CARD');\nexport const shuffleDeck = createAction('player/SHUFFLE_DECK');\n\n// Hand actions\nexport const drawHand = createAction('player/DRAW_HAND');\n\nconst initialState = {}\n\n\nfunction shuffle(deck) {\n    var j, x, i\n    for (i = deck.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1))\n        x = deck[i]\n        deck[i] = deck[j]\n        deck[j] = x\n    }\n    return deck\n}\n\n/**\n * \n * {\n *  name,\n *  health,\n *  deck,\n *  health,\n * }\n */\n\n\nconst reduceDrawCard = ({ discard, deck, hand, ...rest }) => {\n    if ( deck.length == 0 ){\n        if ( discard.length == 0 ){\n            return { ...rest, discard, deck, hand}\n        } else {\n            const shuffledDiscard = shuffle(discard)\n            const grabCard = shuffledDiscard[shuffledDiscard.length-1]\n            const newDeck = shuffledDiscard.slice(0, shuffledDiscard.length-1)        \n            const newHand = [...hand, grabCard]\n            return { ...rest, hand: newHand, deck: newDeck, discard: [] }\n        }\n    } else {\n        return { ...rest, hand: [...hand, deck[deck.length-1]], deck: deck.slice( 0, deck.length -1), discard }\n    }\n}\n\nconst reducePlayCard = ({ discard, hand, ...rest }) => {\n    const emptyHand = hand.length < 1;\n    \n    if (!emptyHand){\n        const newHand =  hand.slice( 0, hand.length-1)\n        const newDiscard = [...discard, hand[hand.length-1] ]\n        return { ...rest, hand: newHand, discard: newDiscard}\n    }else{\n        return { ...rest, hand, discard}\n    }\n}\n\nconst reducePlayIndexedCard = ({ discard, hand, ...rest } , {payload}) => {\n    const emptyHand = hand.length < 1;\n    console.log(payload)\n\n    if (!emptyHand){\n        const grabCard = hand[payload]\n        hand.splice(payload, 1)\n        const newHand = hand\n        const newDiscard = [...discard, grabCard]\n        return { ...rest, hand: newHand, discard: newDiscard}\n    }else{\n        return { ...rest, hand, discard}\n    }\n}\n\nconst reduceDiscardHand = ({ discard, hand, ...rest }) => {\n    const emptyHand = hand.length < 1;\n\n    if (!emptyHand){\n        const newHand = []\n        const newDiscard = [...discard, ...hand ]\n        return { ...rest, hand: newHand, discard: newDiscard}\n    }else{\n        return { ...rest, hand, discard}\n    }\n}\n\n\nexport default handleActions({\n    [drawHand]: (state) => ({...state, deck: state.deck.slice( 0, state.deck.length -5), hand: [...state.hand, ...state.deck.slice(-5)]}),\n    [shuffleDeck]: (state) => ({...state, deck: shuffle(state.deck)}),\n    [updatePlayer]: (state, action) => ({ ...state, ...action.payload }),\n    [setDeck]: (state, action) => ({...state, deck: action.payload }),\n    \n    [drawCard]: reduceDrawCard,\n    [playCard]: reducePlayCard,\n    \n    [playIndexedCard]: reducePlayIndexedCard,\n    [discardHand]: reduceDiscardHand,\n\n    [voidCard]: (state, action) => ({...state, hand: state.hand.slice(action.payload, 1), voidPile: [...state.void, state.hand.slice(action.payload, 1)]}),\n}, initialState);\n\n// notes:\n// might need to see if I can set initialStates later ???????\n// [newRound]: (state) => ({...state, energy: initialState.energy, armor: initialState.armor}),\n// deck handle:\n\n\n// how we grab data from the store\nconst selectPlayer = createSelector(\n    state => state.player,\n    player => player   \n)\n\nexport const usePlayer = () => useSelector(selectPlayer);\n\n\n\n// Async Actions\nexport const applyCard = (cardIndex) => (dispatch, getState) => {\n    const state = getState();\n\n\n    const card = state.player.hand[cardIndex]\n    const energyCost = card.energy;\n    const foeArmor = state.foe.armor\n\n    if (energyCost <= state.player.energy) {\n        const newEnergy = state.player.energy - energyCost\n        if (card.action.target==\"foe\"){\n            if (card.action.effect==\"damage\"){\n                const damage = card.action.power\n                const trample = foeArmor - damage\n                if (trample < 0) {\n                    const newFoeHealth = parseInt(state.foe.health) + parseInt(trample)\n                    dispatch(updateFoe({ health: newFoeHealth, armor: 0}))\n                }else{\n                    const newFoeArmor = trample\n                    dispatch(updateFoe({ armor: newFoeArmor }))\n                }\n                dispatch(updatePlayer({ energy: newEnergy }))\n            }\n        } else {\n            if (card.action.effect==\"heal\"){\n                const heal = card.action.power\n                const newPlayerHealth = parseInt(state.player.health) + parseInt(heal)\n                dispatch(updatePlayer({ health: newPlayerHealth, energy: newEnergy }))\n            } else if (card.action.effect==\"armor\"){\n                const armor = card.action.power\n                const newPlayerArmor = parseInt(state.player.armor) + parseInt(armor)\n                dispatch(updatePlayer({ armor: newPlayerArmor, energy: newEnergy}))\n            }\n        }\n        dispatch(playIndexedCard(cardIndex))\n    } else {\n        console.log(\"! Not Enough Energy !\")\n    }\n\n\n}\n\n\n\n","export const cards = [\n    {\n        name: 'Slash',\n        art: '<art url>',\n        type: 'attack',\n        energy: 1,\n        exhaust: false,\n        action: {\n            target: ['foe'],\n            effect: ['damage'],\n            power: [5]\n        },\n        description: \"Deal 5 damage\",\n        card_id: 0\n        \n    },\n    {   \n        name: 'Guard',\n        art: '<art url>',\n        type: 'defend',\n        energy: 1,\n        exhaust: false,\n        action: {\n            target: ['hero'],\n            effect: ['armor'],\n            power: [5]\n        },\n        description: \"+5 Armor\",\n        card_id: 1\n    },\n    {   \n        name: 'Heal',\n        art: '<art url>',\n        type: 'skill',\n        energy: 2,\n        exhaust: true,\n        action: {\n            target: ['hero'],\n            effect: ['heal'],\n            power: [8]\n        },\n        description: \"Heal 8 damage\",\n        card_id: 2\n    },\n];","import {cards} from './card-data'\n\nexport const heros = [\n    {\n        hero: 'sword',\n        // health: 55,\n        health: 10,\n        maxHealth: 55,\n        energy: 3,\n        armor: 0,\n        deck: [0,0,0,0,0,1,1,1,1,1,2].map(id => cards[id]),\n        hand: [],\n        discard: [],\n        void: []\n    },\n\n    {\n        hero: 'fire',\n        health: 45,\n        maxHealth: 45,\n        energy: 4,\n        armor: 0,\n        deck: [0,0,0,0,0,1,1,1,1,1,2].map(id => cards[id]),\n        hand: [],\n        discard: [],\n        void: []\n    }\n];\n\n\n\n\n\n\n\n\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nexport const updateClimbState = createAction('climbState/UPDATE_CLIMB_STATE');\n\nconst initialState = {\n    defeat: false,\n    floor: 0,\n    playerScore: 0,\n}\n\nexport default handleActions({\n    [updateClimbState]: (state, action) => ({ ...state, ...action.payload }),\n}, initialState);\n\n\nconst selectClimbState = createSelector(\n    state => state.climbState,\n    climbState => climbState   \n)\n\nexport const useClimbState = () => useSelector(selectClimbState);\n\n\n","\nexport const gameState = {\n\n    defeat: false,\n    floor: 0,\n    playerScore: 0,\n\n}","import React from 'react';\nimport titleStyle from \"./title.module.scss\";\nimport { setScreen } from '../../../ducks/screen';\nimport { useDispatch } from 'react-redux';\n\nimport { updatePlayer } from '../../../ducks/player'\nimport { heros } from '../../../game-data/heros-data'\n\nimport { updateClimbState } from '../../../ducks/climbState';\nimport { gameState } from '../../../game-data/game-state';\n\nconst TitleScreen = () => {\n\n    const dispatch = useDispatch();\n\n    // TODO: MOVE TO HERO WEAPON SELECTION SCREEN\n    dispatch(updatePlayer(heros[0]))\n    dispatch(updateClimbState(gameState))\n    \n    return (\n        <div className={titleStyle.game} >\n            <div className={titleStyle.title} >SLAY THE TOWER</div>\n            <div className={titleStyle.menu} onClick={() => dispatch(setScreen('Encounter'))}> TEST ENCOUNTER</div>\n            <div className={titleStyle.menu} onClick={() => dispatch(setScreen('HeroSelection'))}> NEW GAME </div>\n            <div className={titleStyle.menu} onClick={() => dispatch(setScreen('Map'))}> TEST MAP </div>\n        </div>\n    );\n}\n\nexport default TitleScreen","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './hand.module.scss'\nimport { usePlayer, applyCard } from '../../ducks/player';\n\n\n\nconst Card = () =>{\n\n    const player = usePlayer();\n    const dispatch = useDispatch();\n    const onCardClick = (index) =>  dispatch(applyCard(index));\n\n    return(\n        <div>\n            {\n                player.hand.map( (card, index) =>\n                    <button key={index} onClick={ () => onCardClick(index) } className={styles.customButton}>\n                        <div className = {styles.card}>\n\n                            <div className = {styles.titleSection}>\n\n                                <div className = {styles.title}> \n                                    {card.name} \n                                </div> \n\n                                <div className = {styles.energy}>\n                                    {card.energy}\n                                </div>\n\n                            </div>\n\n                            <br/>\n                            {card.art}\n                            <br/> <br/>\n                            {card.description}\n                        </div>\n                    </button>                \n                )}\n        </div>\n    );\n}\n\nconst Hand = () => {\n\n    // useEffect(() => { \n    //     // var card = document.createElement(\"div\");\n    //     // var node = document.createTextNode(\"This is new.\");\n    //     // card.appendChild(node);\n        \n    //     // var element = document.getElementById(\"hand\");\n    //     // var child = document.getElementById(\"c\");\n    //     // element.insertBefore(card, child);\n    // }, []);\n\n    const dispatch = useDispatch()\n\n    return (\n        <div className = {styles.activeZone}>\n            <div className = {styles.hand}>\n                <Card /> \n            </div>\n        </div>\n    );\n}\n\n\nexport default Hand;\n\n","import React from 'react';\nimport styles from './draw-zone.module.scss'\n\n// import Encounter from '../../game-mechanics/encounter';\nimport { usePlayer, playCard, drawCard } from '../../ducks/player';\nimport { useDispatch } from 'react-redux'\n\n\nconst DrawZone = () =>{\n    const player = usePlayer();\n    const dispatch = useDispatch()\n\n    return(\n        <div className={styles.drawZone}>\n            <div className={styles.energy}>\n                ENERGY: \n                <div/>\n                {player.energy}\n            </div>\n            <div className={styles.deck}>\n                DECK: <div/> {player.deck.length}\n                {/* <div/> */}\n                {/* <button className={styles.devButton} onClick={ () => dispatch( drawCard() ) }> DRAW </button> */}\n            </div>\n        </div>\n    );\n}\n\n\nexport default DrawZone;\n","import React from 'react';\nimport styles from './discard-zone.module.scss'\n\nimport { usePlayer, playCard, playIndexedCard } from '../../ducks/player';\nimport { useDispatch } from 'react-redux'\n\n\n\nconst DiscardZone = () =>{\n    const player = usePlayer();\n    const dispatch = useDispatch();\n    return(\n        <div className = {styles.discardZone}>\n            <div className={styles.void}> \n                VOID: <div/> {player.void.length}\n            </div>\n            <div className={styles.discard}>\n                DISCARD: <div/> {player.discard.length}\n                {/* <div/> */}\n                {/* <button className={styles.devButton} onClick={ () => dispatch( playCard() ) }> discard/play </button> */}\n            </div>\n        </div>\n    );\n}\n\n\nexport default DiscardZone;\n","import React from 'react';\nimport styles from './player-health.module.scss'\n\n// import Encounter from '../../game-mechanics/encounter';\nimport { usePlayer } from '../../ducks/player';\nimport { useEffect } from 'react';\n\n\nfunction updateHealthBar(health, maxHealth){\n    var bar = document.getElementById(\"playerHealthBar\")\n    bar.style.backgroundColor = 'darkgreen'\n\n    if (health == maxHealth){\n        bar.style.height = \"4vh\"\n        bar.style.width = \"80vw\"\n    }\n\n    if (health < maxHealth){\n        const dmg = ((health/maxHealth)*80) // 80vw\n        // const newBar = Math.ceil(health - dmg)\n        bar.style.width = dmg + \"vw\"        \n    }\n}\n\nfunction updateArmorBar(armor){\n    var bar = document.getElementById(\"armorBar\")\n    bar.style.backgroundColor = 'lightblue'\n    bar.style.position = 'absolute'\n    bar.style.opacity = '.75'\n\n    if (armor == 0){\n        bar.style.height = \"4vh\"\n        bar.style.width = \"0vw\" // 80 is max armor... should reach that tho...\n    }\n\n    if (armor > 0 ){\n        const newArmor = (armor/80) // 80vw\n        bar.style.width = armor + \"vw\"        \n    }\n}\n\nconst PlayerHealth = () =>{\n\n    const player = usePlayer();\n\n    useEffect( () => {\n        updateHealthBar(player.health, player.maxHealth)\n    }, [player.health])\n\n    useEffect( () => {\n        updateArmorBar(player.armor)\n    }, [player.armor])\n    \n    return(\n        <div className = {styles.playerHealthBorder}> \n            <div className = {styles.playerHealthIndicator}>\n                {player.health} / {player.maxHealth}\n            </div>\n            <div id=\"playerHealthBar\"> </div> \n            <div id=\"armorBar\"> </div>\n        </div>\n    );\n}\n\n\nexport default PlayerHealth;\n","import React from 'react';\nimport foe, { useFoe } from '../../ducks/foe'\nimport styles from \"./foe-zone.module.scss\";\nimport { useEffect } from 'react';\n\nfunction updateFoeHealthBar(foeHealth, foeMax){\n    var x = document.getElementById(\"foeHealthBar\")\n    x.style.backgroundColor = \"red\"\n\n    if (foeHealth == foeMax){\n        x.style.height = \"2vh\"\n        x.style.width = \"20vw\"\n    }\n\n    if (foeHealth < foeMax){\n        const dmg = ((foeHealth/foeMax)*20)\n        const newBar = Math.ceil(foeHealth - dmg)\n        x.style.width = newBar + \"vw\"        \n    }\n}\n\nfunction updateFoeArmorBar(armor){\n    var x = document.getElementById(\"foeArmorBar\")\n    x.style.backgroundColor = \"lightblue\"\n    x.style.opacity = \".75\"\n    x.style.position = \"absolute\"\n\n    if (armor == 0){\n        x.style.height = \"2vh\"\n        x.style.width = \"0vw\"\n    }\n\n    if (armor > 0){\n        // const dmg = ((foeHealth/foeMax)*20)\n        const newArmor = ((armor/100)*20)\n        x.style.width = newArmor + \"vw\"        \n    }\n}\n\nfunction getTelegraph(foe){\n    try{\n        // debugger;\n        console.log(\"contents:\", foe.telegraphing)\n        const answer = foe.telegraphing[0].effect + \" \"+ foe.telegraphing[0].power\n        return answer\n    }catch{\n        const answer = \"...\"\n        return answer\n    }\n}\n\nconst FoeZone = () =>{\n\n    const { health: foeHealth } = useFoe();\n    const { total: foeMax } = useFoe();\n    const { armor: foeArmor } = useFoe();\n    const foe = useFoe();\n    // const mv = foe.moves\n    // console.log( \"test:\", foe.moves ) \n    console.log(\"answer:\", getTelegraph(foe))\n    const telegraph = getTelegraph(foe)\n    \n\n    useEffect(() => {\n        updateFoeHealthBar(foeHealth, foeMax)\n    }, [foeHealth]);\n\n    useEffect(() => {\n        updateFoeArmorBar(foeArmor)\n    }, [foeArmor])\n    \n    return(\n        <div className={styles.foeZone}>\n            <div className = {styles.foe}>\n\n                <div className={styles.telegraph}> {telegraph} </div>\n                <div className={styles.foeTitle}> {foe.name} </div>\n                <img className = {styles.foeImg} src={foe.art} alt=\"foe img\"/>\n\n                <div className = {styles.foeHealthBorder}> \n                    <div className = {styles.foeHealthIndicator}> \n                        {foe.health} / {foe.total} \n                    </div>\n                    <div id=\"foeArmorBar\"> </div>\n                    <div id=\"foeHealthBar\"> </div>\n                    {/* className = {styles.foeHealthBar} */}\n                </div>\n\n                {/* {document.getElementById(\"foeHealthBar\").style.width= \"5\"} */}\n\n            </div>  \n        </div>        \n    );\n}\n\n\nexport default FoeZone;\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { updateFoe } from './foe';\nimport { updatePlayer, discardHand, drawCard } from './player';\n\n// export const setupEncounter = createAction('foe/SETUP_ENCOUNTER');\nexport const updateEncounter = createAction('foe/UPDATE_ENCOUNTER');\n\nconst initialState = {};\n\n\nexport default handleActions({\n    [updateEncounter]: (state, action) => ({ ...state.encounter, ...action.payload }),\n}, initialState);\n\n\n// how we grab data from the store\nconst selectEncounter = createSelector(\n    state => state.encounter,\n    encounter => encounter   \n)\n\nexport const useEncounter = () => useSelector(selectEncounter);\n\nexport const endTurn = () => (dispatch, getState) => {\n\n    var zone = document.getElementById('playerZone');\n    console.log(\"zone\", zone)\n\n    zone.style.height = \"58vh\"\n    zone.style.width = \"100vw\"\n    zone.style.backgroundColor = \"black\"\n    zone.style.opacity = .75\n    zone.style.position = \"absolute\"\n\n    var turnBttn = document.getElementById('turnBttn');\n    \n\n    var combatMsgs = document.getElementById('combatMsgs');\n\n    combatMsgs.innerHTML = \"Foes Turn!\"\n    setTimeout( function()\n    { \n        combatMsgs.innerHTML = \"Waiting.\"; \n        dispatch( discardHand() )\n    }, 1000 );\n    setTimeout( function(){ combatMsgs.innerHTML = \"Waiting..\"; }, 1500 );\n    setTimeout( function(){ combatMsgs.innerHTML = \"Waiting...\"; }, 2000 );\n    \n    const state = getState()\n    const player = state.player\n    const foe = state.foe\n\n    const telegraphing = foe.telegraphing\n\n    if ( telegraphing[0].effect == \"damage\" ){\n        const dmg = telegraphing[0].power\n        const moveMsg = foe.name + \" uses \" + telegraphing[0].name + \" dealing\\n\" + telegraphing[0].power + \" dmg\"\n        setTimeout( function(){ combatMsgs.innerHTML = moveMsg }, 3000);\n\n        const trample = player.armor - dmg\n        if ( trample <= 0 ){\n            const newArmor = 0\n            const newHealth = player.health + trample\n            setTimeout( function(){ dispatch( updatePlayer({ health: newHealth, armor: newArmor }) ) },4000);\n            \n        } else {\n            const newArmor = trample\n            setTimeout( function(){ dispatch( updatePlayer({ armor: newArmor }) ) },4000);    \n        }\n        //  if players health drops to 0, exit game... do that later\n\n    } else if (telegraphing[0].effect == 'armor') {\n        const newFoeArmor = telegraphing[0].power\n        const moveMsg = foe.name + \" uses \" + telegraphing[0].name + \" gaining\\n\" + telegraphing[0].power + \" armor\"\n        setTimeout( function(){ combatMsgs.innerHTML = moveMsg }, 3000)\n        setTimeout( function(){ dispatch( updateFoe({ armor: newFoeArmor })) },4000);\n    }\n\n    // adding in a new foe effects...\n    // if ( telegraphing[0].effect == ) \n\n    const moves = foe.moves\n    const lengthOfMoves = Object.keys(moves).length\n    const position = telegraphing[0].order\n\n    if ( position + 1 < lengthOfMoves ) {\n        const newPos = position+1\n        const newTelegraph = moves.filter(obj => {\n            if (obj.order === newPos){\n                return obj\n            }\n        })\n        \n        console.log (\"new Telegraph\",newTelegraph)\n        setTimeout( function(){ dispatch( updateFoe({ telegraphing: newTelegraph }) )}, 4500)\n   \n    } else {\n        const newPos = 0\n        const newTelegraph = moves.filter(obj => {\n            if (obj.order == newPos){\n                return obj\n            }        \n        })        \n        console.log (\"new Telegraph\",newTelegraph)\n        setTimeout( function(){ dispatch( updateFoe({ telegraphing: newTelegraph }) )}, 4500)\n    }\n\n\n    // notify player foe turn is over, and their turn now begins...\n    // with that we have to reset player armor & energy\n    // could handle everything from getState and updates here...\n\n    // TODO: await (dispatch)... create a function with Await(game action),(how-long). ( A Promise )\n    setTimeout( function(){ combatMsgs.innerHTML = \"Foe's Turn Over\" }, 5000);\n    setTimeout( function(){ combatMsgs.innerHTML = \"Armor & Energy Reset\" }, 6000);\n    setTimeout( function(){ dispatch( updatePlayer({ energy: 3, armor:0 }) )}, 6100);\n    setTimeout( function(){ combatMsgs.innerHTML = \"Your Turn...\" }, 7000);\n    \n    setTimeout( function(){     \n        dispatch( drawCard() )\n    }, 7000);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n    }, 7300);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n    }, 7600);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n    }, 7900);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n        zone.style.height = \"0vh\"\n        zone.style.width = \"0vw\"\n\n        // turnBttn.cursor = \"allowed\";\n        // turnBttn.backgroundColor = \"darkslategrey\"\n        // turnBttn.style.opacity = 1\n\n    }, 8200);\n\n\n\n}","import React from 'react';\nimport styles from './turn-bttn.scss'\n\n// import { usePlayer, playCard } from '../../ducks/player';\nimport { useDispatch } from 'react-redux'\n\nimport { endTurn } from '../../ducks/encounter'\n\n\n\nconst TurnBttn = () =>{\n    // const player = usePlayer();\n    const dispatch = useDispatch();\n\n    const onBttnClick = () =>  dispatch(endTurn());\n\n    return(\n        <button id=\"turnBttn\" onClick={onBttnClick} className = {styles.devButton}>\n            [ END TURN ]\n        </button>\n    );\n}\n\n\nexport default TurnBttn;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./encounter.module.scss\";\n\nimport { spawnFoe } from '../../../ducks/foe';\nimport { drawHand, shuffleDeck, useCard, usePlayer } from '../../../ducks/player';\n\nimport { setScreen } from '../../../ducks/screen';\n\nimport Hand from '../../hand'\nimport DrawZone from '../../draw-zone'\nimport DiscardZone from '../../discard-zone'\nimport PlayerHealth from '../../player-health'\nimport FoeZone from '../../foe-zone'\nimport TurnBttn from '../../turn-bttn'\n\nimport { useFoe } from '../../../ducks/foe'\n\nimport { updateClimbState } from '../../../ducks/climbState';\n\n\n\nconst EncounterScreen = () => {\n    const { health: foeHealth } = useFoe();\n    const player = usePlayer();\n\n    const dispatch = useDispatch();\n    \n\n    useEffect(() => {\n        dispatch(spawnFoe());\n        dispatch(shuffleDeck());\n        dispatch(drawHand());\n    }, []);\n\n    useEffect(() => {\n        // This block of code only executes when foeHealth changes\n        console.log(\"encounter foe hp:\", foeHealth)\n        if (foeHealth <= 0) {\n            dispatch(setScreen('End'))\n        }\n    }, [foeHealth]);\n\n    useEffect(() => {\n        if (player.health <= 0) {\n            dispatch( updateClimbState({defeat:true}) )\n            dispatch( setScreen('End') )\n        }\n    }, [player.health]);\n\n    return (\n    <div className={styles.game}>\n            {/* <button onClick={ () => dispatch( shuffleDeck() ) }> shuffle </button> */}\n            <PlayerHealth />\n            <FoeZone />\n            <div id='combatZone' className={styles.combatZoneOverlay}>\n                <div id='combatMsgs' className={styles.combatMsgs}> COMBAT MSGS </div>\n                <TurnBttn />\n            </div>\n\n            \n        <div className={styles.playerZone}> \n            <div id='playerZone'> </div>\n            <DrawZone />\n            <Hand />\n            <DiscardZone />\n        </div>\n    </div>\n    );\n    \n}\n\n\nexport default EncounterScreen;\n\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./end.module.scss\";\nimport { useClimbState } from '../../../ducks/climbState'\n\n\nimport { setScreen } from '../../../ducks/screen';\n\n\n// need to import reward cards...\n// select 3 random reward cards and display them.\n\n\n// for reward: body\n// import { drawHand, shuffleDeck, useCard } from '../../ducks/player';\n\n\nconst EndScreen = () => {\n\n    const dispatch = useDispatch();\n    const climbState = useClimbState();\n\n    let header = ''\n    let body = ''\n    let bttn = ''\n\n    if ( !climbState.defeat ) {\n        header = 'VICTORY'\n        body = 'You Won! Unfortunately there is no rewards yet... But they are on there way!'\n        bttn = 'CONTINUE'\n    } else {\n        header = 'DEFEAT'\n        body = 'You Lost!'\n        bttn = 'EXIT'\n    }\n\n    return (\n    <div className={styles.gameScreen}>\n        <div className={styles.menuContainer}>\n\n            <div className={styles.menuHeader}>\n                {header}\n            </div>\n\n            <div className={styles.menuBody}>\n                {body}\n            </div>\n\n            <div className={styles.menuFooter}>\n                <div className={styles.menuOption} onClick={() => dispatch(setScreen('Title'))}>\n                    {bttn}\n                </div>\n            </div>\n\n        </div>\n    </div>\n    );\n    \n}\n\n\nexport default EndScreen;\n\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./hero-selection.module.scss\";\n\n\nimport { gameState } from '../../../game-data/game-state';\nimport { updateClimbState } from '../../../ducks/climbState';\nimport { updatePlayer } from '../../../ducks/player'\nimport { heros } from '../../../game-data/heros-data'\nimport { setScreen } from '../../../ducks/screen';\n\n// import { HeroDetail } from './hero-detail';\n\n\n// in this screen player chooses hero weapon / deck\n\nconst HeroSelection = () => {\n\n    const dispatch = useDispatch();\n\n    const onCardClick = (heroType) => {\n        console.log(heroType)\n        dispatch(updatePlayer(heros[0]))\n        dispatch(updateClimbState(gameState))\n        dispatch(setScreen('Encounter'))\n        // will be changed to map screen.\n    }\n\n    return (\n        <div className={styles.gameScreen}>\n            <div className={styles.title} >CHOOSE YOUR HERO</div>\n\n            <div className={styles.menuContainer}>\n\n                <div onClick={ () => onCardClick('sword') } className={styles.heroContainer}>\n                    <div className={styles.heroTitle}> sword </div>\n                    <div className={styles.heroImg}></div>\n                </div>\n\n                {/* <div onClick={() => choice('staff')} className={styles.heroContainer}>\n                    <div className={styles.heroTitle}> staff </div>\n                    <div className={styles.heroImg}></div>\n                </div> */}\n            </div>\n        </div>\n    );\n}\n\n\nexport default HeroSelection;\n\n","export const paths = [\n    {   \n        path: 'end',\n        entryPoint: [],\n        exitPoint: [],\n        pathLimit: 1,\n        eventType: '',\n    },\n    {   \n        path: 'corner',\n        entryPoint: [], // this will be used during moves.\n        exitPoint: [], // N E S W // this will be used for map generation and moves.\n        exitPointConnected: [],\n        pathLimit: 2,\n        eventType: '',\n    },\n    {   \n        path: 'hall',\n        entryPoint: [],\n        exitPoint: [],\n        exitPointConnected: [],\n        pathLimit: 2,\n        eventType: '',\n    },\n    {   \n        path: 'fork',\n        entryPoint: [],\n        exitPoint: [],\n        exitPointConnected: [],\n        pathLimit: 3,\n        eventType: '',\n    },\n    {   \n        path: 'cross',\n        entryPoint: [],\n        exitPoint: ['N','E','S','W'],\n        exitPointConnected: [],\n        pathLimit: 4,\n        eventType: '',\n    },\n    {\n        path: 'empty',\n        entryPoint: [],\n        exitPoint: [],\n        exitPointConnected: [],\n        pathLimit: 0,\n        eventType: 'none',\n    }\n\n];\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./map.module.scss\";\nimport { useClimbState } from '../../../ducks/climbState'\nimport { setScreen } from '../../../ducks/screen';\n\n\nimport PoissonDiskSampling from 'poisson-disk-sampling'\nimport { random, head } from 'lodash';\nimport { useState } from 'react';\n\nimport { TiArrowUpOutline, TiChevronLeftOutline } from \"react-icons/ti\";\nimport { paths } from \"../../../game-data/path-data\"\n\nimport _ from 'lodash';\n\nconst mapWidth = 7;\nconst mapHeight = 7;\n\n/* initates map : row x column, with obj=empty */\nfunction initMap(rows, columns) {\n  var array = new Array(rows);\n  \n  for (var index = 0; index < rows; index++) {\n    array[index] = new Array(columns);\n  }\n\n  for (var x = 0; x < rows; x++){\n    for (let y = 0; y < columns; y++) {\n      array[x][y] = paths.find( paths => paths.path === 'empty')\n    }\n  }\n  \n  return array\n}\nfunction rollDice(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; \n}\n\n\n\n/* returns direction 'N:E:S:W' */\nfunction getHeading( directionX, directionY ){\n  if (directionX > 0){\n    return 'E'\n  }else if (directionX < 0){\n    return 'W'\n  }else if (directionY > 0){\n    return 'S'\n  }else{\n    return 'N'\n  }\n}\n/* flips direction */\nfunction flip( direction ){\n  switch (direction) {\n    case 'N':\n      return 'S'\n    case 'S':\n      return 'N'\n    case 'E':\n      return 'W'\n    case 'W':\n      return 'E'\n  }\n}\n/* returns right of passed direction */\nfunction getRightOfDirection( direction ){\n  switch (direction) {\n    case 'N':\n      return 'E'\n    case 'E':\n      return 'S'\n    case 'S':\n      return 'W'\n    case 'W':\n      return 'N'\n    }\n}\n/* returns left of passed direction */\nfunction getLeftOfDirection( direction ){\n  switch (direction) {\n    case 'N':\n      return 'W'\n    case 'E':\n      return 'N'\n    case 'S':\n      return 'E'\n    case 'W':\n      return 'S'\n    default:\n      return ''\n  }\n}\n\n\n\n\n/* Checks if path exists & connects: returns true, else false */\nfunction checkPath( direction, map, x, y ){\n  switch (direction) {\n    case 'N':\n      if (map[x][y-1].path != 'empty'){\n        // north exists\n        if(map[x][y-1].exitPoint.find( e => e === 'S')){\n          // north connects\n          return true\n        }else{\n          return false\n        }\n      } else {\n        return false\n      }\n    case 'E':\n      if (map[x+1][y].path != 'empty'){\n        if (map[x+1][y].exitPoint.find( e => e === 'W')){\n          return true\n        } else {\n          return false\n        }\n      }else{\n        return false\n      }\n    case 'S':\n      if (map[x][y+1].path != 'empty'){\n        if (map[x][y+1].exitPoint.find( e => e === 'N')){\n          return true\n        } else {\n          return false\n        }\n      }else{\n        return false\n      }\n    case 'W':      \n      if (map[x-1][y].path !== 'empty'){\n        // west does exists...\n        if (map[x-1][y].exitPoint.find( e => e === 'E')){\n          // west connects\n          return true\n        }else{\n          return false\n        }\n      }else{\n        return false\n      }\n  }\n}\n/* Checks if path exists & does not connect: return true, else, false  */\nfunction checkPathVoid( direction, map, x, y ){\n  switch (direction) {\n    case 'N':\n      if (map[x][y-1].path != 'empty'){\n        if(map[x][y-1].exitPoint.find( e => e === 'S')){\n          return false\n        }else{\n          return true\n        }\n      } else {\n        return false\n      }\n    case 'E':\n      if (map[x+1][y].path != 'empty'){\n        if (map[x+1][y].exitPoint.find( e => e === 'W')){\n          return false\n        } else {\n          return true\n        }\n      }else{\n        return false\n      }\n    case 'S':\n      if (map[x][y+1].path != 'empty'){\n        if (map[x][y+1].exitPoint.find( e => e === 'N')){\n          return false\n        } else {\n          return true\n        }\n      }else{\n        return false\n      }\n    case 'W':\n      if (map[x-1][y].path != 'empty'){\n        if (map[x-1][y].exitPoint.find( e => e === 'E')){\n          return false\n        }else{\n          return true\n        }\n      }else{\n        return false\n      }\n  }\n}\n/* Checks path on right: if a path exists, return {true & update directions}, else, {false}  */\nfunction checkRightPath( map, x, y, directionX, directionY ){\n  let heading = getHeading( directionX, directionY )\n  switch (heading) {\n    case 'N':\n      if ( map[x+1][y].path == 'empty' ){\n        return {canTurn:true, updateX:1, updateY:0}\n      }else{\n        return {canTurn:false , directionX, directionY}\n      }\n    case 'E':\n      if ( map[x][y+1].path == 'empty' ){\n        return {canTurn:true, updateX:0, updateY:1}\n      }else{\n        return {canTurn:false, directionX, directionY}\n      }\n    case 'S':\n      if ( map[x-1][y].path == 'empty' ){\n        return {canTurn:true, updateX:-1, updateY:0}\n      }else{\n        return {canTurn:false, directionX, directionY}\n      }\n    case 'W':\n      if ( map[x][y-1].path == 'empty' ){\n        return {canTurn:true, updateX:0, updateY:-1}\n      }else{\n        return {canTurn:false, directionX, directionY}\n      }\n  }\n}\n\n\n/* returns required paths as: 'N:E:S:W' if true */\nfunction getRequiredPaths( north, east, south, west ){\n  let requiredPaths = []\n  if (north){\n    requiredPaths.push('N')\n  }\n  if (east){\n    requiredPaths.push('E')\n  }\n  if (south){\n    requiredPaths.push('S')\n  }\n  if (west){\n    requiredPaths.push('W')\n  }\n  return requiredPaths\n}\n/* returns void paths as: 'N:E:S:W' if true */\nfunction getVoidPaths( north, east, south, west ){\n  let voidPaths = []\n  if (north){\n    voidPaths.push('N')\n  }\n  if (east){\n    voidPaths.push('E')\n  }\n  if (south){\n    voidPaths.push('S')\n  }\n  if (west){\n    voidPaths.push('W')\n  }\n  return voidPaths\n}\n\n\n\n\n\nfunction genNewPath(map, currentX, currentY, directionX, directionY){\n  let path = {}\n  let newDirectionX = directionX\n  let newDirectionY = directionY\n\n  // move\n  let locationX = currentX + directionX\n  let locationY = currentY + directionY\n  // move done.\n\n  // check suroundings\n  // True: if exists & connects\n  let northPathRequired = checkPath('N', map, locationX, locationY)\n  let eastPathRequired = checkPath('E', map, locationX, locationY)\n  let southPathRequired = checkPath('S', map, locationX, locationY)\n  let westPathRequired = checkPath('W', map, locationX, locationY)\n\n  // True: if exists & does not connect\n  let northPathVoid = checkPathVoid('N', map, locationX, locationY)\n  let eastPathVoid = checkPathVoid('E', map, locationX, locationY)\n  let southPathVoid = checkPathVoid('S', map, locationX, locationY)\n  let westPathVoid = checkPathVoid('W', map, locationX, locationY)\n\n  // update direction if we can turn right \n  let canTurnRight = checkRightPath( map, locationX, locationY, directionX, directionY)\n\n  if ( canTurnRight.canTurn ) {\n    console.log('! ! ! ! TURNING RIGHT ! ! ! !')\n    newDirectionX = canTurnRight.updateX\n    newDirectionY = canTurnRight.updateY\n  }\n  // check Done\n  \n  let heading = getHeading( directionX, directionY )\n  // create path based on checks\n  let dice = rollDice(0,9)\n\n  let requiredPaths = getRequiredPaths( northPathRequired, eastPathRequired, southPathRequired, westPathRequired )\n  let voidPaths = getVoidPaths( northPathVoid, eastPathVoid, southPathVoid, westPathVoid)\n\n  console.log('required paths:', requiredPaths)\n\n\n  if (requiredPaths.length == 0){\n    if (voidPaths.length == 1){ // 1 void, ( prev )\n      // path = paths.find(paths => paths.path === 'corner')\n      path = { ...paths.find( paths => paths.path === 'corner')}\n      path.exitPoint.push(heading)\n      path.exitPoint.push(getRightOfDirection(heading))\n    }else{ // 2 voids\n      // path = paths.find(paths => paths.path === 'corner')\n      path = { ...paths.find( paths => paths.path === 'corner')}\n      path.exitPoint.push(heading)\n      path.exitPoint.push(getLeftOfDirection(heading))\n    }\n  }else if (requiredPaths.length == 1){\n    if (voidPaths.length == 0){\n      path = paths.find(paths => paths.path === 'cross')\n    }else if (voidPaths.length == 1){\n      // path = paths.find(paths => paths.path === 'hall')\n      path = { ...paths.find( paths => paths.path === 'hall')}\n      path.exitPoint.push( getLeftOfDirection(voidPaths[0]) )\n      path.exitPoint.push( flip(getLeftOfDirection(voidPaths[0])) )\n    }\n  }else {\n    // 2 required paths:\n    // path = paths.find(paths => paths.path === 'fork')\n    path = { ...paths.find( paths => paths.path === 'fork')}\n    path.exitPoint = []\n    path.exitPoint.push(requiredPaths[0])\n    path.exitPoint.push(requiredPaths[1])\n    // coin flip for tail of the fork\n    if (dice < 5){\n      path.exitPoint.push(heading)\n    }else{\n      path.exitPoint.push( getLeftOfDirection(heading) )\n    }\n  }\n\n  return { path, newDirectionX, newDirectionY }\n}\n\n\n\nfunction genMap(walkLength){\n  // Initialize map with 'empty'\n  var map = []\n  map = initMap(mapWidth, mapHeight, 'empty')\n\n  // middle of map (kind of)\n  let currentX = Math.floor(mapWidth/2);\n  let currentY = Math.floor(mapHeight/2);\n  \n  const startingPath = paths.find( paths => paths.path === 'cross');\n  map[currentX][currentY] = startingPath\n\n  let directionX = 0\n  let directionY = -1\n\n  for (let step = 0; step < walkLength; step++) {\n    console.log('\\n\\n\\n\\n -  -  -  -  -  -  -  -  -  -  -  -  - ')\n    console.log(' -  -  -  -  -  -  - START  -  -  -  - ')\n\n    let pathInfo = genNewPath(map, currentX, currentY, directionX, directionY);\n    console.log('= = = = = = = = = = = = = = =')\n    console.log('new path:', pathInfo.path)\n    // update positions X & Y\n    currentX += directionX\n    currentY += directionY\n\n    map[currentX][currentY] = pathInfo.path\n\n    // update new direction\n    directionX = pathInfo.newDirectionX\n    directionY = pathInfo.newDirectionY\n\n  }\n  return map;\n}\n\n\n\n\n\n\nconst MapScreen = () => {\n  const dispatch = useDispatch();\n\n  let header = 'MAP'\n  let bttn = 'BACK'\n\n\n  console.log('=START=')\n\n  const map = genMap(6);\n\n  console.log('complete walked map:', map)\n\n  return (\n  <div className={styles.gameScreen}>\n      <div className={styles.menuContainer}>\n\n          <div className={styles.menuHeader}>\n              {header}\n          </div>\n\n          <div className={styles.pathRowContainer}>\n            {map.map( (xCord, index) => \n              <div key={index} className={styles.pathColumnOutline}>\n                {xCord.map( (yCord, index) => \n                  <div key={index} className={styles.pathRowOutline}>\n                      <div className={styles.nodeRow}> \n                        <div className={styles.nodeBlock}></div> \n                        <div className={styles.nodeBlock}> {yCord?.exitPoint?.find(d => d === 'N')} </div> \n                        <div className={styles.nodeBlock}></div> \n                      </div>\n                      <div className={styles.nodeRow}> \n                        <div className={styles.nodeBlock}>\n                          {yCord?.exitPoint?.find(d => d === 'W')}\n                        </div> \n                        \n                        <div className={styles.nodeBlock}> \n                          {yCord?.path}\n                        </div> \n                        \n                        <div className={styles.nodeBlock}>\n                          {yCord?.exitPoint?.find(d => d === 'E')}\n                        </div> \n                      </div>\n                      <div className={styles.nodeRow}> \n                        <div className={styles.nodeBlock}></div> \n                        <div className={styles.nodeBlock}> {yCord?.exitPoint?.find(d => d === 'S')} </div> \n                        <div className={styles.nodeBlock}></div> \n                      </div>\n                  </div>\n\n                )}\n              </div>\n            )}          \n          </div>\n\n\n          {/* <>\n\n          <TiArrowUpOutline />\n          </> */}\n\n\n          {/* <div className={styles.mapContainer}>\n            {mapPoints.map( (point, index) => \n              <div key={index} className={styles.nodeArray}>\n                {point}\n              </div>\n            )}\n          </div> */}\n\n\n\n          <div className={styles.menuFooter}>\n              <div className={styles.menuOption} onClick={() => dispatch(setScreen('Title'))}>\n                  {bttn}\n              </div>\n          </div>\n\n\n      </div>\n  </div>\n  \n  );\n\n}\n\n\nexport default MapScreen;\n\n","import React from 'react';\nimport Title from './components/screens/title';\nimport Encounter from './components/screens/encounter';\nimport End from './components/screens/end';\nimport HeroSelection from './components/screens/hero-selection';\nimport Map from './components/screens/map';\nimport { useScreen } from './ducks/screen';\n\nconst screens = {\n  Title,\n  Encounter,\n  End,\n  HeroSelection,\n  Map,\n}\n\nconst App = () => {\n  const screen = useScreen();\n  const Screen = screens[screen];\n\n  return <Screen />\n}\n\nexport default App\n","import { combineReducers } from 'redux';\nimport player from './player'\nimport foe from './foe'\nimport screen from './screen'\nimport encounter from './encounter'\nimport climbState from './climbState'\n\nexport default combineReducers({\n    player,\n    foe,\n    screen,\n    encounter,\n    climbState,\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport { Provider } from 'react-redux'\nimport configureStore from './configurestore'\n\nconst rootElement = document.getElementById('root');\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    rootElement\n);\n","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport rootReducer from './ducks/'\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers)\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n  return store;\n}\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customButton\":\"hand_customButton__3kPiN\",\"activeZone\":\"hand_activeZone__10s81\",\"hand\":\"hand_hand__FpDVp\",\"card\":\"hand_card__2Iyyc\",\"titleSection\":\"hand_titleSection__2pM3q\",\"title\":\"hand_title__2dma9\",\"energy\":\"hand_energy__2Nf2i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"telegraph\":\"foe-zone_telegraph__L_jkd\",\"foeTitle\":\"foe-zone_foeTitle__1YvQq\",\"foeZone\":\"foe-zone_foeZone__2X4Y_\",\"foe\":\"foe-zone_foe__1iF9l\",\"foeImg\":\"foe-zone_foeImg__2luo9\",\"foeHealthBorder\":\"foe-zone_foeHealthBorder__3gfyN\",\"foeHealthBar\":\"foe-zone_foeHealthBar__275gY\",\"foeHealthIndicator\":\"foe-zone_foeHealthIndicator__2NBhm\"};"],"sourceRoot":""}