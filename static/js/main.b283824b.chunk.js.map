{"version":3,"sources":["components/hand/hand.module.scss","components/foe-zone/foe-zone.module.scss","components/screens/encounter/encounter.module.scss","components/screens/title/title.module.scss","components/draw-zone/draw-zone.module.scss","components/discard-zone/discard-zone.module.scss","components/player-health/player-health.module.scss","components/screens/end/end.module.scss","ducks/screen.js","game-data/creep-data.js","ducks/foe.js","ducks/player.js","game-data/card-data.js","game-data/heros-data.js","components/screens/title/title.jsx","components/hand/hand.jsx","components/draw-zone/draw-zone.jsx","components/discard-zone/discard-zone.jsx","components/player-health/player-health.jsx","components/foe-zone/foe-zone.jsx","ducks/encounter.js","components/turn-bttn/turn-bttn.jsx","components/screens/encounter/encounter.jsx","App.js","components/screens/end/end.jsx","ducks/index.js","index.js","configurestore.js"],"names":["module","exports","setScreen","createAction","handleActions","state","action","payload","selectScreen","createSelector","screen","creeps","name","art","health","total","armor","telegraphing","order","target","effect","power","moves","spawnFoe","updateFoe","selectFoe","foe","useFoe","useSelector","updatePlayer","setDeck","drawCard","playCard","playIndexedCard","discardHand","voidCard","shuffleDeck","drawHand","shuffle","deck","j","x","i","length","Math","floor","random","slice","hand","discard","rest","shuffledDiscard","grabCard","newDeck","newHand","newDiscard","emptyHand","console","log","splice","voidPile","void","selectPlayer","player","usePlayer","cards","type","energy","exhaust","description","card_id","heros","hero","maxHealth","map","id","TitleScreen","dispatch","useDispatch","className","titleStyle","game","title","menu","onClick","Card","onCardClick","index","cardIndex","getState","card","energyCost","foeArmor","newEnergy","trample","newFoeHealth","parseInt","heal","newPlayerHealth","newPlayerArmor","styles","customButton","titleSection","Hand","activeZone","DrawZone","drawZone","DiscardZone","discardZone","PlayerHealth","useEffect","bar","document","getElementById","style","backgroundColor","height","width","dmg","updateHealthBar","position","opacity","updateArmorBar","playerHealthBorder","playerHealthIndicator","getTelegraph","FoeZone","foeHealth","foeMax","telegraph","newBar","ceil","updateFoeHealthBar","newArmor","updateFoeArmorBar","foeZone","foeTitle","foeImg","src","alt","foeHealthBorder","foeHealthIndicator","updateEncounter","encounter","TurnBttn","zone","combatMsgs","innerHTML","setTimeout","moveMsg","newHealth","newFoeArmor","lengthOfMoves","Object","keys","newPos","newTelegraph","filter","obj","devButton","EncounterScreen","alert","combatZoneOverlay","playerZone","screens","Title","Encounter","End","App","Screen","combineReducers","rootElement","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","rootReducer","configureStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.b283824b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"customButton\":\"hand_customButton__3kPiN\",\"activeZone\":\"hand_activeZone__10s81\",\"hand\":\"hand_hand__FpDVp\",\"card\":\"hand_card__2Iyyc\",\"titleSection\":\"hand_titleSection__2pM3q\",\"title\":\"hand_title__2dma9\",\"energy\":\"hand_energy__2Nf2i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"telegraph\":\"foe-zone_telegraph__L_jkd\",\"foeTitle\":\"foe-zone_foeTitle__1YvQq\",\"foeZone\":\"foe-zone_foeZone__2X4Y_\",\"foe\":\"foe-zone_foe__1iF9l\",\"foeImg\":\"foe-zone_foeImg__2luo9\",\"foeHealthBorder\":\"foe-zone_foeHealthBorder__3gfyN\",\"foeHealthBar\":\"foe-zone_foeHealthBar__275gY\",\"foeHealthIndicator\":\"foe-zone_foeHealthIndicator__2NBhm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"encounter_game__ht2XY\",\"playerZone\":\"encounter_playerZone__1sPHB\",\"combatZoneOverlay\":\"encounter_combatZoneOverlay__13FuS\",\"combatMsgs\":\"encounter_combatMsgs__2tEeR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"title_game__y3Wr0\",\"menu\":\"title_menu__2pkpl\",\"title\":\"title_title__2XrX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawZone\":\"draw-zone_drawZone__29T8p\",\"energy\":\"draw-zone_energy__1txD3\",\"deck\":\"draw-zone_deck__3wxHk\",\"devButton\":\"draw-zone_devButton__lMg0t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discardZone\":\"discard-zone_discardZone__ebvxy\",\"void\":\"discard-zone_void__3aCqG\",\"discard\":\"discard-zone_discard__1RQku\",\"devButton\":\"discard-zone_devButton__qShdt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerHealthBorder\":\"player-health_playerHealthBorder__3CNh9\",\"playerHealthIndicator\":\"player-health_playerHealthIndicator__2DJ9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"end_game__i2VIt\",\"playerZone\":\"end_playerZone__2RIOT\",\"combatZoneOverlay\":\"end_combatZoneOverlay__1Jyol\",\"combatMsgs\":\"end_combatMsgs__26YPG\"};","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\n\nexport const setScreen = createAction('screen/SET_SCREEN');\n\nconst initialSreenState = 'Title';\n\nexport default handleActions({\n    [setScreen]: (state, action) => state = action.payload,\n}, initialSreenState);\n\nconst selectScreen = createSelector(\n    state => state.screen,\n    screen => screen   \n)\n\nexport const useScreen = () => useSelector(selectScreen);\n\n","\n\n\n\nexport const creeps = [\n    {\n        name: 'Slime',\n        art: 'https://i.imgur.com/Sun4iBT.png?1',\n        health: 36,\n        total: 36,\n        armor: 0,\n        telegraphing: [{ \n                name: ['Spit'],\n                order: 0,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [8]\n            }],\n        moves: [\n            {\n                name: ['Spit'],\n                order: 0,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [8]\n            },\n            {\n                name: ['Whip'],\n                order: 1,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [13]\n            },\n            {\n                name : ['Soften'],\n                order: 2,\n                target: ['self'],\n                effect: ['armor'],\n                power: [12]\n            }\n        ]\n    },\n    {\n        name: 'Living Armor',\n        art: 'https://i.imgur.com/yl0eGRj.png?4',\n        health: 55,\n        total: 55,\n        armor: 0,\n        telegraphing: [\n            {\n                name: ['Lunging Strike'],\n                order: 0,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [30]\n            }],\n        moves: [\n            {\n                name: ['Lunging Strike'],\n                order: 0,\n                target: ['hero'],\n                effect: ['damage'],\n                power: [30]\n            },\n            {\n                name: ['Defensive Mode'],\n                order: 1,\n                target: ['self'],\n                effect: ['wait'],\n                power: [0]\n            },\n            {\n                name: ['Repair'],\n                order: 2,\n                target: ['self'],\n                effect: ['heal'],\n                power: [20]\n            },\n            {\n                name: ['Offensive Mode'],\n                order: 3,\n                target: ['self'],\n                effect: ['wait'],\n                power: [0]\n            },\n        ]\n    }\n    // {\n    //     name: 'Living Armor',\n    //     art: 'https://i.imgur.com/yl0eGRj.png?4',\n    //     health: 52,\n    //     totalHealth: 52,\n    //     armor: 0,\n    //     telegraphing: ['damage 7'],\n    //     moves: {\n    //         'strike':{\n    //             order: 0,\n    //             target: ['hero'],\n    //             effect: ['damage'],\n    //             power: [7]\n    //         },\n    //         'Repair':{\n    //             order: 1,\n    //             target: ['self'],\n    //             effect: ['damage'],\n    //             power: [10]\n    //         },\n    //     }\n    // },\n    // TO REDO: - - - - - - - - - - - - - - - - WIP:\n    // {\n    //     name: 'living armor',\n    //     properties: {\n    //         art: 'art uri',\n    //         health: {\n    //             base: 15,\n    //             mod: 5\n    //         },\n    //         attacks: {\n    //             move: ['strike'],\n    //             dmg: [5]\n    //         },\n    //         deffends: {\n    //             move: ['meld'],\n    //             def: [10]\n    //         }\n    //     }\n    // },\n    // {\n    //     name: 'spooky skeleton',\n    //     properties: {\n    //         art: 'art uri',\n    //         health: {\n    //             base: 10,\n    //             mod: 6\n    //         },\n    //         attacks: {\n    //             move: ['tackle', 'smash'],\n    //             dmg: [4, 8]\n    //         },\n    //         deffends: {\n    //             move: ['calcium'],\n    //             def: [6]\n    //         }\n    //     }\n    // },\n]","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { creeps } from '../game-data/creep-data';\n\n// export const setFoeName = createAction('foe/SET_FOE_NAME');\n// export const setFoeImg = createAction('foe/SET_FOE_IMG');\n// export const setFoeTotalHealth = createAction('foe/SET_FOE_TOTAL_HEALTH');\n// export const setFoeMoves = createAction('foe/SET_FOE_MOVES');\nexport const spawnFoe = createAction('foe/SPAWN_FOE');\nexport const updateFoe = createAction('foe/UPDATE_FOE');\n\nconst initialState = { };\n\n// name: 'Slime',\n// art: 'https://i.imgur.com/Sun4iBT.png?1',\n// health: 10,\n// totalHealth: 10,\n// armor: 0,\n// telegraphing: ['damage 5'],\n// moves: {\n//     'whip':{\n//         priority: 0,\n//         target: ['hero'],\n//         effect: ['damage'],\n//         power: [5]\n//     },\n//     'spit':{\n//         priority: 1,\n//         target: ['hero'],\n//         effect: ['damage'],\n//         power: [8]\n//     },\n//     'soften':{\n//         priority: 1,\n//         target: ['self'],\n//         effect: ['armor'],\n//         power: [12]\n//     }\n// }\n\n\nexport default handleActions({\n    [spawnFoe]: (state) => ({ ...state, ...creeps[0] }),\n    [updateFoe]: (state, action) => {\n        return ({ ...state, ...action.payload })\n    },\n}, initialState);\n\n\n// how we grab data from the store\nconst selectFoe = createSelector(\n    state => state.foe,\n    foe => foe   \n)\n\nexport const useFoe = () => useSelector(selectFoe);\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { updateFoe } from './foe';\n\n// TODO: clean up and organize\n\n// Alter Health, Energy & Armor Actions:\nexport const updatePlayer = createAction('player/UPDATE_PLAYER');\n// export const newRound = createAction('player/NEW_ROUND');\n\n// Deck Actions:\nexport const setDeck = createAction('player/SET_DECK');\nexport const drawCard = createAction('player/DRAW_CARD');\nexport const playCard = createAction('player/PLAY_CARD');\n\nexport const playIndexedCard = createAction('player/PLAY_INDEXED_CARD');\nexport const discardHand = createAction('player/DISCARD_HAND');\n\nexport const voidCard = createAction('player/VOID_CARD');\nexport const shuffleDeck = createAction('player/SHUFFLE_DECK');\n\n// Hand actions\nexport const drawHand = createAction('player/DRAW_HAND');\n\nconst initialState = {}\n\n\nfunction shuffle(deck) {\n    var j, x, i\n    for (i = deck.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1))\n        x = deck[i]\n        deck[i] = deck[j]\n        deck[j] = x\n    }\n    return deck\n}\n\n/**\n * \n * {\n *  name,\n *  health,\n *  deck,\n *  health,\n * }\n */\n\n\nconst reduceDrawCard = ({ discard, deck, hand, ...rest }) => {\n    if ( deck.length == 0 ){\n        if ( discard.length == 0 ){\n            return { ...rest, discard, deck, hand}\n        } else {\n            const shuffledDiscard = shuffle(discard)\n            const grabCard = shuffledDiscard[shuffledDiscard.length-1]\n            const newDeck = shuffledDiscard.slice(0, shuffledDiscard.length-1)        \n            const newHand = [...hand, grabCard]\n            return { ...rest, hand: newHand, deck: newDeck, discard: [] }\n        }\n    } else {\n        return { ...rest, hand: [...hand, deck[deck.length-1]], deck: deck.slice( 0, deck.length -1), discard }\n    }\n}\n\nconst reducePlayCard = ({ discard, hand, ...rest }) => {\n    const emptyHand = hand.length < 1;\n    \n    if (!emptyHand){\n        const newHand =  hand.slice( 0, hand.length-1)\n        const newDiscard = [...discard, hand[hand.length-1] ]\n        return { ...rest, hand: newHand, discard: newDiscard}\n    }else{\n        return { ...rest, hand, discard}\n    }\n}\n\nconst reducePlayIndexedCard = ({ discard, hand, ...rest } , {payload}) => {\n    const emptyHand = hand.length < 1;\n    console.log(payload)\n\n    if (!emptyHand){\n        const grabCard = hand[payload]\n        hand.splice(payload, 1)\n        const newHand = hand\n        const newDiscard = [...discard, grabCard]\n        return { ...rest, hand: newHand, discard: newDiscard}\n    }else{\n        return { ...rest, hand, discard}\n    }\n}\n\nconst reduceDiscardHand = ({ discard, hand, ...rest }) => {\n    const emptyHand = hand.length < 1;\n\n    if (!emptyHand){\n        const newHand = []\n        const newDiscard = [...discard, ...hand ]\n        return { ...rest, hand: newHand, discard: newDiscard}\n    }else{\n        return { ...rest, hand, discard}\n    }\n}\n\n\nexport default handleActions({\n    [drawHand]: (state) => ({...state, deck: state.deck.slice( 0, state.deck.length -5), hand: [...state.hand, ...state.deck.slice(-5)]}),\n    [shuffleDeck]: (state) => ({...state, deck: shuffle(state.deck)}),\n    [updatePlayer]: (state, action) => ({ ...state, ...action.payload }),\n    [setDeck]: (state, action) => ({...state, deck: action.payload }),\n    \n    [drawCard]: reduceDrawCard,\n    [playCard]: reducePlayCard,\n    \n    [playIndexedCard]: reducePlayIndexedCard,\n    [discardHand]: reduceDiscardHand,\n\n    [voidCard]: (state, action) => ({...state, hand: state.hand.slice(action.payload, 1), voidPile: [...state.void, state.hand.slice(action.payload, 1)]}),\n}, initialState);\n\n// notes:\n// might need to see if I can set initialStates later ???????\n// [newRound]: (state) => ({...state, energy: initialState.energy, armor: initialState.armor}),\n// deck handle:\n\n\n// how we grab data from the store\nconst selectPlayer = createSelector(\n    state => state.player,\n    player => player   \n)\n\nexport const usePlayer = () => useSelector(selectPlayer);\n\n\n\n// Async Actions\nexport const applyCard = (cardIndex) => (dispatch, getState) => {\n    const state = getState();\n\n\n    const card = state.player.hand[cardIndex]\n    const energyCost = card.energy;\n    const foeArmor = state.foe.armor\n\n    if (energyCost <= state.player.energy) {\n        const newEnergy = state.player.energy - energyCost\n        if (card.action.target==\"foe\"){\n            if (card.action.effect==\"damage\"){\n                const damage = card.action.power\n                const trample = foeArmor - damage\n                if (trample < 0) {\n                    const newFoeHealth = parseInt(state.foe.health) + parseInt(trample)\n                    dispatch(updateFoe({ health: newFoeHealth, armor: 0}))\n                }else{\n                    const newFoeArmor = trample\n                    dispatch(updateFoe({ armor: newFoeArmor }))\n                }\n                dispatch(updatePlayer({ energy: newEnergy }))\n            }\n        } else {\n            if (card.action.effect==\"heal\"){\n                const heal = card.action.power\n                const newPlayerHealth = parseInt(state.player.health) + parseInt(heal)\n                dispatch(updatePlayer({ health: newPlayerHealth, energy: newEnergy }))\n            } else if (card.action.effect==\"armor\"){\n                const armor = card.action.power\n                const newPlayerArmor = parseInt(state.player.armor) + parseInt(armor)\n                dispatch(updatePlayer({ armor: newPlayerArmor, energy: newEnergy}))\n            }\n        }\n        dispatch(playIndexedCard(cardIndex))\n    } else {\n        console.log(\"! Not Enough Energy !\")\n    }\n\n\n}\n\n\n\n","export const cards = [\n    {\n        name: 'Slash',\n        art: '<art url>',\n        type: 'attack',\n        energy: 1,\n        exhaust: false,\n        action: {\n            target: ['foe'],\n            effect: ['damage'],\n            power: [5]\n        },\n        description: \"Deal 5 damage\",\n        card_id: 0\n        \n    },\n    {   \n        name: 'Guard',\n        art: '<art url>',\n        type: 'defend',\n        energy: 1,\n        exhaust: false,\n        action: {\n            target: ['hero'],\n            effect: ['armor'],\n            power: [5]\n        },\n        description: \"+5 Armor\",\n        card_id: 1\n    },\n    {   \n        name: 'Heal',\n        art: '<art url>',\n        type: 'skill',\n        energy: 2,\n        exhaust: true,\n        action: {\n            target: ['hero'],\n            effect: ['heal'],\n            power: [8]\n        },\n        description: \"Heal 8 damage\",\n        card_id: 2\n    },\n];","import {cards} from './card-data'\n\nexport const heros = [\n    {\n        hero: 'sword',\n        health: 55,\n        maxHealth: 55,\n        energy: 3,\n        armor: 0,\n        deck: [0,0,0,0,0,1,1,1,1,1,2].map(id => cards[id]),\n        hand: [],\n        discard: [],\n        void: []\n    },\n\n    {\n        hero: 'fire',\n        health: 45,\n        maxHealth: 45,\n        energy: 4,\n        armor: 0,\n        deck: [0,0,0,0,0,1,1,1,1,1,2].map(id => cards[id]),\n        hand: [],\n        discard: [],\n        void: []\n    }\n];\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport titleStyle from \"./title.module.scss\";\nimport { setScreen } from '../../../ducks/screen';\nimport { useDispatch } from 'react-redux';\n\nimport { updatePlayer } from '../../../ducks/player'\nimport { heros } from '../../../game-data/heros-data'\n\nconst TitleScreen = () => {\n\n    const dispatch = useDispatch();\n\n    // TODO: MOVE TO HERO WEAPON SELECTION SCREEN\n    dispatch(updatePlayer(heros[0]))\n    \n    return (\n        <div className={titleStyle.game} >\n            <div className={titleStyle.title} >SLAY THE TOWER</div>\n            <div className={titleStyle.menu} onClick={() => dispatch(setScreen('Encounter'))}> START ENCOUNTER</div>\n        </div>\n    );\n}\n\nexport default TitleScreen","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './hand.module.scss'\nimport { usePlayer, applyCard } from '../../ducks/player';\n\n\n\nconst Card = () =>{\n\n    const player = usePlayer();\n    const dispatch = useDispatch();\n    const onCardClick = (index) =>  dispatch(applyCard(index));\n\n    return(\n        <div>\n            {\n                player.hand.map( (card, index) =>\n                    <button onClick={ () => onCardClick(index) } className={styles.customButton}>\n                        <div className = {styles.card}>\n\n                            <div className = {styles.titleSection}>\n\n                                <div className = {styles.title}> \n                                    {card.name} \n                                </div> \n\n                                <div className = {styles.energy}>\n                                    {card.energy}\n                                </div>\n\n                            </div>\n\n                            <br/>\n                            {card.art}\n                            <br/> <br/>\n                            {card.description}\n                        </div>\n                    </button>                \n                )}\n        </div>\n    );\n}\n\nconst Hand = () => {\n\n    // useEffect(() => { \n    //     // var card = document.createElement(\"div\");\n    //     // var node = document.createTextNode(\"This is new.\");\n    //     // card.appendChild(node);\n        \n    //     // var element = document.getElementById(\"hand\");\n    //     // var child = document.getElementById(\"c\");\n    //     // element.insertBefore(card, child);\n    // }, []);\n\n    const dispatch = useDispatch()\n\n    return (\n        <div className = {styles.activeZone}>\n            <div className = {styles.hand}>\n                <Card /> \n            </div>\n        </div>\n    );\n}\n\n\nexport default Hand;\n\n","import React from 'react';\nimport styles from './draw-zone.module.scss'\n\n// import Encounter from '../../game-mechanics/encounter';\nimport { usePlayer, playCard, drawCard } from '../../ducks/player';\nimport { useDispatch } from 'react-redux'\n\n\nconst DrawZone = () =>{\n    const player = usePlayer();\n    const dispatch = useDispatch()\n\n    return(\n        <div className={styles.drawZone}>\n            <div className={styles.energy}>\n                ENERGY: \n                <div/>\n                {player.energy}\n            </div>\n            <div className={styles.deck}>\n                DECK: <div/> {player.deck.length}\n                {/* <div/> */}\n                {/* <button className={styles.devButton} onClick={ () => dispatch( drawCard() ) }> DRAW </button> */}\n            </div>\n        </div>\n    );\n}\n\n\nexport default DrawZone;\n","import React from 'react';\nimport styles from './discard-zone.module.scss'\n\nimport { usePlayer, playCard, playIndexedCard } from '../../ducks/player';\nimport { useDispatch } from 'react-redux'\n\n\n\nconst DiscardZone = () =>{\n    const player = usePlayer();\n    const dispatch = useDispatch();\n    return(\n        <div className = {styles.discardZone}>\n            <div className={styles.void}> \n                VOID: <div/> {player.void.length}\n            </div>\n            <div className={styles.discard}>\n                DISCARD: <div/> {player.discard.length}\n                {/* <div/> */}\n                {/* <button className={styles.devButton} onClick={ () => dispatch( playCard() ) }> discard/play </button> */}\n            </div>\n        </div>\n    );\n}\n\n\nexport default DiscardZone;\n","import React from 'react';\nimport styles from './player-health.module.scss'\n\n// import Encounter from '../../game-mechanics/encounter';\nimport { usePlayer } from '../../ducks/player';\nimport { useEffect } from 'react';\n\n\nfunction updateHealthBar(health, maxHealth){\n    var bar = document.getElementById(\"playerHealthBar\")\n    bar.style.backgroundColor = 'darkgreen'\n\n    if (health == maxHealth){\n        bar.style.height = \"4vh\"\n        bar.style.width = \"80vw\"\n    }\n\n    if (health < maxHealth){\n        const dmg = ((health/maxHealth)*80) // 80vw\n        // const newBar = Math.ceil(health - dmg)\n        bar.style.width = dmg + \"vw\"        \n    }\n}\n\nfunction updateArmorBar(armor){\n    var bar = document.getElementById(\"armorBar\")\n    bar.style.backgroundColor = 'lightblue'\n    bar.style.position = 'absolute'\n    bar.style.opacity = '.75'\n\n    if (armor == 0){\n        bar.style.height = \"4vh\"\n        bar.style.width = \"0vw\" // 80 is max armor... should reach that tho...\n    }\n\n    if (armor > 0 ){\n        const newArmor = (armor/80) // 80vw\n        bar.style.width = armor + \"vw\"        \n    }\n}\n\nconst PlayerHealth = () =>{\n\n    const player = usePlayer();\n\n    useEffect( () => {\n        updateHealthBar(player.health, player.maxHealth)\n    }, [player.health])\n\n    useEffect( () => {\n        updateArmorBar(player.armor)\n    }, [player.armor])\n    \n    return(\n        <div className = {styles.playerHealthBorder}> \n            <div className = {styles.playerHealthIndicator}>\n                {player.health} / {player.maxHealth}\n            </div>\n            <div id=\"playerHealthBar\"> </div> \n            <div id=\"armorBar\"> </div>\n        </div>\n    );\n}\n\n\nexport default PlayerHealth;\n","import React from 'react';\nimport foe, { useFoe } from '../../ducks/foe'\nimport styles from \"./foe-zone.module.scss\";\nimport { useEffect } from 'react';\n\nfunction updateFoeHealthBar(foeHealth, foeMax){\n    var x = document.getElementById(\"foeHealthBar\")\n    x.style.backgroundColor = \"red\"\n\n    if (foeHealth == foeMax){\n        x.style.height = \"2vh\"\n        x.style.width = \"20vw\"\n    }\n\n    if (foeHealth < foeMax){\n        const dmg = ((foeHealth/foeMax)*20)\n        const newBar = Math.ceil(foeHealth - dmg)\n        x.style.width = newBar + \"vw\"        \n    }\n}\n\nfunction updateFoeArmorBar(armor){\n    var x = document.getElementById(\"foeArmorBar\")\n    x.style.backgroundColor = \"lightblue\"\n    x.style.opacity = \".75\"\n    x.style.position = \"absolute\"\n\n    if (armor == 0){\n        x.style.height = \"2vh\"\n        x.style.width = \"0vw\"\n    }\n\n    if (armor > 0){\n        // const dmg = ((foeHealth/foeMax)*20)\n        const newArmor = ((armor/100)*20)\n        x.style.width = newArmor + \"vw\"        \n    }\n}\n\nfunction getTelegraph(foe){\n    try{\n        // debugger;\n        console.log(\"contents:\", foe.telegraphing)\n        const answer = foe.telegraphing[0].effect + \" \"+ foe.telegraphing[0].power\n        return answer\n    }catch{\n        const answer = \"...\"\n        return answer\n    }\n}\n\nconst FoeZone = () =>{\n\n    const { health: foeHealth } = useFoe();\n    const { total: foeMax } = useFoe();\n    const { armor: foeArmor } = useFoe();\n    const foe = useFoe();\n    // const mv = foe.moves\n    // console.log( \"test:\", foe.moves ) \n    console.log(\"answer:\", getTelegraph(foe))\n    const telegraph = getTelegraph(foe)\n    \n\n    useEffect(() => {\n        updateFoeHealthBar(foeHealth, foeMax)\n    }, [foeHealth]);\n\n    useEffect(() => {\n        updateFoeArmorBar(foeArmor)\n    }, [foeArmor])\n    \n    return(\n        <div className={styles.foeZone}>\n            <div className = {styles.foe}>\n\n                <div className={styles.telegraph}> {telegraph} </div>\n                <div className={styles.foeTitle}> {foe.name} </div>\n                <img className = {styles.foeImg} src={foe.art} alt=\"foe img\"/>\n\n                <div className = {styles.foeHealthBorder}> \n                    <div className = {styles.foeHealthIndicator}> \n                        {foe.health} / {foe.total} \n                    </div>\n                    <div id=\"foeArmorBar\"> </div>\n                    <div id=\"foeHealthBar\"> </div>\n                    {/* className = {styles.foeHealthBar} */}\n                </div>\n\n                {/* {document.getElementById(\"foeHealthBar\").style.width= \"5\"} */}\n\n            </div>  \n        </div>        \n    );\n}\n\n\nexport default FoeZone;\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { updateFoe } from './foe';\nimport { updatePlayer, discardHand, drawCard } from './player';\n\n// export const setupEncounter = createAction('foe/SETUP_ENCOUNTER');\nexport const updateEncounter = createAction('foe/UPDATE_ENCOUNTER');\n\nconst initialState = {};\n\n\nexport default handleActions({\n    [updateEncounter]: (state, action) => ({ ...state.encounter, ...action.payload }),\n}, initialState);\n\n\n// how we grab data from the store\nconst selectEncounter = createSelector(\n    state => state.encounter,\n    encounter => encounter   \n)\n\nexport const useEncounter = () => useSelector(selectEncounter);\n\nexport const endTurn = () => (dispatch, getState) => {\n\n    var zone = document.getElementById('playerZone');\n    console.log(\"zone\", zone)\n\n    zone.style.height = \"58vh\"\n    zone.style.width = \"100vw\"\n    zone.style.backgroundColor = \"black\"\n    zone.style.opacity = .75\n    zone.style.position = \"absolute\"\n\n    var turnBttn = document.getElementById('turnBttn');\n    \n\n    var combatMsgs = document.getElementById('combatMsgs');\n\n    combatMsgs.innerHTML = \"Foes Turn!\"\n    setTimeout( function()\n    { \n        combatMsgs.innerHTML = \"Waiting.\"; \n        dispatch( discardHand() )\n    }, 1000 );\n    setTimeout( function(){ combatMsgs.innerHTML = \"Waiting..\"; }, 1500 );\n    setTimeout( function(){ combatMsgs.innerHTML = \"Waiting...\"; }, 2000 );\n    \n    const state = getState()\n    const player = state.player\n    const foe = state.foe\n\n    const telegraphing = foe.telegraphing\n\n    if ( telegraphing[0].effect == \"damage\" ){\n        const dmg = telegraphing[0].power\n        const moveMsg = foe.name + \" uses \" + telegraphing[0].name + \" dealing\\n\" + telegraphing[0].power + \" dmg\"\n        setTimeout( function(){ combatMsgs.innerHTML = moveMsg }, 3000);\n\n        const trample = player.armor - dmg\n        if ( trample <= 0 ){\n            const newArmor = 0\n            const newHealth = player.health + trample\n            setTimeout( function(){ dispatch( updatePlayer({ health: newHealth, armor: newArmor }) ) },4000);\n            \n        } else {\n            const newArmor = trample\n            setTimeout( function(){ dispatch( updatePlayer({ armor: newArmor }) ) },4000);    \n        }\n        //  if players health drops to 0, exit game... do that later\n\n    } else if (telegraphing[0].effect == 'armor') {\n        const newFoeArmor = telegraphing[0].power\n        const moveMsg = foe.name + \" uses \" + telegraphing[0].name + \" gaining\\n\" + telegraphing[0].power + \" armor\"\n        setTimeout( function(){ combatMsgs.innerHTML = moveMsg }, 3000)\n        setTimeout( function(){ dispatch( updateFoe({ armor: newFoeArmor })) },4000);\n    }\n\n    // adding in a new foe effects...\n    // if ( telegraphing[0].effect == ) \n\n    const moves = foe.moves\n    const lengthOfMoves = Object.keys(moves).length\n    const position = telegraphing[0].order\n\n    if ( position + 1 < lengthOfMoves ) {\n        const newPos = position+1\n        const newTelegraph = moves.filter(obj => {\n            if (obj.order === newPos){\n                return obj\n            }\n        })\n        \n        console.log (\"new Telegraph\",newTelegraph)\n        setTimeout( function(){ dispatch( updateFoe({ telegraphing: newTelegraph }) )}, 4500)\n   \n    } else {\n        const newPos = 0\n        const newTelegraph = moves.filter(obj => {\n            if (obj.order == newPos){\n                return obj\n            }        \n        })        \n        console.log (\"new Telegraph\",newTelegraph)\n        setTimeout( function(){ dispatch( updateFoe({ telegraphing: newTelegraph }) )}, 4500)\n    }\n\n\n    // notify player foe turn is over, and their turn now begins...\n    // with that we have to reset player armor & energy\n    // could handle everything from getState and updates here...\n\n    // TODO: await (dispatch)... create a function with Await(game action),(how-long). ( A Promise )\n    setTimeout( function(){ combatMsgs.innerHTML = \"Foe's Turn Over\" }, 5000);\n    setTimeout( function(){ combatMsgs.innerHTML = \"Armor & Energy Reset\" }, 6000);\n    setTimeout( function(){ dispatch( updatePlayer({ energy: 3, armor:0 }) )}, 6100);\n    setTimeout( function(){ combatMsgs.innerHTML = \"Your Turn...\" }, 7000);\n    \n    setTimeout( function(){     \n        dispatch( drawCard() )\n    }, 7000);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n    }, 7300);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n    }, 7600);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n    }, 7900);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n        zone.style.height = \"0vh\"\n        zone.style.width = \"0vw\"\n\n        // turnBttn.cursor = \"allowed\";\n        // turnBttn.backgroundColor = \"darkslategrey\"\n        // turnBttn.style.opacity = 1\n\n    }, 8200);\n\n\n\n}","import React from 'react';\nimport styles from './turn-bttn.scss'\n\n// import { usePlayer, playCard } from '../../ducks/player';\nimport { useDispatch } from 'react-redux'\n\nimport { endTurn } from '../../ducks/encounter'\n\n\n\nconst TurnBttn = () =>{\n    // const player = usePlayer();\n    const dispatch = useDispatch();\n\n    const onBttnClick = () =>  dispatch(endTurn());\n\n    return(\n        <button id=\"turnBttn\" onClick={onBttnClick} className = {styles.devButton}>\n            [ END TURN ]\n        </button>\n    );\n}\n\n\nexport default TurnBttn;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./encounter.module.scss\";\n\nimport { spawnFoe } from '../../../ducks/foe';\nimport { drawHand, shuffleDeck, useCard, usePlayer } from '../../../ducks/player';\n\nimport { setScreen } from '../../../ducks/screen';\n\nimport Hand from '../../hand'\nimport DrawZone from '../../draw-zone'\nimport DiscardZone from '../../discard-zone'\nimport PlayerHealth from '../../player-health'\nimport FoeZone from '../../foe-zone'\nimport TurnBttn from '../../turn-bttn'\n\nimport { useFoe } from '../../../ducks/foe'\n// import { usePlayer } from '../../../ducks/player'\n\nconst EncounterScreen = () => {\n    const { health: foeHealth } = useFoe();\n    const player = usePlayer();\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(spawnFoe());\n        dispatch(shuffleDeck());\n        dispatch(drawHand());\n    }, []);\n\n    useEffect(() => {\n        // This block of code only executes when foeHealth changes\n        console.log(\"encounter foe hp:\", foeHealth)\n        if (foeHealth <= 0) {\n            alert(\"Victory\")\n            // update end screen with win\n            dispatch(setScreen('End'))\n        }\n    }, [foeHealth]);\n\n    useEffect(() => {\n        if (player.health <= 0) {\n            alert(\"Defeat\")\n            // update end screen with loss\n            dispatch(setScreen('End'))\n        }\n    }, [player.health]);\n\n    return (\n    <div className={styles.game}>\n            {/* <button onClick={ () => dispatch( shuffleDeck() ) }> shuffle </button> */}\n            <PlayerHealth />\n            <FoeZone />\n            <div id='combatZone' className={styles.combatZoneOverlay}>\n                <div id='combatMsgs' className={styles.combatMsgs}> COMBAT MSGS </div>\n                <TurnBttn />\n            </div>\n\n            \n        <div className={styles.playerZone}> \n            <div id='playerZone'> </div>\n            <DrawZone />\n            <Hand />\n            <DiscardZone />\n        </div>\n    </div>\n    );\n    \n}\n\n\nexport default EncounterScreen;\n\n","import React from 'react';\nimport Title from './components/screens/title';\nimport Encounter from './components/screens/encounter';\nimport End from './components/screens/end';\nimport { useScreen } from './ducks/screen';\n\nconst screens = {\n  Title,\n  Encounter,\n  End,\n}\n\nconst App = () => {\n  const screen = useScreen();\n  const Screen = screens[screen];\n\n  return <Screen />\n}\n\nexport default App\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./end.module.scss\";\n\n\nimport { setScreen } from '../../../ducks/screen';\n\n\n\n// need to import reward cards...\n// select 3 random reward cards and display them.\n\n\n// for reward:\n// import { drawHand, shuffleDeck, useCard } from '../../ducks/player';\n\n\n// import { useFoe } from '../../../ducks/foe'\n\nconst EndScreen = () => {\n\n    // const { health: foeHealth } = useFoe();\n    const dispatch = useDispatch();\n\n    return (\n    <div className={styles.game}>\n        <p>\n            REWARD SCREEN\n        </p>\n\n        <div className={styles.menu} onClick={() => dispatch(setScreen('Title'))}> END </div>\n    </div>\n    );\n    \n}\n\n\nexport default EndScreen;\n\n","import { combineReducers } from 'redux';\nimport player from './player'\nimport foe from './foe'\nimport screen from './screen'\nimport encounter from './encounter'\n\nexport default combineReducers({\n    player,\n    foe,\n    screen,\n    encounter,\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport { Provider } from 'react-redux'\nimport configureStore from './configurestore'\n\nconst rootElement = document.getElementById('root');\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    rootElement\n);\n","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport rootReducer from './ducks/'\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers)\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n  return store;\n}\n\n\n"],"sourceRoot":""}