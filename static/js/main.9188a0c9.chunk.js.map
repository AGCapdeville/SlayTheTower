{"version":3,"sources":["components/hero/hero.module.scss","components/card/card.module.scss","components/screens/resolution/resolution.module.scss","components/combat-components/combat-zone/foe-zone/foe-zone.module.scss","components/screens/map/map.module.scss","components/screens/trial/trial.module.scss","components/screens/bonfire/bonfire.module.scss","components/combat-components/player-status/player-status.module.scss","components/monsters/fire/fire.module.scss","components/screens/hero-selection/hero-selection.module.scss","components/screens/title/title.module.scss","components/monsters/enforcer/enforcer.module.scss","components/monsters/eye/eye.module.scss","components/combat-components/combat-log/combat-log.module.scss","components/monsters/slime/slime.module.scss","components/combat-components/discard-zone/discard-zone.module.scss","components/combat-components/combat-zone/combat-zone.module.scss","components/monsters/stone/stone.module.scss","components/monsters/nul/nul.module.scss","components/combat-components/hand/hand.module.scss","components/combat-components/draw-zone/draw-zone.module.scss","components/screens/shop/shop.module.scss","components/transition/transition.module.scss","sound_clips/error_sound.mp3","components/screens/combat/combat.module.scss","sound_clips/play_card_zapsplat_foley.mp3","components/combat-components/combat-zone/hero-zone/hero-zone.module.scss","sound_clips/path_game_sound.mp3","sound_clips/coins_purchase.mp3","sound_clips/bearGrunt.mp3","sound_clips/menu_select.mp3","ducks/screen.js","game-data/monster-data.js","ducks/monster.js","game-data/affliction-card-data.js","ducks/combat.js","ducks/player.js","game-data/card-data.js","game-data/heros-data.js","ducks/game_state.js","game-data/game-state.js","components/screens/title/title.jsx","components/monsters/slime/slime.jsx","components/monsters/enforcer/enforcer.jsx","components/monsters/stone/stone.jsx","components/monsters/nul/nul.jsx","components/monsters/fire/fire.jsx","components/combat-components/combat-zone/foe-zone/foe-zone.jsx","components/monsters/eye/eye.jsx","components/hero/hero.jsx","components/combat-components/combat-zone/hero-zone/hero-zone.jsx","components/combat-components/combat-zone/combat-zone.jsx","components/card/card.jsx","components/combat-components/hand/hand.jsx","components/combat-components/draw-zone/draw-zone.jsx","components/combat-components/discard-zone/discard-zone.jsx","components/combat-components/combat-log/combat-log.jsx","components/combat-components/player-status/player-status.jsx","components/screens/combat/combat.jsx","ducks/map.js","components/screens/resolution/resolution.jsx","components/screens/hero-selection/hero-selection.jsx","ducks/shop.js","components/screens/map/map.jsx","components/screens/shop/shop.jsx","components/screens/bonfire/bonfire.jsx","game-data/trials-data.js","components/screens/trial/trial.jsx","game-data/tracks.js","ducks/music.js","components/music/music.jsx","components/transition/transition.jsx","App.js","ducks/index.js","index.js","configurestore.js"],"names":["module","exports","updateScreen","createAction","handleActions","state","action","transition_animation","payload","selectScreen","createSelector","screen","useScreen","useSelector","toScreen","transitionTime","document","getElementById","animate","opacity","backgroundColor","zIndex","duration","iterations","monsters","name","aligment","aligmentDuration","health","total","defense","gold","telegraphing","target","effect","power","nMoves","moves","spawnMonster","updateMonster","spawnFloorBoss","find","m","selectMonster","monster","useMonster","afflictionCards","requiredHero","art","type","energy","exhaust","description","updateCombat","logCombat","combatLog","origin","selectCombat","combat","hitHero","getRandomRange","damageFlash","bodyElement","min","max","Math","floor","random","endTurn","dispatch","getState","playerOverlay","style","height","width","transform","position","bottom","monsterBody","setTimeout","discardHand","player","console","log","includes","length","dmg","moveMsg","trample","newHealth","updatePlayer","newDefense","each","addCard","affliction","a","heroList","targetHero","addAilgments","push","newTelegraph","Object","keys","index","offenseHeroAilgments","parseInt","offenseHeroAilgmentsDuration","splice","utilityHeroAilgments","utilityHeroAilgmentsDuration","defenseHeroAilgments","defenseHeroAilgmentsDuration","reduceAligments","reduceMonsterAligments","drawCard","setDeck","playCard","playIndexedCard","voidCard","shuffleDeck","resetDeck","drawHand","removeAilgments","removeCurses","removeDeckAfflictions","shuffle","deck","j","x","i","slice","hand","discard","voidDeck","rest","indexOfStun","findIndex","newDeck","filter","card","newHand","newDiscard","shuffledDiscard","grabCard","voidPile","void","selectPlayer","usePlayer","heroStrikeAnimation","heroElement","leftRightShake","element","applyCard","cardIndex","energyCost","standing","requiredHeros","offHeroStanding","offenseHeroStatus","defHeroStanding","defenseHeroStatus","utilHeroStanding","utilityHeroStatus","checkStanding","foeDefense","cardSounds","createElement","mageBody","koMageBody","shieldBody","swordBody","energyText","aCursedCard","src","cardSuccess","play","choice","moveHero","newEnergy","newFoeHealth","newPlayerHealth","maxHealth","newPlayerDefense","cardError","mage","koMage","sword","shield","shakeHero","cards","cost","heros","utilityHero","offenseHero","defenseHero","map","id","items","updateGameState","resolutionCards","newResolutionCards","defeat","playerScore","floorComplete","selectGameState","game_state","useGameState","gameState","TitleScreen","useDispatch","useFullScreenHandle","className","titleStyle","game","title","menu","onClick","Slime","styles","monsterContainer","slime","rightEye","leftEye","Enforcer","enforcer","lHorn","socket","transEye","Stone","stone","stoneEye","Nul","nul","midEye","Fire","spike","spikeL","spikeR","triEye","monsterList","Eye","bossContainer","eyeBody","ring","eye","eyeM","FoeZone","foeHealth","foeMax","Monster","telegraph","getTelegraph","useEffect","newBar","updateFoeHealthBar","foeZone","foe","foeTitle","stunCounter","indexOf","healthBarContainer","defenseEmoji","healthEmoji","foeHealthBorder","foeHealthIndicator","Hero","props","heroType","heroContainer","heroBody","stun","headContainer","hood","headMageHero","chest","waist","staff","heroHandRight","heroHandLeft","koHeroBody","koHood","koHeadMageHero","koChest","koStaff","headSwordHero","swordContainer","swordHilt","grippedHands","swordTip","swordPattern","headShieldHero","HeroZone","heroColumn","status","CombatZone","combatZone","foeContainer","Card","cardFace","titleSection","cardData","cardArt","cardDescription","costRow","reqHeros","whiteDot","redDot","blueDot","greenDot","rednDot","blackDot","requiredHeroIcon","Cards","handContainer","key","cardStyle","cardButton","onCardClick","Hand","activeZone","DrawZone","drawZone","fontSize","DiscardZone","discardZone","devButton","CombatLog","combatLogHeader","scrollableLog","heroLog","monsterLog","PlayerStatus","heroHealth","heroMaxHealth","updateHeroHealthBar","count","curseCount","playerStatusContainer","playerGold","playerDefense","healthBorder","healthIndicator","curse","CombatScreen","loot","playerZone","updateMap","fieldEvent","fieldPaths","fieldPathEvents","selectMap","rollDice","ceil","genPathLength","onesOdds","genEvent","roll","fightOdds","elieteOdds","bonfireOdds","trialOdds","shopOdds","genPath","pathLength","setEvent","events","e","fillPaths","numberOfPaths","paths","p","ResolutionScreen","header","body","bttn","gameScreen","menuContainer","menuHeader","menuBody","bodyText","menuFooter","menuOption","startingPaths","rewardText","cardContainer","HeroSelection","heroTitle","heroImg","updateShop","setupShop","boughtCard","shopCards","newShopCards","selectShop","shop","createField","fieldEvents","fieldCount","fieldBatch","MapScreen","currentField","onPathSelection","field","newField","fields","event","dispatcher","eventHandler","screenContainer","screenBody","mapContainer","display","flexDirection","onMouseEnter","sounds","menuSound","volume","playMenuSound","pathButton","margin","legendContainer","legendTitle","legendItem","ShopScreen","color","sound","coindSound","bearGrunt","buyCard","handleOption","option","restB","resurectB","trainB","disabled","twentyFivePercent","BonfireScreen","heroLineUp","bonfireOption","subtext","bonfireOptionOff","trials","skipable","options","odds","reward","reward_value","lose","lose_value","continueButton","TrialScreen","trial","resultWindow","reultText","trialDescription","trialOptions","trialInfoContainer","trialOptionsContainer","rw","text","prev","newMax","innerHTML","g","trialOptionMade","track_list","for","artist","path","setTrack","load","loop","mute","updateVolume","initialState","curr_track","is_playing","is_looping","is_muted","curr_volume","parseFloat","track","autoplay","muted","reduceUpdateVoulme","selectMusic","music","Music","screenTrack","String","playButton","musicToggle","muteToggleButton","onChange","value","Transition","overlay","screens","Title","Combat","Resolution","Map","Shop","Bonfire","Trial","App","Screen","handle","enter","combineReducers","rootElement","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","rootReducer","configureStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.9188a0c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"heroContainer\":\"hero_heroContainer__1nv9h\",\"hood\":\"hero_hood__bdzJZ\",\"idle\":\"hero_idle__3omxh\",\"headContainer\":\"hero_headContainer__3IgWc\",\"headMageHero\":\"hero_headMageHero__gq_MW\",\"headSwordHero\":\"hero_headSwordHero__2vSsO\",\"headShieldHero\":\"hero_headShieldHero__1rkOT\",\"heroBody\":\"hero_heroBody__22OY8\",\"koHeroBody\":\"hero_koHeroBody__3LNkH\",\"chest\":\"hero_chest__1PQnz\",\"koChest\":\"hero_koChest__3XBbc\",\"waist\":\"hero_waist__KTNY5\",\"heroMove\":\"hero_heroMove__3vAuj\",\"staff\":\"hero_staff__1HoBV\",\"staffIdle\":\"hero_staffIdle__2-Pj4\",\"aniCast\":\"hero_aniCast__1S6BO\",\"staffSwing\":\"hero_staffSwing__2Uapv\",\"koStaff\":\"hero_koStaff__2FZzg\",\"fall\":\"hero_fall__3BWHm\",\"staffFall\":\"hero_staffFall__2Clac\",\"heroHandRight\":\"hero_heroHandRight__Nt5DM\",\"heroHandLeft\":\"hero_heroHandLeft__4sBAP\",\"swordContainer\":\"hero_swordContainer__1Y_t6\",\"grippedHands\":\"hero_grippedHands__3pzNi\",\"swordHilt\":\"hero_swordHilt__2uYP9\",\"swordIdle\":\"hero_swordIdle__3kXl0\",\"swordTip\":\"hero_swordTip__2h5Uk\",\"swordPattern\":\"hero_swordPattern__pI-17\",\"aniSwing\":\"hero_aniSwing__2S5VX\",\"swingSword\":\"hero_swingSword__wsc_D\",\"shield\":\"hero_shield__3IY5g\",\"shieldIdle\":\"hero_shieldIdle__1Rny_\",\"aniBash\":\"hero_aniBash__1nRJP\",\"shieldBash\":\"hero_shieldBash__30qzD\",\"stunCounter\":\"hero_stunCounter__38enD\",\"stun\":\"hero_stun__3jQws\",\"stunAnimation\":\"hero_stunAnimation__3_y1T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardButton\":\"card_cardButton__3vSh7\",\"cost\":\"card_cost__p1Z-g\",\"card\":\"card_card__1f1QP\",\"cardFace\":\"card_cardFace__3qGSw\",\"energy\":\"card_energy__3iq9D\",\"whiteDot\":\"card_whiteDot__1WBvz\",\"redDot\":\"card_redDot__12nHq\",\"blueDot\":\"card_blueDot__3CR05\",\"greenDot\":\"card_greenDot__1yGiB\",\"blackDot\":\"card_blackDot__VLBxj\",\"titleSection\":\"card_titleSection__ELNaR\",\"cardArt\":\"card_cardArt__2M4gI\",\"title\":\"card_title__3ghvj\",\"costRow\":\"card_costRow__3F4mP\",\"requiredHero\":\"card_requiredHero__1enB_\",\"cardDescription\":\"card_cardDescription__3up_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameScreen\":\"resolution_gameScreen__2Z8U2\",\"menuContainer\":\"resolution_menuContainer__N4HIa\",\"menuHeader\":\"resolution_menuHeader__3J5Ta\",\"menuBody\":\"resolution_menuBody__2AC6R\",\"bodyText\":\"resolution_bodyText__vGV5c\",\"rewardText\":\"resolution_rewardText__2osTb\",\"menuFooter\":\"resolution_menuFooter__6HZ2y\",\"menuOption\":\"resolution_menuOption__1mI4y\",\"cardContainer\":\"resolution_cardContainer__10uDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"telegraph\":\"foe-zone_telegraph__2A7Jx\",\"foeTitle\":\"foe-zone_foeTitle__2pI1i\",\"foeZone\":\"foe-zone_foeZone__xlu-7\",\"foe\":\"foe-zone_foe__29CPk\",\"foeImg\":\"foe-zone_foeImg__2ecbF\",\"foeHealthBorder\":\"foe-zone_foeHealthBorder__1OcwE\",\"foeHealthBar\":\"foe-zone_foeHealthBar__3xALw\",\"foeHealthIndicator\":\"foe-zone_foeHealthIndicator__22-Nd\",\"stunCounter\":\"foe-zone_stunCounter__1_TnB\",\"monsterContainer\":\"foe-zone_monsterContainer__1C5WD\",\"healthBarContainer\":\"foe-zone_healthBarContainer__2ykrb\",\"healthEmoji\":\"foe-zone_healthEmoji__2BtTm\",\"defenseEmoji\":\"foe-zone_defenseEmoji__1YsYY\",\"defense\":\"foe-zone_defense__3ztx4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenContainer\":\"map_screenContainer__138NT\",\"screen\":\"map_screen__2h83O\",\"screenHeader\":\"map_screenHeader__1MEZg\",\"screenBody\":\"map_screenBody__2Zi0a\",\"mapContainer\":\"map_mapContainer__1VYi0\",\"pathButton\":\"map_pathButton__2TJoE\",\"legendContainer\":\"map_legendContainer__1hI7J\",\"legendTitle\":\"map_legendTitle__3LxL3\",\"legendItem\":\"map_legendItem__3Hu8z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screenContainer\":\"trial_screenContainer__29DCd\",\"screen\":\"trial_screen__1mSLQ\",\"trialTitle\":\"trial_trialTitle__3wuft\",\"artContainer\":\"trial_artContainer__1At8-\",\"trialInfoContainer\":\"trial_trialInfoContainer__zoS1F\",\"trialDescription\":\"trial_trialDescription__2EuTV\",\"trialOptions\":\"trial_trialOptions__XiCBJ\",\"trialOptionsContainer\":\"trial_trialOptionsContainer__3TE8f\",\"resultWindow\":\"trial_resultWindow__3DwMI\",\"reultText\":\"trial_reultText__pSWJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bonfireOption\":\"bonfire_bonfireOption__1bqrs\",\"bonfireOptionOff\":\"bonfire_bonfireOptionOff__1wYq7\",\"subtext\":\"bonfire_subtext__3jkv9\",\"screenContainer\":\"bonfire_screenContainer__2ZYo2\",\"screen\":\"bonfire_screen__3Ybym\",\"heroLineUp\":\"bonfire_heroLineUp__2Novw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerStatusContainer\":\"player-status_playerStatusContainer__3Ki3i\",\"playerHealth\":\"player-status_playerHealth__10Z4s\",\"playerGold\":\"player-status_playerGold__DvRWe\",\"playerDefense\":\"player-status_playerDefense__Df9yt\",\"healthBarContainer\":\"player-status_healthBarContainer__1D4RG\",\"healthEmoji\":\"player-status_healthEmoji__ljzsH\",\"curse\":\"player-status_curse__2Py2I\",\"healthBorder\":\"player-status_healthBorder__zD7YS\",\"healthBar\":\"player-status_healthBar__RDmM1\",\"healthIndicator\":\"player-status_healthIndicator__3XiBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monsterContainer\":\"fire_monsterContainer__1vGua\",\"spike\":\"fire_spike__2jzLI\",\"fireIdle\":\"fire_fireIdle__6av27\",\"spikeL\":\"fire_spikeL__3ipDQ\",\"spikeR\":\"fire_spikeR__ZsJaf\",\"triEye\":\"fire_triEye__3UYDk\",\"tryEyeAni\":\"fire_tryEyeAni__3FVyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameScreen\":\"hero-selection_gameScreen__CCdN_\",\"menuContainer\":\"hero-selection_menuContainer__gH6KW\",\"heroContainer\":\"hero-selection_heroContainer__3o7wE\",\"heroTitle\":\"hero-selection_heroTitle__1tGMV\",\"heroImg\":\"hero-selection_heroImg__1gPUg\",\"title\":\"hero-selection_title__JAIMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"title_game__y3Wr0\",\"menu\":\"title_menu__2pkpl\",\"title\":\"title_title__2XrX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monsterContainer\":\"enforcer_monsterContainer__P4aZM\",\"enforcer\":\"enforcer_enforcer__JJ44o\",\"scaningHead\":\"enforcer_scaningHead__1XUiM\",\"socket\":\"enforcer_socket__3YzXR\",\"lHorn\":\"enforcer_lHorn__1Btvi\",\"transEye\":\"enforcer_transEye__pjmgd\",\"scanningEye\":\"enforcer_scanningEye__2Eu6y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bossContainer\":\"eye_bossContainer__3wGRT\",\"eyeBody\":\"eye_eyeBody__2P_x8\",\"eyeBodyIdle\":\"eye_eyeBodyIdle___CvB1\",\"ring\":\"eye_ring__1loW1\",\"spin\":\"eye_spin__1p-Ht\",\"eye\":\"eye_eye__ULhr3\",\"eyeIdle\":\"eye_eyeIdle__-TpSi\",\"eyeM\":\"eye_eyeM__1Igxk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"combatLog\":\"combat-log_combatLog__2qqWk\",\"combatLogHeader\":\"combat-log_combatLogHeader__2kCz6\",\"scrollableLog\":\"combat-log_scrollableLog__36g4E\",\"heroLog\":\"combat-log_heroLog__3F6z8\",\"monsterLog\":\"combat-log_monsterLog__2zD7b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monsterContainer\":\"slime_monsterContainer__3X3Wi\",\"slime\":\"slime_slime__29uu9\",\"slimeIdle\":\"slime_slimeIdle__1OwCd\",\"rightEye\":\"slime_rightEye__3n_IF\",\"leftEye\":\"slime_leftEye__kH1ps\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discardZone\":\"discard-zone_discardZone__38wSB\",\"void\":\"discard-zone_void__HIbIv\",\"discard\":\"discard-zone_discard__2rdot\",\"devButton\":\"discard-zone_devButton__389Dw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"combatZone\":\"combat-zone_combatZone__3hbN6\",\"partyHealthZone\":\"combat-zone_partyHealthZone__1GA_A\",\"heroContainer\":\"combat-zone_heroContainer__1ktU4\",\"foeContainer\":\"combat-zone_foeContainer__y-Yjk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monsterContainer\":\"stone_monsterContainer__3KR04\",\"stone\":\"stone_stone__3L1G7\",\"stoneIdle\":\"stone_stoneIdle__4gjv4\",\"stoneEye\":\"stone_stoneEye__106vt\",\"stoneEyeIdle\":\"stone_stoneEyeIdle__247an\",\"triEye\":\"stone_triEye__2xDw1\",\"tryEyeAni\":\"stone_tryEyeAni__3Zaa6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monsterContainer\":\"nul_monsterContainer__12boJ\",\"nul\":\"nul_nul__ha-9y\",\"nulIdle\":\"nul_nulIdle__3LSjV\",\"midEye\":\"nul_midEye__3B5kp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeZone\":\"hand_activeZone__e-fVo\",\"handContainer\":\"hand_handContainer__2Ctxp\",\"hand\":\"hand_hand__27tNn\",\"swipeContainer\":\"hand_swipeContainer__zU6i5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawZone\":\"draw-zone_drawZone__BCzkT\",\"energy\":\"draw-zone_energy__3fhc4\",\"deck\":\"draw-zone_deck__2V8oB\",\"devButton\":\"draw-zone_devButton__zQXGR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardButton\":\"shop_cardButton__1Vhul\",\"screenContainer\":\"shop_screenContainer__3zudU\",\"screen\":\"shop_screen__gdpAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"transition_overlay__2Qa0j\",\"aniFade\":\"transition_aniFade__3JkE-\",\"fadeOut\":\"transition_fadeOut__OSVbp\"};","module.exports = __webpack_public_path__ + \"static/media/error_sound.12329e7a.mp3\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"combat_game__bGecB\",\"playerZone\":\"combat_playerZone__35zL5\",\"combatZoneOverlay\":\"combat_combatZoneOverlay__3p0qS\"};","module.exports = __webpack_public_path__ + \"static/media/play_card_zapsplat_foley.dc8b7ab4.mp3\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"herColumn\":\"hero-zone_herColumn__359lf\",\"offHero\":\"hero-zone_offHero__EIBwo\",\"defHero\":\"hero-zone_defHero__1usiC\",\"utilHero\":\"hero-zone_utilHero__3Iv2m\",\"heroContainer\":\"hero-zone_heroContainer__2huL_\"};","module.exports = __webpack_public_path__ + \"static/media/path_game_sound.eba816ab.mp3\";","module.exports = __webpack_public_path__ + \"static/media/coins_purchase.88db2063.mp3\";","module.exports = __webpack_public_path__ + \"static/media/bearGrunt.1bc27cf1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/menu_select.90345373.mp3\";","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { act } from \"react-dom/test-utils\";\n\nimport {transition_style} from '../components/transition/transition.module.scss'\n\n\nexport const updateScreen = createAction('screen/UPDATE_SCREEN');\n\nconst initialSreenState = 'Title';\n\n\nexport default handleActions({\n    [updateScreen]: (state, action) => {\n        transition_animation(action.payload)\n        return(state=action.payload)\n    },\n}, initialSreenState);\n\nconst selectScreen = createSelector(\n    state => state.screen,\n    screen => screen   \n)\n\nexport const useScreen = () => useSelector(selectScreen);\n\n\nexport const transition_animation = (toScreen) => {\n\n    let overlayT = document.getElementById(\"overlayT\");\n\n    let transitionTime = 1000;\n\n    if (toScreen === 'Combat'){\n        transitionTime = 600;\n    }\n    if (toScreen === 'Resolution'){\n        transitionTime = 300;\n    }\n\n    overlayT.animate([\n        {opacity: 1, backgroundColor: 'white', zIndex: 100},\n        {opacity: 1, backgroundColor: 'black', zIndex: 100},\n        {opacity: 0, zIndex: 100 }\n    ], {\n        duration: transitionTime,\n        iterations: 1\n    });\n}\n","export const monsters = [\n    {\n        name: 'Slime',\n        aligment: [],\n        aligmentDuration: [],\n        // health: 36, <- normal health\n        health: 1,\n        total: 36,\n        defense: 0,\n        gold: 15,\n        telegraphing: { \n                name: ['Spit'],\n                target: ['hero'],\n                effect: ['damage'],\n                power: [8]\n            },\n        nMoves: 3,\n        moves: [\n            {\n                name: ['Spit'],\n                target: ['hero'],\n                effect: ['damage'],\n                power: [8]\n            },\n            {\n                name: ['Whip','Whip'],\n                target: ['hero','hero'],\n                effect: ['bleed','damage'],\n                power: [2, 3]\n            },\n            {\n                name : ['Replenish'],\n                target: ['self'],\n                effect: ['heal'],\n                power: [25]\n            }\n        ]\n    },\n    {\n        name: 'Nul',\n        aligment: [],\n        aligmentDuration: [],\n        // health: 36, <- normal health\n        health: 1,\n        total: 36,\n        defense: 0,\n        gold: 25,\n        telegraphing: { \n                name: ['Force','Sleep'],\n                target: ['hero','hero'],\n                effect: ['damage','fatigue'],\n                power: [5,2]\n            },\n        nMoves: 2,\n        moves: [\n            {\n                name: ['Power','Drain'],\n                target: ['hero','foe'],\n                effect: ['damage','heal'],\n                power: [13,10]\n            },\n            {\n                name : ['Beam','Nul'],\n                target: ['hero','foe'],\n                effect: ['damage','idle'],\n                power: [20,2]\n            }\n        ]\n    },\n    {\n        name: 'Enforcer',\n        aligment: [],\n        aligmentDuration: [],\n        // health: 46, <- normal health\n        health: 1,\n        total: 36,\n        defense: 5,\n        gold: 25,\n        telegraphing: { \n                name: ['Alert','Focus'],\n                target: ['hero','foe'],\n                effect: ['damage','defense'],\n                power: [10,20]\n            },\n        nMoves: 2,\n        moves: [\n            {\n                name: ['Alert','Focus'],\n                target: ['hero','foe'],\n                effect: ['damage','defense'],\n                power: [10,20]\n            },\n            {\n                name : ['Fire','Recharge'],\n                target: ['hero','foe'],\n                effect: ['damage','idle'],\n                power: [20,2]\n            }\n        ]\n    },\n    {\n        name: 'Fire',\n        aligment: [],\n        aligmentDuration: [],\n        // health: 36, <- normal health\n        health: 1,\n        total: 40,\n        defense: 0,\n        gold: 30,\n        telegraphing: { \n                name: ['Overwhelming Fire'],\n                target: ['hero'],\n                effect: ['fatigue'],\n                power: [4]\n            },\n        nMoves: 2,\n        moves: [\n            {\n                name: ['Burn'],\n                target: ['hero'],\n                effect: ['damage'],\n                power: [15]\n            },\n            {\n                name: ['Searing Sight','Burning Eyes'],\n                target: ['hero','hero'],\n                effect: ['stun','damage'],\n                power: [2,5]\n            }\n        ]\n    },{\n        name: 'Stone',\n        aligment: [],\n        aligmentDuration: [],\n        // health: 80, <- normal health\n        health: 1,\n        total: 80,\n        defense: 5,\n        gold: 40,\n        telegraphing: { \n                name: ['Slam','Shatter'],\n                target: ['hero','hero'],\n                effect: ['damage','bleed'],\n                power: [10,2]\n            },\n        nMoves: 3,\n        moves: [\n            {\n                name: ['Regenerate','idle'],\n                target: ['foe','foe'],\n                effect: ['heal','idle'],\n                power: [20, 2]\n            },\n            {\n                name: ['Slam'],\n                target: ['hero'],\n                effect: ['damage'],\n                power: [10]\n            },{\n                name: ['Timber','Shatter'],\n                target: ['hero','foe'],\n                effect: ['stun','damage'],\n                power: [2,5]\n            }\n        ]\n    },{\n        name: 'Eye',\n        aligment: [],\n        aligmentDuration: [],\n        health: 100,\n        total: 100,\n        defense: 0,\n        gold: 100,\n        telegraphing: { \n                name: ['Glare','Horrify','Horrify'],\n                target: ['hero','hero','hero'],\n                effect: ['damage','stun','stun'],\n                power: [15,2,2]\n            },\n        nMoves: 4,\n        moves: [\n            {\n                name: ['Glare','Horrify','Horrify'],\n                target: ['hero','hero','hero'],\n                effect: ['damage','stun','stun'],\n                power: [15,2,2]\n            },\n            {\n                name: ['Regenerate','Sleep'],\n                target: ['foe','foe'],\n                effect: ['heal','idle'],\n                power: [35,2]\n            },{\n                name: ['Drain','Absorb','Fatigue'],\n                target: ['hero','foe','hero'],\n                effect: ['damage','heal','fatigue'],\n                power: [10,20,4]\n            },\n            {\n                name: ['Eat','Chew','Bleed'],\n                target: ['hero','foe','hero'],\n                effect: ['damage','heal','bleed'],\n                power: [10,10,4]\n            }\n        ]\n    }\n]","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { monsters } from '../game-data/monster-data';\n\n// export const setFoeName = createAction('foe/SET_FOE_NAME');\n// export const setFoeImg = createAction('foe/SET_FOE_IMG');\n// export const setFoeTotalHealth = createAction('foe/SET_FOE_TOTAL_HEALTH');\n// export const setFoeMoves = createAction('foe/SET_FOE_MOVES');\nexport const spawnMonster = createAction('monster/SPAWN_MONSTER');\nexport const updateMonster = createAction('monster/UPDATE_MONSTER');\nexport const spawnFloorBoss = createAction('monster/SPAWN_FLOOR_BOSS');\n\n\nconst initialState = { };\n\n\nexport default handleActions({\n    [spawnMonster]: (state, action) => ({\n        ...state, \n        ...monsters.find( m => action.payload === m.name),\n    }),\n    [spawnFloorBoss]: (state, action) => ({...state, ...action.payload}),\n    [updateMonster]: (state, action) => {\n        return ({ ...state, ...action.payload })\n    },\n}, initialState);\n \n\n// how we grab data from the store\nconst selectMonster = createSelector(\n    state => state.monster,\n    monster => monster   \n)\n\nexport const useMonster = () => useSelector(selectMonster);\n\n","export const afflictionCards = [\n    {\n        name: 'Curse',\n        requiredHero: 'a',\n        art: '<art url>',\n        type: 'curse',\n        energy: 0,\n        exhaust: false,\n        action: {\n            target: ['player'],\n            effect: ['curse'],\n            power: [0]\n        },\n        description: \"Party is cursed, can't be used\",\n    },\n    {   \n        name: 'Fatigue',\n        requiredHero: 'a',\n        art: '<art url>',\n        type: 'affliction',\n        energy: 1,\n        exhaust: true,\n        action: {\n            target: ['affliction'],\n            effect: ['affliction'],\n            power: [0]\n        },\n        description: \"Party is fatigued\\nVOID\",\n    },{\n        name: 'Bleed',\n        requiredHero: 'a',\n        art: '<art url>',\n        type: 'affliction',\n        energy: 0,\n        exhaust: true,\n        action: {\n            target: ['affliction', 'player'],\n            effect: ['affliction', 'damage'],\n            power: [3, 3]\n        },\n        description: \"Take 3 damage \\nVOID\",\n    },\n]","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { updateMonster } from './monster';\n\nimport { updatePlayer, discardHand, drawCard, addCard, addAilgments, playCard } from './player';\nimport {afflictionCards} from '../game-data/affliction-card-data';\n\nexport const updateCombat = createAction('combat/UPDATE_COMBAT');\nexport const logCombat = createAction('combat/LOG_COMBAT');\nexport const resetCombatLog = createAction('combat/RESET_COMBAT_LOG');\n\nconst initialState = {\n    combatLog : \n        [{\n            origin: 'player',\n            description: 'Start of combat'\n        }]\n};\n\nexport default handleActions({\n    [updateCombat]: (state, action) => ({ ...state, ...action.payload }),\n    [logCombat]: (state, action) => ({ ...state.combatLog, combatLog: [...state.combatLog, action.payload] })\n}, initialState);\n\n\n// how we grab data from the store\nconst selectCombat = createSelector(\n    state => state.combat,\n    combat => combat   \n)\n\nexport const useCombat = () => useSelector(selectCombat);\n\n\nfunction strikeAnimation(bodyElement){\n    let transitionTime = 500;\n    bodyElement.animate([\n        {transform: 'translate(0px,0px)'},\n        {transform: 'translate(-50px, 0px)'},\n        {transform: 'translate(-105px, 0px)'},\n        {transform: 'translate(1px, 0px)'},\n        {transform: 'translate(0, 0px)'}\n\n    ], {\n        duration: transitionTime,\n        iterations: 1\n    });\n}\n\nfunction hitHero(){\n    let roll = getRandomRange(0,3);\n\n    switch (roll) {\n        case 0:\n            damageFlash(document.getElementById('mageBody'))\n            break;\n        case 1:\n            damageFlash(document.getElementById('swordBody'))\n            break;\n        case 2:\n            damageFlash(document.getElementById('shieldBody'))\n            break;\n    }\n}\n\nfunction damageFlash(bodyElement){\n\n    let transitionTime = 500;\n    bodyElement.animate([\n        {opacity: 1},\n        {opacity: 0},\n        {opacity: .75},\n        {opacity: .5},\n        {opacity: 0},\n        {opacity: .75},\n        {opacity: 1}\n\n    ], {\n        duration: transitionTime,\n        iterations: 1\n    });\n    \n}\n\n\nfunction reduceAligments(player){\n\n    for (let index = 0; index < player.offenseHeroAilgments.length; index++) {\n        if ( parseInt(player.offenseHeroAilgmentsDuration[index]) - 1 > 0 ){\n            // last turn with given ailgment.\n            player.offenseHeroAilgmentsDuration[index] -= 1;\n\n        }else {\n            // aligment is removed.\n            player.offenseHeroAilgments.splice(index,1);\n            player.offenseHeroAilgmentsDuration.splice(index,1);\n        }\n    }\n\n    for (let index = 0; index < player.utilityHeroAilgments.length; index++) {\n        if ( parseInt(player.utilityHeroAilgmentsDuration[index]) - 1 > 0 ){\n            // last turn with given ailgment.\n            player.utilityHeroAilgmentsDuration[index] -= 1;\n\n        }else {\n            // aligment is removed.\n            player.utilityHeroAilgments.splice(index,1);\n            player.utilityHeroAilgmentsDuration.splice(index,1);\n        }\n    }\n\n    for (let index = 0; index < player.defenseHeroAilgments.length; index++) {\n        if ( parseInt(player.defenseHeroAilgmentsDuration[index]) - 1 > 0 ){\n            // last turn with given ailgment.\n            player.defenseHeroAilgmentsDuration[index] -= 1;\n\n        }else {\n            // aligment is removed.\n            player.defenseHeroAilgments.splice(index,1);\n            player.defenseHeroAilgmentsDuration.splice(index,1);\n        }\n    }\n}\n\nfunction reduceMonsterAligments(monster){\n    for (let index = 0; index < monster.aligment.length; index++) {\n        \n\n        if ( parseInt(monster.aligmentDuration[index]) - 1 === 1 ){\n            // last turn with given ailgment. Maybe...\n            monster.aligmentDuration[index] -= 1;\n\n        }else if ( parseInt(monster.aligmentDuration[index]) - 1 <= 0 ){\n            // aligment is removed.\n            monster.aligmentDuration.splice(index,1);\n            monster.aligment.splice(index,1);\n        }\n    }\n}\n\nfunction getRandomRange(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n}\n\n\n\nexport const endTurn = () => (dispatch, getState) => {\n\n    let playerOverlay = document.getElementById('playerOverlay');\n\n    playerOverlay.style.height = \"50vh\"\n    playerOverlay.style.width = \"100vw\"\n    playerOverlay.style.transform = \"translate(0px,50px)\"\n    playerOverlay.style.backgroundColor = \"black\"\n    playerOverlay.style.opacity = .75\n    playerOverlay.style.position = \"absolute\"\n    playerOverlay.style.zIndex = 100\n    playerOverlay.style.bottom = 0\n\n    let monsterBody = document.getElementById('monsterOuterContainer');\n    \n    setTimeout( function(){ \n        dispatch( discardHand() )\n    }, 1000 );\n\n    const state = getState()\n    const player = state.player\n    const monster = state.monster\n\n    monster.defense = 0;\n\n    const telegraphing = monster.telegraphing\n\n    console.log('telegraph:', telegraphing)\n\n    if ( !monster.aligment.includes('stun') ){\n\n        for (let m = 0; m < telegraphing.effect.length; m++) {\n                \n            if ( telegraphing.effect[m] == \"damage\" ){\n\n                strikeAnimation(monsterBody);\n                hitHero();\n\n                const dmg = telegraphing.power[m]\n                const moveMsg = monster.name + \" used \" + telegraphing.name[m] + \", dealing\\n\" + telegraphing.power[m] + \" damage.\"\n\n                setTimeout( function(){\n                    dispatch(logCombat( {origin:'monster', description:moveMsg} ), 1000)\n                }, 1000);\n\n                const trample = player.defense - dmg\n                if ( trample <= 0 ){\n                    const newDefense = 0\n                    const newHealth = player.health + trample\n                    setTimeout( function(){ dispatch( updatePlayer({ health: newHealth, defense: newDefense }) ) },1000);\n                    \n                } else {\n                    const newDefense = trample\n                    setTimeout( function(){ dispatch( updatePlayer({ defense: newDefense }) ) },1000);    \n                }\n\n\n            } else if (telegraphing.effect[m] == 'defense') {\n\n\n                const newDefense = telegraphing.power[m]\n                const moveMsg = monster.name + \" used \" + telegraphing.name[m] + \", gained\\n +\" + telegraphing.power[m] + \" defense.\"\n\n                setTimeout( function(){\n                    //  combatMsgs.innerHTML = moveMsg \n                    dispatch(logCombat( {origin:'monster', description:moveMsg} ), 1000)\n                }, 1000)\n\n                setTimeout( function(){ \n                    dispatch( updateMonster({ defense: newDefense })) \n                },1100);\n            } else if (telegraphing.effect[m] == 'fatigue') {\n\n                const moveMsg = monster.name + \" used \" + telegraphing.name[m] + \", adding \" + telegraphing.power[m] + \" fatigue cards to the partys deck.\"\n\n                setTimeout( function(){\n                    dispatch(logCombat( {origin:'monster', description:moveMsg} ), 1000)\n                }, 1000);\n\n                for (let each = 0; each < telegraphing.power[m]; each++) {\n                    dispatch( addCard(afflictionCards.find( affliction => affliction.name === 'Fatigue')) )\n                }\n\n            } else if (telegraphing.effect[m] == 'bleed') {\n                const moveMsg = monster.name + \" used \" + telegraphing.name[m] + \", adding \" + telegraphing.power[m] + \" bleed cards to the partys deck.\"\n\n                setTimeout( function(){\n                    dispatch(logCombat( {origin:'monster', description:moveMsg} ), 1000)\n                }, 1000);\n\n                console.log('bleed move! :', afflictionCards.find( a => a.name ==='bleed'))\n\n                for (let each = 0; each < telegraphing.power[m]; each++) {\n                    dispatch( addCard(afflictionCards.find( affliction => affliction.name === 'Bleed')) )\n                }\n\n            }else if (telegraphing.effect[m] == 'stun') {\n\n                let heroList = ['mage', 'sword', 'shield']\n                let target = getRandomRange(0,heroList.length)\n                let targetHero = heroList[target]\n\n                dispatch( addAilgments({\n                        target : targetHero,\n                        effect :'stun',\n                        duration : telegraphing.power[m]\n                    })\n                )\n                const moveMsg = monster.name + \" used \" + telegraphing.name[m] + \", stunning \" + targetHero + \" hero, for \" + telegraphing.power[m] + \" turns.\"\n                setTimeout( function(){\n                    dispatch(logCombat( {origin:'monster', description:moveMsg} ), 1000)\n                }, 1000);\n\n            }else if (telegraphing.effect[m] == 'idle'){\n                state.monster.aligment.push('stun');\n                state.monster.aligmentDuration.push(telegraphing.power[m]);\n                const moveMsg = monster.name + \" used \" + telegraphing.name[m] + \", idling for \" + telegraphing.power[m] + \" turns.\"\n                setTimeout( function(){\n                    dispatch(logCombat( {origin:'monster', description:moveMsg} ), 1000)\n                }, 1000);\n            }else if (telegraphing.effect[m] == 'heal'){\n                if (monster.health + telegraphing.power[m] > monster.total){\n                    monster.health = monster.total;\n                }else{\n                    monster.health = monster.health + (telegraphing.power[m]);\n                }\n                const moveMsg = monster.name + \" used \" + telegraphing.name[m] + \", healing for \" + telegraphing.power[m] + \" health.\"\n                setTimeout( function(){\n                    dispatch(logCombat( {origin:'monster', description:moveMsg} ), 1000)\n                }, 1000);\n            }else{                \n                //default\n            }\n\n        }\n\n        const moves = monster.moves;\n        const lengthOfMoves = Object.keys(moves).length;\n        let randomMove = getRandomRange(0, lengthOfMoves);\n        const newTelegraph = moves[randomMove]\n        setTimeout( function(){ dispatch( updateMonster({ telegraphing: newTelegraph }) )}, 1200)\n    }\n\n    reduceAligments(state.player);\n    reduceMonsterAligments(monster);\n\n\n    setTimeout( function(){\n        dispatch( updatePlayer({ energy: 3, defense: 0 }) \n    )}, 1200);\n    \n    setTimeout( function(){     \n        dispatch( drawCard() )\n    }, 1500);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n    }, 2000);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n    }, 2500);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n    }, 3000);\n\n    setTimeout( function(){\n        dispatch( drawCard() )\n        playerOverlay.style.height = \"0vh\"\n        playerOverlay.style.width = \"0vw\"\n    }, 3500);\n\n\n}\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { updateMonster } from './monster';\n\nimport { logCombat } from './combat';\n\n// sounds clips\nimport cardSuccess from '../sound_clips/play_card_zapsplat_foley.mp3';\nimport cardError from '../sound_clips/error_sound.mp3';\n\n// Alter Health, Energy & Defense Actions:\nexport const updatePlayer = createAction('player/UPDATE_PLAYER');\n\n// Deck Actions:\nexport const setDeck = createAction('player/SET_DECK');\nexport const drawCard = createAction('player/DRAW_CARD');\nexport const playCard = createAction('player/PLAY_CARD');\n\nexport const playIndexedCard = createAction('player/PLAY_INDEXED_CARD');\nexport const discardHand = createAction('player/DISCARD_HAND');\n\nexport const voidCard = createAction('player/VOID_CARD');\nexport const shuffleDeck = createAction('player/SHUFFLE_DECK');\nexport const resetDeck = createAction('player/RESET_DECK')\n\n// Hand actions\nexport const drawHand = createAction('player/DRAW_HAND');\n\n// deck altering\nexport const addCard = createAction('player/ADD_CARD')\n\n// Ailgment\nexport const removeAilgments = createAction('player/REMOVE_AILGMENTS');\nexport const addAilgments = createAction('player/ADD_AILGMENTS');\n\n// Curses\nexport const removeCurses = createAction('player/REMOVE_CURSES');\n\n// Afflictions\nexport const removeDeckAfflictions = createAction('player/REMOVE_DECK_AFFLICTIONS');\n\nconst initialState = {\n    deck: [],\n    hand: [],\n    discard: [],\n    voidDeck: []\n}\n\n\nfunction shuffle(deck) {\n    var j, x, i\n    for (i = deck.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1))\n        x = deck[i]\n        deck[i] = deck[j]\n        deck[j] = x\n    }\n    return deck\n}\n\nconst reduceResetDeck = ({ deck, hand, discard, voidDeck, ...rest }) => {\n    let resetDeck = [...deck, ...hand, ...discard, ...voidDeck];\n    console.log('reset deck:', resetDeck);\n    return { ...rest, deck: resetDeck, hand:[], voidDeck:[], discard:[] }\n}\n\nconst reduceDrawCard = ({ discard, deck, hand, ...rest }) => {\n    if ( deck.length == 0 ){\n        if ( discard.length == 0 ){\n            return { ...rest, discard, deck, hand}\n        } else {\n            const shuffledDiscard = shuffle(discard)\n            const grabCard = shuffledDiscard[shuffledDiscard.length-1]\n            const newDeck = shuffledDiscard.slice(0, shuffledDiscard.length-1)        \n            const newHand = [...hand, grabCard]\n            return { ...rest, hand: newHand, deck: newDeck, discard: [] }\n        }\n    } else {\n        return { ...rest, hand: [...hand, deck[deck.length-1]], deck: deck.slice( 0, deck.length -1), discard }\n    }\n}\n\nconst reducePlayCard = ({ discard, hand, ...rest }) => {\n    const emptyHand = hand.length < 1;\n    \n    if (!emptyHand){\n        const newHand =  hand.slice( 0, hand.length-1)\n        const newDiscard = [...discard, hand[hand.length-1] ]\n        return { ...rest, hand: newHand, discard: newDiscard}\n    }else{\n        return { ...rest, hand, discard}\n    }\n}\n\nconst reducePlayIndexedCard = ({ voidDeck, discard, hand, ...rest } , {payload}) => {\n    const grabCard = hand[payload]\n    hand.splice(payload, 1)\n\n    if(grabCard.exhaust){\n        return { ...rest, voidDeck: [...voidDeck, grabCard], hand: hand, discard: discard}\n    }else{\n        return { ...rest, voidDeck: voidDeck, hand: hand, discard: [...discard, grabCard]}\n    }\n}\n\nconst reduceDiscardHand = ({ discard, hand, ...rest }) => {\n    const emptyHand = hand.length < 1;\n\n    if (!emptyHand){\n        const newHand = []\n        const newDiscard = [...discard, ...hand ]\n        return { ...rest, hand: newHand, discard: newDiscard}\n    }else{\n        return { ...rest, hand, discard}\n    }\n}\n\nconst reduceAddCard = ({ deck, ...rest }, {payload}) => {\n    const newDeck = [...deck, payload]\n    return { ...rest, deck: newDeck }\n}\n\nconst reduceAddAilgments = ({offenseHeroAilgments, offenseHeroAilgmentsDuration, utilityHeroAilgments, utilityHeroAilgmentsDuration, defenseHeroAilgments, defenseHeroAilgmentsDuration, ...rest}, {payload}) => {\n\n    console.log(\"Ailgments Payload:\",payload)\n\n    let indexOfStun = -1;\n\n    switch (payload.target) {\n\n        case 'mage':\n            indexOfStun = utilityHeroAilgments.findIndex( aligment => aligment == \"stun\" )\n            if ( indexOfStun != -1 ){\n                utilityHeroAilgmentsDuration[indexOfStun] =  utilityHeroAilgmentsDuration[indexOfStun] + payload.duration;\n            }else{\n                utilityHeroAilgments = [...utilityHeroAilgments, payload.effect]\n                utilityHeroAilgmentsDuration = [...utilityHeroAilgmentsDuration, payload.duration]\n            }\n            break;\n        case 'sword':\n            indexOfStun = offenseHeroAilgments.findIndex( aligment => aligment == \"stun\" );\n            if ( indexOfStun != -1 ){\n                offenseHeroAilgmentsDuration[indexOfStun] =  offenseHeroAilgmentsDuration[indexOfStun] + payload.duration;\n            }else{\n                offenseHeroAilgments = [...offenseHeroAilgments, payload.effect]\n                offenseHeroAilgmentsDuration = [...offenseHeroAilgmentsDuration, payload.duration]\n            }\n            break;\n        case 'shield':\n            indexOfStun = defenseHeroAilgments.findIndex( aligment => aligment == \"stun\" )\n            if ( indexOfStun != -1 ){\n                defenseHeroAilgmentsDuration[indexOfStun] =  defenseHeroAilgmentsDuration[indexOfStun] + payload.duration;\n            }else{\n                defenseHeroAilgments = [...defenseHeroAilgments, payload.effect]\n                defenseHeroAilgmentsDuration = [...defenseHeroAilgmentsDuration, payload.duration]\n            }\n            break;\n        default:\n            console.log('ERROR default::',payload.target)\n\n    }\n    return { ...rest, offenseHeroAilgments: offenseHeroAilgments, offenseHeroAilgmentsDuration: offenseHeroAilgmentsDuration, utilityHeroAilgments: utilityHeroAilgments, utilityHeroAilgmentsDuration: utilityHeroAilgmentsDuration, defenseHeroAilgments: defenseHeroAilgments, defenseHeroAilgmentsDuration: defenseHeroAilgmentsDuration }\n}\n\nconst reduceRemoveAilgments = ({offenseHeroAilgments, offenseHeroAilgmentsDuration, utilityHeroAilgments, utilityHeroAilgmentsDuration, defenseHeroAilgments, defenseHeroAilgmentsDuration, ...rest}) => {\n    return { ...rest, offenseHeroAilgments: [], offenseHeroAilgmentsDuration: [], utilityHeroAilgments: [], utilityHeroAilgmentsDuration: [], defenseHeroAilgments: [], defenseHeroAilgmentsDuration: [] }\n}\n\nconst reduceRemoveDeckAfflictions = ({ deck, hand, discard, ...rest}) => {\n    let newDeck = deck.filter( card => {\n        if ( !(card.type === 'affliction') ){\n            return card\n        }\n    })\n    let newHand = hand.filter( card => {\n        if ( !(card.type === 'affliction') ){\n            return card\n        }\n    })\n    let newDiscard = discard.filter( card => {\n        if ( !(card.type === 'affliction') ){\n            return card\n        }\n    })\n\n    return {...rest, deck : newDeck, hand: newHand, discard: newDiscard}\n}\n\nconst reduceRemoveCurses = ({deck, ...rest}) => {\n    let newDeck = deck.filter( card => {\n        if ( !(card.type == 'curse') ){\n            return card\n        }\n    })\n\n    return {...rest, deck : newDeck}\n}\n\nexport default handleActions({\n    [drawHand]: (state) => ({...state, deck: state.deck.slice( 0, state.deck.length -5), hand: [...state.hand, ...state.deck.slice(-5)]}),\n    [shuffleDeck]: (state) => ({...state, deck: shuffle(state.deck)}),\n    [updatePlayer]: (state, action) => ({ ...state, ...action.payload }),\n    [setDeck]: (state, action) => ({...state, deck: action.payload }),\n    \n    [resetDeck]: reduceResetDeck,\n    [removeAilgments]: reduceRemoveAilgments,\n    [addAilgments]: reduceAddAilgments,\n\n    [removeDeckAfflictions]: reduceRemoveDeckAfflictions,\n    [removeCurses]: reduceRemoveCurses,\n\n    [drawCard]: reduceDrawCard,\n    [playCard]: reducePlayCard,\n    \n    [playIndexedCard]: reducePlayIndexedCard,\n    [discardHand]: reduceDiscardHand,\n\n    [addCard]: reduceAddCard,\n\n    [voidCard]: (state, action) => ({...state, hand: state.hand.slice(action.payload, 1), voidPile: [...state.void, state.hand.slice(action.payload, 1)]}),\n}, initialState);\n\n\n// how we grab data from the store\nconst selectPlayer = createSelector(\n    state => state.player,\n    player => player   \n)\n\nexport const usePlayer = () => useSelector(selectPlayer);\n\n\n/* requiredHero :\n// a - any hero standing\n// o - off needed\n// u - util needed\n// d - def needed\n// do - def & off needed\n// ud - util & def needed\n// ou - off & util needed\n// e - every hero needed\n*/\nfunction checkStanding(state, requiredHeros){\n\n    const offHeroStanding = ((state.player.offenseHeroStatus === 'standing' && !state.player.offenseHeroAilgments.includes('stun') ) ? true : false);\n    const defHeroStanding = ((state.player.defenseHeroStatus === 'standing' && !state.player.defenseHeroAilgments.includes('stun') ) ? true : false);\n    const utilHeroStanding = ((state.player.utilityHeroStatus === 'standing' && !state.player.utilityHeroAilgments.includes('stun') ) ? true : false);\n\n    switch (requiredHeros) {\n        case 'a':\n            return (offHeroStanding || defHeroStanding || utilHeroStanding);\n        case 'o':\n            return (offHeroStanding);\n        case 'u':\n            return (utilHeroStanding);\n        case 'd':\n            return (defHeroStanding);\n        case 'do':\n            return (defHeroStanding && offHeroStanding);\n        case 'du':\n            return (defHeroStanding && utilHeroStanding);\n        case 'ou':\n            return (offHeroStanding && utilHeroStanding);\n        case 'e':\n            return (offHeroStanding && defHeroStanding && utilHeroStanding);\n    }\n}\n\n// Animations START:\nfunction heroStrikeAnimation(heroElement){\n    let transitionTime = 500;\n    heroElement.animate([\n        {transform: 'translate(0px,0px)'},\n        {transform: 'translate(95px, 0px)'},\n        {transform: 'translate(155px, 0px)'},\n        {transform: 'translate(-1px, 0px)'},\n        {transform: 'translate(0, 0px)'}\n\n    ], {\n        duration: transitionTime,\n        iterations: 1\n    });\n}\n\nfunction damageFlash(bodyElement){\n    let transitionTime = 500;\n    bodyElement.animate([\n        {opacity: 1},\n        {opacity: 0},\n        {opacity: .75},\n        {opacity: .5},\n        {opacity: 0},\n        {opacity: .75},\n        {opacity: 1}\n\n    ], {\n        duration: transitionTime,\n        iterations: 1\n    });\n}\n\nfunction shakeHero(state, requiredHero, mage, koMage, sword, shield){\n\n    const offHeroStanding = ((state.player.offenseHeroStatus === 'standing' && !state.player.offenseHeroAilgments.includes('stun') ) ? true : false);\n    const defHeroStanding = ((state.player.defenseHeroStatus === 'standing' && !state.player.defenseHeroAilgments.includes('stun') ) ? true : false);\n    const utilHeroStanding = ((state.player.utilityHeroStatus === 'standing' && !state.player.utilityHeroAilgments.includes('stun') ) ? true : false);\n\n    switch (requiredHero) {\n        case 'o':\n            leftRightShake(sword);\n            break;\n        case 'u':\n            leftRightShake(mage);\n            leftRightShake(koMage);\n            break;\n        case 'd':\n            leftRightShake(shield);\n            break;\n        case 'do':\n            if (!defHeroStanding){\n                leftRightShake(shield);\n            }\n            if (!offHeroStanding){\n                leftRightShake(sword);\n            }\n            break;\n        case 'du':\n            if (!defHeroStanding){\n                leftRightShake(shield);\n            }\n            if (!utilHeroStanding){\n                leftRightShake(mage);\n                leftRightShake(koMage)\n            }\n            break;\n        case 'ou':\n            if (!offHeroStanding){\n                leftRightShake(sword);\n            }\n            if (!utilHeroStanding){\n                leftRightShake(mage);\n                leftRightShake(koMage)\n            }\n            break;\n        case 'e':\n            if (!offHeroStanding){\n                leftRightShake(sword);\n            }\n            if (!defHeroStanding){\n                leftRightShake(shield);\n            }\n            if (!utilHeroStanding){\n                leftRightShake(mage);\n                leftRightShake(koMage)\n            }\n            break;\n    }\n}\n\nfunction leftRightShake(element){\n    let transitionTime = 250;\n    element.animate([\n        {transform: 'translate(0px,0px)'},\n        {transform: 'translate(10px, 0px)'},\n        {transform: 'translate(-10px, 0px)'},\n        {transform: 'translate(0, 0px)'}\n    ], {\n        duration: transitionTime,\n        iterations: 1\n    });\n}\n\n// Animations END\nfunction moveHero(requiredHeros, mageBody, shieldBody, swordBody){\n    switch (requiredHeros) {\n        case 'a':\n            let choice = Math.floor(Math.random() * 3); \n            if (choice === 1) {\n                heroStrikeAnimation(swordBody);\n            }else if( choice === 2){\n                heroStrikeAnimation(shieldBody);\n            }else{\n                heroStrikeAnimation(mageBody);\n            }\n            break;\n        case 'o':\n            heroStrikeAnimation(swordBody);\n            break;\n        case 'u':\n            heroStrikeAnimation(mageBody);\n            break;\n        case 'd':\n            heroStrikeAnimation(shieldBody);\n            break;\n        case 'do':\n            heroStrikeAnimation(swordBody);\n            heroStrikeAnimation(shieldBody);\n            break;\n        case 'du':\n            heroStrikeAnimation(shieldBody);\n            heroStrikeAnimation(mageBody);\n            break;\n        case 'ou':\n            heroStrikeAnimation(swordBody);\n            heroStrikeAnimation(mageBody);\n            break;\n        case 'e':\n            heroStrikeAnimation(swordBody);\n            heroStrikeAnimation(shieldBody);\n            heroStrikeAnimation(mageBody);\n            break;\n    }\n}\n\n// Async Actions\nexport const applyCard = (cardIndex) => (dispatch, getState) => {\n    const state = getState();\n\n    const card = state.player.hand[cardIndex]\n    const energyCost = card.energy;\n\n    const requiredHero = card.requiredHero;\n    const standing = checkStanding(state, requiredHero);     \n    const foeDefense = state.monster.defense\n\n    let cardSounds = document.createElement('audio');\n\n    let mageBody = document.getElementById('mageBody');\n    let koMageBody = document.getElementById('koMageBody');\n    let shieldBody = document.getElementById('shieldBody');\n    let swordBody = document.getElementById('swordBody');\n\n    let energyText = document.getElementById('heroEnergyText');\n\n    let aCursedCard = card.type === 'curse' ? true : false;\n\n\n    if (energyCost <= state.player.energy && !aCursedCard) {\n        cardSounds.src = cardSuccess;\n        cardSounds.play();\n\n        if (standing){\n        \n            moveHero(card.requiredHero, mageBody, shieldBody, swordBody);\n            const newEnergy = state.player.energy - energyCost\n\n            for (let i = 0; i < card.action.target.length; i++) {\n\n                if (card.action.target[i] == \"foe\"){\n                    if (card.action.effect[i] == 'damage'){\n                        damageFlash(document.getElementById('monsterOuterContainer'))\n                        const trample = foeDefense - card.action.power[i];\n                        if (trample < 0) {\n                            const newFoeHealth = parseInt(state.monster.health) + parseInt(trample);\n                            dispatch(updateMonster({ health: newFoeHealth, defense: 0}));\n                            dispatch(logCombat({ origin: 'player', description: ('Player used: '+card.name+' dealing '+((-1)*(trample))+' damage.' ) }))\n                        }else{\n                            const newFoeDefense = trample;\n                            dispatch(updateMonster({ defense: newFoeDefense }));\n                            dispatch(logCombat({ origin: 'player', description: ('Player used: '+card.name+' dealing 0 damage.' ) }))\n                        }\n                        dispatch(updatePlayer({ energy: newEnergy }));\n                    }else if (card.action.effect[i] == 'stun'){\n                        state.monster.aligment.push('stun');\n                        state.monster.aligmentDuration.push(card.action.power[i]);\n                        dispatch(updatePlayer({ energy: newEnergy }))\n                    }else if (card.action.effect[i] == 'defenseTotal'){\n                        const trample = foeDefense - state.player.defense;\n                        if (trample < 0) {\n                            const newFoeHealth = parseInt(state.monster.health) + parseInt(trample);\n                            dispatch(updateMonster({ health: newFoeHealth, defense: 0}));\n                            dispatch(logCombat({ origin: 'player', description: ('Player used: '+card.name+' dealing '+((-1)*(trample))+' damage.' ) }))\n                        }else{\n                            const newFoeDefense = trample;\n                            dispatch(updateMonster({ defense: newFoeDefense }));\n                            dispatch(logCombat({ origin: 'player', description: ('Player used: '+card.name+' dealing 0 damage.' ) }))\n                        }\n                        dispatch(updatePlayer({ energy: newEnergy }))\n                    }\n                }else if (card.action.target[i] == \"player\"){\n                    if (card.action.effect[i]==\"heal\"){\n                        const newPlayerHealth = ( parseInt(state.player.health) + parseInt(card.action.power[i]) ) > parseInt(state.player.maxHealth) ? (parseInt(state.player.maxHealth)) : (parseInt(state.player.health) + parseInt(card.action.power[i]));\n                        dispatch(updatePlayer({ health: newPlayerHealth, energy: newEnergy }))\n                        dispatch(logCombat({ origin: 'player', description: ('Player used: '+card.name+' healing '+card.action.power[i]+' party health' ) }))\n                    }else if (card.action.effect[i] == \"mend\"){\n                        dispatch(removeDeckAfflictions()); \n                    } else if (card.action.effect[i] == \"defense\"){\n                        const defense = card.action.power[i]\n                        const newPlayerDefense = parseInt(state.player.defense) + parseInt(defense)\n                        dispatch(updatePlayer({ defense: newPlayerDefense, energy: newEnergy}))\n                        dispatch(logCombat({ origin: 'player', description: ('Player used: '+card.name+' gaining '+defense+' party defense' ) }))\n                    } else if (card.action.effect[i] == 'delayUtility'){\n                        state.player.utilityHeroAilgments.push('stun')\n                        state.player.utilityHeroAilgmentsDuration.push(card.action.power[i])\n                        dispatch(updatePlayer({ energy: newEnergy }))\n                    } else if (card.action.effect[i] == 'delayDefense'){\n                        state.player.defenseHeroAilgments.push('stun')\n                        state.player.defenseHeroAilgmentsDuration.push(card.action.power[i])\n                        dispatch(updatePlayer({ energy: newEnergy }))\n                    } else if (card.action.effect[i] == 'delayOffense'){\n                        state.player.offenseHeroAilgments.push('stun')\n                        state.player.offenseHeroAilgmentsDuration.push(card.action.power[i])\n                        dispatch(updatePlayer({ energy: newEnergy }))\n                    } else if (card.action.effect[i] == 'damage'){\n                        state.player.health -= card.action.power[i]\n                        dispatch(updatePlayer({ energy: newEnergy }))\n                    }\n\n                } else if (card.action.target[i] == \"affliction\"){\n                    dispatch(updatePlayer({ energy: newEnergy }))\n                } else{\n                    // something\n                }\n            }\n\n            dispatch(playIndexedCard(cardIndex))\n\n        }else{\n            cardSounds.src = cardError;\n            cardSounds.play();\n            shakeHero(state, requiredHero, mageBody, koMageBody, swordBody, shieldBody )\n        }\n    } else {\n        cardSounds.src = cardError;\n        cardSounds.play();\n        leftRightShake(energyText);\n    }\n\n\n}\n\n\n\n","\n//  CARD LAYOUT:\n// {\n//     name: '',\n//     requiredHero: 'u',\n//     art: '<art url>',\n//     type: 'attack',\n//     energy: 1,\n//     exhaust: false,\n//     action: {\n//         target: ['foe'],\n//         effect: ['damage'],\n//         power: [5]\n//     },\n//     description: \"5 Damage\",\n//     card_id: 0\n// },\n\n\n// requiredHero :\n\n// a - any hero standing\n// o - off needed\n// u - util needed\n// d - def needed\n// do - def & off needed\n// ud - util & def needed\n// ou - off & util needed\n// e - every hero needed\n\n\nexport const cards = [\n    {\n        name: 'Take the Offensive',\n        requiredHero: 'a',\n        art: '<art url>',\n        type: 'attack',\n        energy: 1,\n        exhaust: false,\n        action: {\n            target: ['foe'],\n            effect: ['damage'],\n            power: [7]\n        },\n        description: \"7 Damage\",\n    },\n    {   \n        name: 'Defensive Tactics',\n        requiredHero: 'a',\n        art: '<art url>',\n        type: 'defend',\n        energy: 1,\n        exhaust: false,\n        action: {\n            target: ['player'],\n            effect: ['defense'],\n            power: [5]\n        },\n        description: \"+5 Defense\",\n    },\n    {   \n        name: 'Heal',\n        requiredHero: 'u',\n        art: '<art url>',\n        type: 'skill',\n        energy: 1,\n        exhaust: true,\n        action: {\n            target: ['player'],\n            effect: ['heal'],\n            power: [8]\n        },\n        description: \"Heal +8 \\nVOID\",\n        cost: 100,\n    },\n    {\n        name: 'Trading Blows',\n        requiredHero: 'o',\n        art: '<art url>',\n        type: 'attack',\n        energy: 1,\n        exhaust: true,\n        action: {\n            target: ['foe', 'player'],\n            effect: ['damage', 'damage'],\n            power: [20, 7]\n        },\n        description: \"Deal 20 Damage, take 7 Damage \\nVOID\",\n        cost: 70,\n    },\n    {\n        name: 'Radiant Shield',\n        requiredHero: 'du',\n        art: '<art url>',\n        type: 'mix',\n        energy: 2,\n        exhaust: true,\n        action: {\n            target: ['player','player'],\n            effect: ['defense','heal'],\n            power: [10,5]\n        },\n        description: \"+10 Defense, +5 health \\nVOID\",\n        cost: 85,\n    },\n    {\n        name: 'Shield Bash',\n        requiredHero: 'd',\n        art: '<art url>',\n        type: 'defend',\n        energy: 1,\n        exhaust: false,\n        action: {\n            target: ['foe'],\n            effect: ['defenseTotal'],\n            power: [1]\n        },\n        description: \"Deal damage equal to your armor\",\n        cost: 80,\n    },\n    {\n        name: 'Blinding Ray',\n        requiredHero: 'u',\n        art: '<art url>',\n        type: 'utility',\n        energy: 2,\n        exhaust: true,\n        action: {\n            target: ['foe','player'],\n            effect: ['stun','delayUtility'],\n            power: [1,3]\n        },\n        description: \"Stun enemy for 1 turn & mage for 3 turns. \\nVOID\",\n        cost: 90,\n    },\n    {   \n        name: 'Mend',\n        requiredHero: 'u',\n        art: '<art url>',\n        type: 'skill',\n        energy: 2,\n        exhaust: false,\n        action: {\n            target: ['player'],\n            effect: ['mend'],\n            power: [0]\n        },\n        description: \"Remove all afflictions from deck / hand & discard piles. \\nVOID\",\n        cost: 100,\n    },\n];\n\n","import {cards} from './card-data'\n\nexport const heros = [\n\n    {\n        utilityHero: 'staff',\n        utilityHeroStatus: 'standing',\n        utilityHeroAilgments: [],\n        utilityHeroAilgmentsDuration: [],\n\n        offenseHero: 'sword',\n        offenseHeroStatus: 'standing',\n        offenseHeroAilgments: [],\n        offenseHeroAilgmentsDuration: [],\n\n        defenseHero: 'shield',\n        defenseHeroStatus: 'standing',\n        defenseHeroAilgments: [],\n        defenseHeroAilgmentsDuration: [],\n\n        health: 55,\n        maxHealth: 55,\n        energy: 3,\n        defense: 0,\n        deck: [0,0,0,0,1,1,1,1,1,2].map(id => cards[id]),\n\n        hand: [],\n        discard: [],\n        voidDeck: [],\n        gold: 20,\n        items: []\n    }\n    \n];\n\n\n\n\n\n\n\n\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport {cards} from \"../game-data/card-data\"\n\nexport const updateGameState = createAction('game_state/UPDATE_GAME_STATE');\nexport const resolutionCards = createAction('game_state/RESOLUTION_CARDS');\n\nconst initialState = {\n    screen: 'title',\n    defeat: false,\n    floor: 0,\n    playerScore: 0,\n    resolutionCards: [],\n    floorComplete: false\n}\n\nfunction getRandomRange(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n}\n\nconst reduceResolutionCards = ({ resolutionCards, ...rest}) => {\n    let newResolutionCards = [...resolutionCards, cards[getRandomRange(3,cards.length)], cards[getRandomRange(3,cards.length)] ]\n    return { ...rest, resolutionCards: newResolutionCards}\n}\n\n\nexport default handleActions({\n    [updateGameState]: (state, action) => ({ ...state, ...action.payload }),\n    [resolutionCards]: reduceResolutionCards,\n}, initialState);\n\n\nconst selectGameState = createSelector(\n    state => state.game_state,\n    game_state => game_state   \n)\n\nexport const useGameState = () => useSelector(selectGameState);\n\n\n","\nexport const gameState = {\n\n    screen: 'title',\n    defeat: false,\n    floor: 0,\n    playerScore: 0,\n\n}","import React from 'react';\nimport titleStyle from \"./title.module.scss\";\nimport { updateScreen } from '../../../ducks/screen';\nimport { useDispatch } from 'react-redux';\n\nimport { updatePlayer } from '../../../ducks/player'\nimport { heros } from '../../../game-data/heros-data'\n\nimport { updateGameState } from '../../../ducks/game_state';\nimport { gameState } from '../../../game-data/game-state';\n\n// full screen......\nimport { useFullScreenHandle } from \"react-full-screen\";\n\n\nconst TitleScreen = () => {\n\n    const dispatch = useDispatch();\n    // TODO: Move to New Game Screen\n    dispatch(updatePlayer(heros[0]))\n    dispatch(updateGameState(gameState))\n    // full screen....\n    const handle = useFullScreenHandle();\n\n    \n    return (\n            <div className={titleStyle.game} >\n\n                <div className={titleStyle.game} >\n                    <div className={titleStyle.title} >SLAY THE TOWER</div>\n                    <div className={titleStyle.menu} onClick={() => \n                            {\n                                dispatch(updateGameState({screen:'HeroSelection'}));\n                                dispatch(updateScreen('HeroSelection'));\n                            }\n                        }> NEW GAME </div>\n                    <div className={titleStyle.menu} onClick={() => \n                            {\n                                dispatch(updateGameState({screen:'Map'}))\n                                dispatch(updateScreen('Map'))\n                            }\n                        }> MAP </div>\n                </div>\n\n            </div>\n    );\n}\n\nexport default TitleScreen","import React from 'react';\nimport styles from './slime.module.scss'\n\n\nconst Slime = () => {\n\n    return(\n        <div className={styles.monsterContainer}>\n            <div className={styles.slime}>\n                <div className={styles.rightEye}></div>\n                <div className={styles.leftEye}></div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Slime;","import React from 'react';\nimport styles from './enforcer.module.scss'\n\n\nconst Enforcer = () => {\n\n    return(\n        <div className={styles.monsterContainer}>\n            <div className={styles.enforcer}>\n            <div className={styles.lHorn}></div>\n            <div className={styles.socket}>\n                <div className={styles.transEye}></div>\n            </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Enforcer;","import React from 'react';\nimport styles from './stone.module.scss'\n\n\nconst Stone = () => {\n\n    return(\n        <div className={styles.monsterContainer}>\n            <div className={styles.stone}>\n                <div className={styles.stoneEye}></div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Stone;","import React from 'react';\nimport styles from './nul.module.scss'\n\n\nconst Nul = () => {\n\n    return(\n        <div className={styles.monsterContainer}>\n            <div className={styles.nul}></div>\n            <div className={styles.midEye}></div>\n        </div>\n    )\n}\n\n\nexport default Nul;","import React from 'react';\nimport styles from './fire.module.scss'\n\n\nconst Fire = () => {\n\n    return(\n        <div className={styles.monsterContainer}>\n            \n            <div className={styles.spike}>\n                <div className={styles.spikeL}>\n                    <div className={styles.spikeL}></div>\n                </div>\n                <div className={styles.spikeR}>\n                    <div className={styles.spikeR}></div>\n                </div>\n                <div className={styles.triEye}></div>\n            </div>\n\n        </div>\n    )\n}\n\n\nexport default Fire;","import React from 'react';\nimport { useMonster } from '../../../../ducks/monster'\nimport styles from \"./foe-zone.module.scss\";\nimport { useEffect } from 'react';\n\nimport Slime from '../../../monsters/slime';\nimport Enforcer from '../../../monsters/enforcer';\nimport Stone from '../../../monsters/stone';\n\nimport Nul from '../../../monsters/nul';\nimport Fire from '../../../monsters/fire';\n\nimport Eye from '../../../monsters/eye';\n\nconst monsterList = {\n    Slime,\n    Enforcer,\n    Nul,\n    Fire,\n    Stone,\n    Eye\n}\n\nfunction updateFoeHealthBar(foeHealth, foeMax){\n    var x = document.getElementById(\"foeHealthBar\")\n    x.style.backgroundColor = \"red\"\n\n    if (foeHealth === foeMax){\n        x.style.height = \"2vh\"\n        x.style.width = \"20vw\"\n    }\n\n    if (foeHealth < foeMax){\n        const percentOfHealth = ( (foeHealth/foeMax)*100 )\n        const newBar = ((percentOfHealth/100)*20)\n        x.style.width = newBar + \"vw\"\n    }\n}\n\n// function updateFoeDefBar(defense){\n//     var x = document.getElementById(\"foeDefenseBar\")\n//     x.style.backgroundColor = \"lightblue\"\n//     x.style.opacity = \"1\"\n//     // x.style.position = \"absolute\"\n\n//     if (defense === 0){\n//         x.style.height = \"2vh\"\n//         x.style.width = \"0vw\"\n//     }else{\n//         x.style.width = ((defense/100)*20)+\"vw\"\n//     }\n// }\n\nfunction getTelegraph(monster){\n    \n    console.log(monster)\n\n    // const effect = monster.telegraphing.effect[0];\n    // console.log(\"effect:\",effect)\n    // const power = monster.telegraphing.power[0];\n    // console.log(\"power:\",power)\n\n    // if (effect === \"damage\"){\n    //     return ('🔪 '+power);\n    // }else if (effect === \"defense\"){\n    //     return ('🛡️ '+power);\n    // }else if (effect === \"fatigue\" || effect === \"bleed\" || effect === \"stun\"){\n    //     return '💢';\n    // }else {\n    //     return '💭';\n    // }\n\n}\n\nconst FoeZone = () => {\n\n    const { health: foeHealth } = useMonster();\n    const { total: foeMax } = useMonster();\n    // const { defense: foeDefense } = useMonster();\n    const monster = useMonster();\n    const Monster = monsterList[monster.name];\n    const telegraph = getTelegraph(monster)\n\n\n    useEffect(() => {\n        updateFoeHealthBar(foeHealth, foeMax)\n    }, [foeHealth]);\n\n    // useEffect(() => {\n    //     updateFoeDefBar(foeDefense)\n    // }, [foeDefense])\n    \n    return(\n        <div className={styles.foeZone}>\n\n            <div className = {styles.foe}>\n\n                <div className={styles.telegraph}> {telegraph} </div>\n                <div className={styles.foeTitle}> {monster.name} </div>\n                \n                <div id='monsterOuterContainer' className={styles.monsterContainer}>\n                    {\n                        monster.aligment.includes('stun') ?\n                        <div className={styles.stunCounter}> ⚡ {monster.aligmentDuration[monster.aligment.indexOf(\"stun\")]} </div> : <div className={styles.stunCounter}> </div>\n                    }\n                    <Monster/>\n                </div>\n\n                <div className={styles.healthBarContainer}>\n\n                    <div className = {styles.defenseEmoji}>🛡 \n                        <div className = {styles.defense}> \n                            {monster.defense} \n                        </div>\n                    </div>\n\n                    <div className={styles.healthEmoji}>❤️</div>\n                    <div className = {styles.foeHealthBorder}>\n                        <div className = {styles.foeHealthIndicator}> \n                            {monster.health} / {monster.total} \n                        </div>\n                        <div id=\"foeHealthBar\"> </div>\n                    </div>\n                </div>\n\n\n            </div>  \n        </div>        \n    );\n}\n\n\nexport default FoeZone;\n","import React from 'react';\nimport styles from './eye.module.scss'\n\n\nconst Eye = () => {\n\n    return(\n      <div className={styles.bossContainer}> \n        <div className={styles.eyeBody}>\n          <div className={styles.ring}></div>\n        </div>\n          <div className={styles.eye}>\n                 <div className={styles.eyeM}></div>   \n          </div>   \n      </div>\n    )\n}\n\n\nexport default Eye;","import React from 'react';\nimport styles from './hero.module.scss';\nimport { usePlayer } from '../../ducks/player';\n\n\nconst Hero = (props) => {\n\n    const player = usePlayer();\n    \n    if (props.heroType === 'mage'){\n\n        return(\n            <div id=\"mage\" className={styles.heroContainer}>\n            {\n                player.utilityHeroAilgments.includes('stun') ?\n                <div className={styles.stunCounter}>⚡ {player.utilityHeroAilgmentsDuration[player.utilityHeroAilgments.indexOf(\"stun\")]}</div>:<div></div>\n            }\n                {/* live body */}\n                <div id=\"mageBody\" className={styles.heroBody}>\n\n                    {/* status ailgments */}\n                    {\n                        player.utilityHeroAilgments.includes('stun') ? \n                        <div className={styles.stun}></div> : \n                        <div></div>\n                    }\n\n                    <div className={styles.headContainer}>\n                        <div className={styles.hood}>\n                        <div className={styles.headMageHero}></div>\n                        </div>\n                    </div>\n                    <div className={styles.chest}></div>\n                    <div className={styles.waist}></div>\n                    <div id='staff' className={styles.staff}>\n                        <div className={styles.heroHandRight}></div>\n                        <div className={styles.heroHandLeft}></div>\n                    </div>\n                </div>\n\n                {/* 'KO' body */}\n                <div id=\"koMageBody\" className={styles.koHeroBody}>\n                    <div className={styles.headContainer}>\n                        <div className={styles.koHood} >\n                        <div id=\"koMageHead\" className={styles.koHeadMageHero}></div>\n                        </div>\n                    </div>\n                    <div className={styles.koChest}></div>\n                    <div className={styles.waist}></div>\n                    <div id='koStaff' className={styles.koStaff}>\n                        <div className={styles.heroHandRight}></div>\n                        <div className={styles.heroHandLeft}></div>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }else if (props.heroType === 'sword'){\n        return(\n            <div id='sword' className={styles.heroContainer}> \n            {\n                player.offenseHeroAilgments.includes('stun') ?\n                <div className={styles.stunCounter}>⚡ {player.offenseHeroAilgmentsDuration[player.offenseHeroAilgments.indexOf(\"stun\")]}</div>:<div></div>\n            }\n                <div id=\"swordBody\" className={styles.heroBody}>\n\n                    {/* status ailgments */}\n                    {\n                        player.offenseHeroAilgments.includes('stun') ? \n                        <div className={styles.stun}></div> : <div></div>\n                    }\n\n                    <div className={styles.headContainer}>\n                        <div className={styles.hood}>\n                        <div className={styles.headSwordHero}></div>\n                        </div>\n                    </div>\n\n                    <div className={styles.chest}></div>\n                    <div className={styles.waist}></div>\n                    \n                    <div id='swordContainer' className={styles.swordContainer}>\n                        <div id='swordHilt' className={styles.swordHilt}> \n                        <div id='gripedHands' className={styles.grippedHands}></div>\n                        <div id='swordTip' className={styles.swordTip}> \n                            <div id='swordPattern' className={styles.swordPattern}> \n                            </div>\n                        </div>\n                        </div>\n                    </div>\n                \n                </div>\n            </div>\n        )\n    }else{\n        return(\n            <div id='shield' className={styles.heroContainer}> \n            {\n                player.defenseHeroAilgments.includes('stun') ?\n                <div className={styles.stunCounter}>⚡ {player.defenseHeroAilgmentsDuration[player.defenseHeroAilgments.indexOf(\"stun\")]}</div>:<div></div>\n            }\n                <div id=\"shieldBody\" className={styles.heroBody}>\n\n                    {/* status ailgments */}\n                    {\n                        player.defenseHeroAilgments.includes('stun') ? \n                        <div className={styles.stun}></div> : <div></div>\n                    }\n            \n                    <div className={styles.headContainer}>\n                        <div className={styles.hood}>\n                        <div className={styles.headShieldHero}></div>\n                        </div>\n                    </div>\n                \n                    <div className={styles.chest}></div>\n                    <div className={styles.waist}></div>\n                    \n                    <div id='shield' className={styles.shield}> \n                    </div>\n                \n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Hero;\n","import React from 'react';\nimport styles from \"./hero-zone.module.scss\";\n\nimport Hero from \"../../../hero\";\n\n\nconst HeroZone = () => {\n\n    return(\n        <div className={styles.heroColumn}>\n\n            <Hero \n                heroType={'mage'} \n                status={'normal'}\n            />\n\n            <Hero \n                heroType={'sword'} \n                status={'normal'}\n            />\n\n            <Hero \n                heroType={'shield'} \n                status={'normal'}\n            />\n\n        </div>\n    );\n}\n\n\nexport default HeroZone;\n","import React from 'react';\nimport styles from './combat-zone.module.scss'\n\nimport FoeZone from './foe-zone';\nimport HeroZone from './hero-zone';\n\n\nconst CombatZone = () => {\n\n    return (\n        <div className = {styles.combatZone}>\n\n            <div className = {styles.heroContainer}>\n                <HeroZone />\n            </div>\n\n            <div className = {styles.foeContainer}>\n                <FoeZone />\n            </div>\n            \n        </div>\n    );\n}\n\n\nexport default CombatZone;\n","import React from 'react';\nimport styles from './card.module.scss'\n\n\nconst Card = (props) => {\n    return(\n        <div>\n            <div className = {styles.cardFace}>\n                <div className = {styles.titleSection}>\n                    <div className = {styles.title}> \n                        {props.cardData.name} \n                    </div> \n\n                    {!props.combat && \n                        <div className={styles.cost}>\n                            G: {props.cardData.cost}\n                        </div> \n                    }\n                </div>\n                \n                <div className={styles.cardArt}>\n                    {props.cardData.art}\n                </div>\n\n                <div className={styles.cardDescription}>\n                    {props.cardData.description}\n                </div>\n\n                <div className = {styles.costRow}>\n                    <div className = {styles.energy}>\n                        ⚡ {props.cardData.energy}\n                    </div>\n\n                    <div className = {styles.requiredHero}>\n                        {requiredHeroIcon(props.cardData.requiredHero)}\n                    </div>\n                </div>\n            </div>\n        </div>        \n    )\n}\n\n\n/* requiredHero :\n// a - any hero standing: white dot\n// o - off needed: red dot\n// u - util needed: blue dot\n// d - def needed: green dot\n// do - def & off needed: green & blue dot\n// ud - util & def needed: blue & etc...\n// ou - off & util needed: ...\n// e - every hero needed: red, blue & green\n*/\n\nfunction requiredHeroIcon(reqHeros){\n    switch (reqHeros) {\n        case 'a':\n            return( <div className={styles.whiteDot}/> )\n        case 'o':\n            return( <div className={styles.redDot}/> )\n        case 'u':\n            return( <div className={styles.blueDot}/> )\n        case 'd':\n            return( <div className={styles.greenDot}/> )\n        case 'do':\n            return( \n                <> \n                    <div className={styles.greenDot}/>\n                    <div className={styles.rednDot}/>\n                </>\n            )\n        case 'du':\n            return(\n                <> \n                    <div className={styles.greenDot}/>\n                    <div className={styles.blueDot}/> \n                </>\n            )\n        case 'ou':\n            return( \n                <> \n                    <div className={styles.redDot}/>\n                    <div className={styles.blueDot}/>\n                </>\n            )\n        case 'e':\n            return( <div className={styles.blackDot}/> )\n        default:\n            return( <div className={styles.whiteDot}/> )\n    }\n}\n\nexport default Card;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport styles from './hand.module.scss'\nimport cardStyle from '../../card/card.module.scss'\n\nimport { usePlayer, applyCard } from '../../../ducks/player';\nimport Card from '../../card';\n\n// function isMobile() {\n//     var check = false;\n//     (function(a){\n//       if( /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) \n//         check = true;\n//     })(navigator.userAgent||navigator.vendor||window.opera);\n//     return check;\n// }\n\n\n\nconst Cards = () =>{\n    \n    const player = usePlayer();\n    const dispatch = useDispatch();\n    const onCardClick = (index) =>  {\n        dispatch(applyCard(index))\n    };\n\n    return(\n        <div className={styles.handContainer}>\n            {\n                player.hand.map( (cardData, index) =>\n                    <button key={index} className={cardStyle.cardButton} onClick={ () => onCardClick(index) }>\n                        <div className={cardStyle.card}>\n                            <Card \n                                cardData={cardData} \n                                combat={true}\n                            />\n                        </div>\n                    </button>                \n                )\n            }                \n        </div>\n    )\n}\n\nconst Hand = () => {\n\n    return (\n        <div className = {styles.activeZone}>\n            <div className = {styles.hand}>\n                <Cards /> \n            </div>\n        </div>\n    );\n}\n\n\nexport default Hand;\n\n","import React from 'react';\nimport styles from './draw-zone.module.scss'\nimport { usePlayer } from '../../../ducks/player';\n\n\nconst DrawZone = () =>{\n    const player = usePlayer();\n\n    return(\n        <div className={styles.drawZone}>\n            \n            <div id='heroEnergyText' className={styles.energy}>\n                <span style={{fontSize: '18px'}}>⚡</span> ENERGY: {player.energy}\n            </div>\n            \n            <div className={styles.deck}>\n                DECK: {player.deck.length}\n            \n            </div>\n        </div>\n    );\n}\n\n\nexport default DrawZone;\n","import React from 'react';\nimport styles from './discard-zone.module.scss'\n\nimport { usePlayer } from '../../../ducks/player';\nimport { useDispatch } from 'react-redux'\n\nimport { endTurn } from '../../../ducks/combat'\n\n\nconst DiscardZone = () =>{\n    const player = usePlayer();\n    const dispatch = useDispatch();\n    \n    const onBttnClick = () =>  dispatch(endTurn());\n\n    return(\n        <div className = {styles.discardZone}>\n\n            <div className={styles.void}> \n                VOID: {player.voidDeck.length}\n            </div>\n\n            <div className={styles.discard}>\n                DISCARD: {player.discard.length}\n            </div>\n\n            <button id=\"turnBttn\" onClick={onBttnClick} className = {styles.devButton}>\n                [ END TURN ]\n            </button>\n        \n        </div>\n    );\n}\n\n\nexport default DiscardZone;\n","import React from 'react';\nimport styles from './combat-log.module.scss'\n// import { useDispatch } from 'react-redux'\nimport { useCombat } from '../../../ducks/combat';\n\n\nconst CombatLog = () => {\n\n    const combat = useCombat();\n\n    return(\n        <div id='combatMsgs' className={styles.combatLog}>\n            <div className={styles.combatLogHeader}>\n                Combat Log\n            </div>\n            <div className={styles.scrollableLog}>\n                {combat.combatLog.map( (log, index) => \n                    <div key={index}> \n                        {\n                            log.origin === 'player' ? \n                                <>\n                                    <div className={styles.heroLog}>\n                                        {log.description}\n                                    </div>\n                                </>\n                                :\n                                <>\n                                    <div className={styles.monsterLog}>\n                                        {log.description}\n                                    </div>\n                                </>\n                        }\n                    </div>\n                )}\n            </div>\n\n        </div>\n    );\n}\n\n\nexport default CombatLog;\n","import React from 'react';\nimport styles from './player-status.module.scss'\n\nimport { updatePlayer, usePlayer } from '../../../ducks/player';\nimport { useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\n\n\nfunction updateHeroHealthBar(health, maxHealth){\n    var x = document.getElementById(\"patyHealthBar\")\n    x.style.backgroundColor = \"red\"\n\n    if (health === maxHealth){\n        x.style.height = \"2vh\"\n        x.style.width = \"20vw\"\n    }else{\n        const percentOfHealth = ( (health/maxHealth)*100 )\n        const newBar = ((percentOfHealth/100)*20)\n        x.style.width = newBar + \"vw\"\n    }\n}\n\nconst PlayerStatus = () =>{\n\n    const player = usePlayer();\n    const { health: heroHealth } = usePlayer();\n    const { maxHealth: heroMaxHealth } = usePlayer();\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        updateHeroHealthBar(heroHealth, heroMaxHealth)\n    }, [heroHealth]);\n\n    useEffect(() => {\n        let count = 0;\n        for(var i = 0; i < player.deck.length; ++i){\n            if(player.deck[i].type == 'curse')\n                count++;\n        }\n\n        for (let i = 0; i < player.discard.length; i++) {\n            if(player.discard[i].type == 'curse')\n                count++;            \n        }\n\n        for (let i = 0; i < player.hand.length; i++) {\n            if(player.hand[i].type == 'curse')\n                count++;            \n        }\n\n        dispatch( updatePlayer( { curseCount: count } ) )\n    }, [player.deck])\n    \n    return(\n        <div className = {styles.playerStatusContainer}>\n            <div className = {styles.playerGold}>\n                G: {player.gold}\n            </div>\n            \n            <div className = {styles.playerDefense}>\n                🛡 {player.defense}\n            </div>\n\n            <div className={styles.healthBarContainer}>\n                <div className={styles.healthEmoji}>❤️</div>\n                <div className = {styles.healthBorder}>\n                    <div className = {styles.healthIndicator}> \n                        {player.health} / {player.maxHealth} \n                    </div>\n                    <div id=\"patyHealthBar\"> </div>\n                </div>\n            </div>\n\n            {\n                ( player.curseCount > 0 ) ? <div className={styles.curse}> Curses : {player.curseCount}</div> : <div></div>\n            }\n\n            \n        </div>\n    );\n}\n\n\nexport default PlayerStatus;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./combat.module.scss\";\n\nimport { usePlayer, updatePlayer } from '../../../ducks/player';\n\nimport CombatZone from '../../combat-components/combat-zone';\n\nimport { updateScreen } from '../../../ducks/screen';\n\nimport Hand from '../../combat-components/hand';\nimport DrawZone from '../../combat-components/draw-zone';\nimport DiscardZone from '../../combat-components/discard-zone';\nimport CombatLog from '../../combat-components/combat-log';\n\nimport { useMonster } from '../../../ducks/monster';\nimport { updateCombat } from '../../../ducks/combat';\n\nimport { updateGameState, resolutionCards } from '../../../ducks/game_state';\n\nimport PartyStatus from '../../combat-components/player-status';\n\n\nconst CombatScreen = () => {\n    const { gold: loot } = useMonster();\n    const { health: foeHealth } = useMonster();\n    const player = usePlayer();\n\n    const dispatch = useDispatch();\n    \n    useEffect(()=>{\n        dispatch( updatePlayer({ energy: 3, defense:0 }) );\n    }, [])\n    \n    useEffect(() => {\n        // This block of code only executes when foeHealth changes\n        if (foeHealth <= 0) {\n            dispatch( updateGameState({loot: loot, playerGold: player.gold }) )            \n            dispatch( resolutionCards() );\n            dispatch( updateCombat({\n                combatLog : \n                    [{\n                        origin: 'player',\n                        description: 'Start of combat'\n                    }]\n            }))\n \n            dispatch( updateGameState({screen:'Resolution'}));\n            dispatch( updateScreen('Resolution') ) \n\n        }\n    }, [foeHealth]);\n\n    useEffect(() => {\n        if (player.health <= 0) {\n            dispatch( updateGameState({defeat:true}) )\n            dispatch( resolutionCards() );\n\n            dispatch( updateCombat({\n                combatLog : \n                    [{\n                        origin: 'player',\n                        description: 'Start of combat'\n                    }]\n            }))\n\n            dispatch( updateGameState({screen:'Resolution'}));\n            dispatch( updateScreen('Resolution') ) \n        }\n    }, [player.health]);\n\n    return (\n    <div className={styles.game}>\n\n        <PartyStatus />\n\n        <CombatZone />\n\n        <CombatLog />\n\n        {/* this is the overlay for the players hand... */}\n        <div id='playerOverlay'></div>\n        \n        <Hand />\n        \n        <div className={styles.playerZone}> \n            <DrawZone />\n            <DiscardZone />\n        </div>\n            \n    </div>\n    );\n    \n}\n\n\nexport default CombatScreen;\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nexport const updateMap = createAction('map/UPDATE_MAP');\n\n\n// maybe add some trackers for trials, bonfires, elites & shops. To somehow limit or increase it?\n\nconst initialState = {\n    fieldEvent: \"event name\",\n    fieldPaths: 0,\n    fieldPathEvents: [],\n    count: 0\n}\n\n\nexport default handleActions({\n    [updateMap]: (state, action) => ({ ...state, ...action.payload }),\n}, initialState);\n\n\nconst selectMap = createSelector(\n    state => state.map,\n    map => map   \n)\n\nexport const useMap = () => useSelector(selectMap);\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./resolution.module.scss\";\nimport { useGameState, updateGameState } from '../../../ducks/game_state'\n\nimport { resetDeck, updatePlayer, addCard, shuffleDeck, removeAilgments, removeDeckAfflictions } from '../../../ducks/player';\n\nimport { updateScreen } from '../../../ducks/screen';\n\nimport { updateMap } from '../../../ducks/map';\n\nimport cardStyle from '../../card/card.module.scss';\nimport Card from '../../card';\n\n\nfunction rollDice(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; \n}\n\nfunction genPathLength(){\n    let length = rollDice(1,4)\n    let onesOdds = rollDice(0,50)\n  \n    if (onesOdds == 0 && length == 1){\n      return 1\n    }\n    if (onesOdds < 1 && length == 3){\n      return 4\n    }\n    return length\n}\n  \nfunction genEvent( roll, fightOdds, elieteOdds, bonfireOdds, trialOdds, shopOdds){\n    if ( roll < fightOdds){\n      return {  fieldEvent: '⚔️' }\n    }else if ( roll < elieteOdds ){\n      return {  fieldEvent: '💢' }\n    }else if ( roll < bonfireOdds ){\n      return {  fieldEvent: '🔥' }\n    }else if ( roll < trialOdds ){\n      return {  fieldEvent: '❗' }\n    }else if ( roll < shopOdds){\n      return {  fieldEvent: '🕋' }\n    }else{\n      return {  fieldEvent: '⚔️' }\n    }\n}\n  \nfunction genPath( pathLength, setEvent ){\n    if ( setEvent ){\n        \n        let events = []\n        for (let e = 0; e < pathLength; e++) {\n        let roll = rollDice(0,101);\n        events.push(genEvent(roll, 70, 85, 100, 0, 0))\n        }\n\n        return({\n        fieldEvent: setEvent,\n        fieldPaths: pathLength,\n        fieldPathEvents: events\n        })\n\n    }else{\n\n        // generate paths\n        let events = []\n        for (let e = 0; e < pathLength; e++) {\n        let roll = rollDice(0,101);\n        events.push(genEvent(roll, 70, 90, 100))\n        }\n\n        // generate field of said paths\n        let roll = rollDice(0,101);\n        return({\n        fieldEvent: genEvent(roll, 70, 80, 87, 95, 100).fieldEvent,\n        fieldPaths: pathLength,\n        fieldPathEvents: events\n        })\n\n    }\n}\n  \nfunction fillPaths( numberOfPaths, setEvent) {\nconst paths = []\n\nfor (let p = 0; p < numberOfPaths; p++) {\n    // Gen a new number of paths per field choice\n    paths.push( genPath( genPathLength(), setEvent ))\n}\n\nreturn paths\n}\n\nfunction startingField(startingPaths){\n    let newField = {\n      fieldEvent: 'START',\n      fieldPaths: startingPaths,\n      fieldPathEvents: fillPaths(startingPaths, '⚔️'),\n      count: 0\n    }\n    return newField\n}\n\n\nconst ResolutionScreen = () => {\n    \n    const dispatch = useDispatch();\n    const gameState = useGameState();   \n    \n    let header = ''\n    let body = ''\n    let bttn = ''\n\n    dispatch(resetDeck());    \n    dispatch(shuffleDeck());\n    dispatch(removeAilgments());\n    dispatch(removeDeckAfflictions()); \n    \n    const onCardClick = (card) =>  {\n\n        dispatch( addCard(card) );   \n        dispatch( updateGameState({resolutionCards:[]}) );\n        dispatch( updateGameState({screen:'Map'}) );\n        dispatch( updateScreen('Map') );\n    };\n\n    const onSkip = () => {\n\n        dispatch( updateGameState({resolutionCards:[]}) );\n        dispatch( updateGameState({screen:'Map'}) );\n        dispatch( updateScreen('Map') );\n    }\n\n    const gameComplete = () => {\n        dispatch( updateGameState({resolutionCards:[]}) );\n        dispatch( updateGameState({screen:'Title'}) );\n        // dispatch( updateMap(startingField(3)));\n        // dispatch( updateScreen({count:0}));\n        dispatch( updateScreen('Title') );\n    }\n\n    if ( gameState.floorComplete ) {\n\n\n\n        return (\n            <div className={styles.gameScreen}>\n                <div className={styles.menuContainer}>\n        \n                    <div className={styles.menuHeader}>\n                        Game Complete\n                    </div>\n        \n                    <div className={styles.menuBody}>\n                        <div className={styles.bodyText}>\n                            Thanks for playing!\n                        </div>\n\n                    </div>\n\n                    <div className={styles.menuFooter}>\n                        <div className={styles.menuOption} onClick={() => gameComplete() }>\n                            Return To Title Screen\n                        </div>\n                    </div>\n        \n                </div>\n            </div>\n        );\n    } else if ( !gameState.defeat ) {\n        header = 'VICTORY'\n        body = `You found G: +` + gameState.loot + `\\n`\n        bttn = 'Skip'\n        dispatch(updatePlayer({gold:gameState.playerGold + gameState.loot}))\n\n        return (\n            <div className={styles.gameScreen}>\n                <div className={styles.menuContainer}>\n        \n                    <div className={styles.menuHeader}>\n                        {header}\n                    </div>\n        \n                    <div className={styles.menuBody}>\n                        <div className={styles.bodyText}>{body}</div>\n\n                        <div className={styles.rewardText}> Choose A Card: </div>\n\n                        <div className={styles.cardContainer}>\n                            {gameState.resolutionCards.map( (card, index) =>\n                                <button key={index} className={cardStyle.cardButton} onClick={ () => onCardClick(card) }>\n                                    <div className={cardStyle.card}>\n                                        <Card \n                                            cardData={card} \n                                            combat={true}\n                                        />\n                                    </div>\n                                </button>              \n                            )}\n                        </div>\n\n                    </div>\n\n        \n                    <div className={styles.menuFooter}>\n                        <div className={styles.menuOption} onClick={() => onSkip() }>\n                            {bttn}\n                        </div>\n                    </div>\n        \n                </div>\n            </div>\n        );\n\n    } else {\n        header = 'GAME OVER'\n        body = ''\n        bttn = 'Return to title screen'\n        \n        return (\n            <div className={styles.gameScreen}>\n                <div className={styles.menuContainer}>\n\n                    <div className={styles.menuHeader}>\n                        {header}\n                    </div>\n\n                    <div className={styles.menuBody}>\n                        {body}\n                    </div>\n\n                    <div className={styles.menuFooter}>\n                        <div className={styles.menuOption} onClick={() => \n                                {\n                                    dispatch(updateMap(startingField(3)));\n                                    dispatch(updateScreen({count:0}));\n\n                                    dispatch(updateGameState({screen:'Title'}));\n                                    dispatch(updateScreen('Title'));\n                                }\n                            }>\n                            {bttn}\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n    \n}\n\n\nexport default ResolutionScreen;\n\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./hero-selection.module.scss\";\n\n\nimport { gameState } from '../../../game-data/game-state';\nimport { updateGameState } from '../../../ducks/game_state';\nimport { updatePlayer } from '../../../ducks/player'\nimport { heros } from '../../../game-data/heros-data'\nimport { updateScreen } from '../../../ducks/screen';\n\n// import { HeroDetail } from './hero-detail';\n\n\n// in this screen player chooses hero weapon / deck\n\nconst HeroSelection = () => {\n\n    const dispatch = useDispatch();\n\n    const onCardClick = (heroType) => {\n        dispatch(updatePlayer(heros[0]))\n        dispatch(updateGameState(gameState))\n        dispatch(updateGameState({screen:'Map'}));\n        dispatch(updateScreen('Map'))\n        // will be changed to map screen.\n    }\n\n    return (\n        <div className={styles.gameScreen}>\n            <div className={styles.title} >CHOOSE YOUR HERO</div>\n\n            <div className={styles.menuContainer}>\n\n                <div onClick={ () => onCardClick('sword') } className={styles.heroContainer}>\n                    <div className={styles.heroTitle}> sword </div>\n                    <div className={styles.heroImg}></div>\n                </div>\n\n                {/* <div onClick={() => choice('staff')} className={styles.heroContainer}>\n                    <div className={styles.heroTitle}> staff </div>\n                    <div className={styles.heroImg}></div>\n                </div> */}\n            </div>\n        </div>\n    );\n}\n\n\nexport default HeroSelection;\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nimport {cards} from \"../game-data/card-data\"\nimport { rest } from \"lodash\";\n\nexport const updateShop = createAction('shop/UPDATE_SHOP');\nexport const setupShop = createAction('shop/SETUP_SHOP');\nexport const boughtCard = createAction('shop/BOUGHT_CARD');\n\nconst initialState = {\n    shopCards: []\n}\n\nfunction rollDice(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; \n}\n\nconst reduceSetUpShop = ({ shopCards, ...rest}) => {\n    let newShopCards = [...shopCards, cards[rollDice(3,cards.length)], cards[rollDice(3,cards.length)]]\n    return { ...rest, shopCards: newShopCards}\n}\n\nconst reduceBoughtCard = ({shopCards}, {payload}) => {\n    shopCards.splice(payload, 1)\n    return {...rest, shopCards: shopCards}\n}\n\nexport default handleActions({\n    [updateShop]: (state, action) => ({ ...state, ...action.payload }), \n    [setupShop]: reduceSetUpShop,\n    [boughtCard]: reduceBoughtCard,\n}, initialState);\n\n\nconst selectShop = createSelector(\n    state => state.shop,\n    shop => shop   \n)\n\nexport const useShop = () => useSelector(selectShop);\n\n\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./map.module.scss\";\n\n// import { useMusic, load, loop, mute, setTrack} from '../../../ducks/music';\n// import { track_list } from '../../../game-data/tracks';\n\nimport { useMap, updateMap } from '../../../ducks/map';\nimport { updateScreen } from '../../../ducks/screen';\nimport { updateGameState } from '../../../ducks/game_state';\n\n// For Combat:\nimport { usePlayer, drawHand, shuffleDeck, resetDeck } from '../../../ducks/player';\nimport { spawnMonster } from '../../../ducks/monster';\nimport { setupShop } from '../../../ducks/shop';\n\nimport PartyStatus from '../../combat-components/player-status';\n\nimport menuSound from '../../../sound_clips/path_game_sound.mp3'\n\n\nfunction eventHandler(event, dispatcher){\n  switch (event) {\n    case '👹':\n      // for now... reset map after boss.\n      dispatcher(spawnMonster('Eye'));\n\n      dispatcher(resetDeck());\n      dispatcher(shuffleDeck());\n      dispatcher(drawHand());\n\n      \n      // dispatcher( updateGameState({floorComplete: true}) );\n\n      dispatcher( updateGameState({screen:'Combat'}) );\n      dispatcher( updateScreen('Combat') );\n\n      break;\n    case '💢':\n      // TODO: make a elite fight ... so dispatch a elite...\n      if ( rollDice(0,2) > 0 ){\n        dispatcher(spawnMonster('Fire'));\n      }else{\n        dispatcher(spawnMonster('Stone'));\n      }\n\n      dispatcher(resetDeck());\n      dispatcher(shuffleDeck());\n      dispatcher(drawHand());\n      // Load fight before screen update?\n      dispatcher(updateGameState({screen:'Combat'}));\n      dispatcher(updateScreen('Combat'));\n      break;\n    case '🔥':\n      // TODO: set up rest, training & mending \n      dispatcher(updateGameState({screen:'Bonfire'}));\n      dispatcher(updateScreen('Bonfire'));\n      break;\n    case '❗':\n      // TODO: set up a few trials for demo\n      dispatcher(updateGameState({screen:'Trial'}));\n      dispatcher(updateScreen('Trial'));\n      break;\n    case '🕋':\n      dispatcher(updateGameState({screen:'Shop'}));\n      dispatcher(setupShop())\n      dispatcher(updateScreen('Shop'));\n      break;\n    case '⚔️':\n      let diceRoll = rollDice(0,3)\n      switch (diceRoll) {\n        case 0:\n          dispatcher(spawnMonster('Slime'));\n          break;\n        case 1:\n          dispatcher(spawnMonster('Nul'));\n          break;\n        case 2:\n          dispatcher(spawnMonster('Enforcer'));\n          break;\n      }\n      dispatcher(resetDeck());\n      dispatcher(shuffleDeck());\n      dispatcher(drawHand());\n      // Load fight before screen update?\n      dispatcher(updateGameState({screen:'Combat'}));\n      dispatcher(updateScreen('Combat'));\n      break;\n\n    default:\n      break;\n  }\n}\n\nfunction rollDice(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; \n}\n\nfunction genPathLength(){\n  let length = rollDice(1,4)\n  let onesOdds = rollDice(0,50)\n\n  if (onesOdds == 0 && length == 1){\n    return 1\n  }\n  if (onesOdds < 1 && length == 3){\n    return 4\n  }\n  return length\n}\n\nfunction genEvent( roll, fightOdds, elieteOdds, bonfireOdds, trialOdds, shopOdds){\n  if ( roll < fightOdds){\n    return {  fieldEvent: '⚔️' }\n  }else if ( roll < elieteOdds ){\n    return {  fieldEvent: '💢' }\n  }else if ( roll < bonfireOdds ){\n    return {  fieldEvent: '🔥' }\n  }else if ( roll < trialOdds ){\n    return {  fieldEvent: '❗' }\n  }else if ( roll < shopOdds){\n    return {  fieldEvent: '🕋' }\n  }else{\n    return {  fieldEvent: '⚔️' }\n  }\n}\n\nfunction genPath( pathLength, setEvent ){\n\n  if ( setEvent ){\n    \n    let events = []\n    for (let e = 0; e < pathLength; e++) {\n      let roll = rollDice(0,101);\n      events.push(genEvent(roll, 70, 85, 100, 0, 0))\n    }\n\n    return({\n      fieldEvent: setEvent,\n      fieldPaths: pathLength,\n      fieldPathEvents: events\n    })\n\n  }else{\n\n    // generate paths\n    let events = []\n    for (let e = 0; e < pathLength; e++) {\n      let roll = rollDice(0,101);\n      events.push(genEvent(roll, 70, 90, 100))\n    }\n\n    // generate field of said paths\n    let roll = rollDice(0,101);\n    return({\n      fieldEvent: genEvent(roll, 70, 80, 87, 95, 100).fieldEvent,\n      fieldPaths: pathLength,\n      fieldPathEvents: events\n    })\n\n  }\n}\n\nfunction fillPaths( numberOfPaths, setEvent) {\n  const paths = []\n\n  for (let p = 0; p < numberOfPaths; p++) {\n    // Gen a new number of paths per field choice\n    paths.push( genPath( genPathLength(), setEvent ))\n  }\n\n  return paths\n}\n\nfunction startingField(startingPaths){\n  let newField = {\n    fieldEvent: 'START',\n    fieldPaths: startingPaths,\n    fieldPathEvents: fillPaths(startingPaths, '⚔️'),\n    count: 0\n  }\n  return newField\n}\n\nfunction createField( fieldEvents, fieldCount ){\n  let pathLength = 0\n  let fieldBatch = []\n\n  if ( fieldCount === 7){\n    for (let i = 0; i < fieldEvents.length; i++) {\n      fieldBatch.push({\n        fieldEvent: fieldEvents[i].fieldEvent,\n        fieldPaths: 0,\n        fieldPathEvents: [{\n          fieldEvent: \"👹\"\n        }]\n      })\n    }\n  }else{\n    for (let i = 0; i < fieldEvents.length; i++) {\n      pathLength = genPathLength()\n      fieldBatch.push({\n        fieldEvent: fieldEvents[i].fieldEvent,\n        fieldPaths: pathLength,\n        fieldPathEvents: fillPaths(pathLength)\n      })\n    }\n  }\n\n  return fieldBatch\n}\n\nconst MapScreen = () => {\n\n  const dispatch = useDispatch();\n  const currentField = useMap();\n  const UsePlayer = usePlayer();\n\n\n  useEffect(() => {\n    if (currentField.count === 0){\n      dispatch(updateMap(startingField(3)))\n    }\n  }, []);\n  \n\n  const onPathSelection = (field) => {\n    let newField = {}\n\n    // check if the next event is going to be floor boss:\n    let isBossNext = field.fieldPathEvents.find( fields => fields.fieldEvent === \"👹\" )\n    \n    if ( isBossNext ){\n      newField = {\n        fieldEvent: field.fieldEvent,\n        fieldPaths: 1,\n        fieldPathEvents: [{\n            fieldEvent: \"👹\",\n            fieldPaths: 0,\n          fieldPathEvents: []\n        }],\n        count: currentField.count + 1\n      }\n    }else{\n      newField = {\n        fieldEvent: field.fieldEvent,\n        fieldPaths: field.fieldPathEvents.length,\n        fieldPathEvents: createField(field.fieldPathEvents, currentField.count),\n        count: currentField.count + 1\n      }\n    }\n    // update map...\n    dispatch(updateMap(newField))\n    eventHandler(newField.fieldEvent, dispatch)\n  }\n\n\n  function playMenuSound(){\n    let sounds = document.createElement('audio');\n    sounds.src = menuSound;\n    sounds.volume = 0.1;\n    sounds.play();\n  }\n\n\n  return (\n    <div className={styles.screenContainer}>\n      <div className={styles.screen}>\n        <PartyStatus />\n\n        <div className={styles.screenBody}>\n\n          <div className={styles.mapContainer}>\n            <h1>Choose a path:</h1>\n\n            <div style={{display:'flex', flexDirection:'row',}}>\n              {currentField.fieldPathEvents.map( (field, index) =>\n                <button key={index} onMouseEnter={()=>playMenuSound()}  className={styles.pathButton} onClick={() => onPathSelection(field)}>\n                    <h2>{field.fieldEvent}</h2>\n                    {field.fieldPathEvents.map( (e, index) => \n                      <div key={index} style={{display:'flex', margin:'2px', opacity:'.5'}}>\n                        {e.fieldEvent}\n                      </div>\n                    )}\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className={styles.legendContainer}>\n            <div className={styles.legendTitle}>LEGEND:</div>\n            <div className={styles.legendItem}> FIGHT : ⚔️</div>\n            <div className={styles.legendItem}> ELITE : 💢</div>\n            <div className={styles.legendItem}> BONFIRE : 🔥</div>\n            <div className={styles.legendItem}> TRIAL : ❗</div>\n            <div className={styles.legendItem}> SHOP : 🕋</div>\n            <div className={styles.legendItem}> BOSS : 👹</div>\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n  );\n\n}\n\n\nexport default MapScreen;\n\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport styles from \"./shop.module.scss\";\nimport cardStyle from '../../card/card.module.scss';\n\n\nimport { useGameState } from '../../../ducks/game_state'\nimport { usePlayer, updatePlayer, addCard } from '../../../ducks/player';\nimport { updateScreen } from '../../../ducks/screen';\nimport { updateGameState } from '../../../ducks/game_state';\n\n// import cardData from '../../../game-data/card-data'\n\nimport Card from '../../card'\nimport { useShop, boughtCard } from '../../../ducks/shop';\nimport coindSound from '../../../sound_clips/coins_purchase.mp3'\nimport bearGrunt from '../../../sound_clips/bearGrunt.mp3'\nfunction buyCard(card, index, dispatcher, player, sound){\n    if ( player.gold - card.cost >= 0){\n        // coin sound\n        sound.src = coindSound;\n        sound.volume = .3;\n        sound.play();\n        \n        dispatcher(addCard(card));\n        dispatcher(boughtCard(index));\n        dispatcher(updatePlayer({gold: player.gold - card.cost}))\n    }else{\n        // error sound\n        sound.src = bearGrunt;\n        sound.volume = .3;\n        sound.play();\n    }\n}\n\n\n\nconst ShopScreen = () => {\n\n    const dispatch = useDispatch();\n    const gameState = useGameState();\n    const shop = useShop();\n    const player = usePlayer();\n \n    let sounds = document.createElement('audio');\n\n    return (\n    <div className={styles.screenContainer}>\n        <div className={styles.screen}>\n\n            <h1>SHOP</h1>\n\n            <br />\n\n\n            <img style={{width:'150px'}} src=\"https://i.imgur.com/4Jbrggw.png\"></img>\n\n            \n            <br />\n            \n            <div style={{color:'gold'}}>\n                G: {player.gold}\n            </div>\n\n            <br />\n\n            <div style={{display: 'flex', flexDirection: 'column'}}>\n\n                <div style={{display: 'flex', flexDirection: 'row'}}>\n\n                    {shop.shopCards.map( (card, index) => \n                        <button key={index} className={styles.cardButton} onClick={() => {buyCard(card, index, dispatch, player, sounds)}}>\n                            <div className={cardStyle.card}>\n                                <Card cardData={card} combat={false} />\n                            </div>\n                        </button>\n                    )}\n                    \n                </div>\n\n            </div>\n\n            <br />\n\n            <div>\n                <button onClick={() => \n                        {\n                            dispatch( updateGameState({screen:'Map'}) );\n                            dispatch( updateScreen('Map') ) \n                        }\n                    }>\n                    RETURN TO MAP\n                </button>\n            </div>\n\n        </div>\n    </div>\n    );\n    \n}\n\n\nexport default ShopScreen;\n\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./bonfire.module.scss\";\n\nimport { updateGameState, useGameState } from '../../../ducks/game_state'\nimport { updatePlayer, usePlayer, removeCurses } from '../../../ducks/player';\nimport { updateScreen } from '../../../ducks/screen';\nimport Hero from \"../../hero\";\n\nimport PartyStatus from '../../combat-components/player-status';\n\nimport menuSound from '../../../sound_clips/menu_select.mp3'\n\n// import { useShop } from '../../../ducks/shop';\n\nfunction handleOption(option, dispatch, player){\n    let restB = document.getElementById('restButton');\n    let resurectB = document.getElementById('resurectButton');\n    let trainB = document.getElementById('trainButton');\n    \n    restB.disabled = true;\n    restB.style.zIndex = -1;\n    resurectB.disabled = true;\n    resurectB.style.zIndex = -1;\n    trainB.disabled = true;\n    trainB.style.zIndex = -1;\n\n    switch (option) {\n        case 'cleanse':\n            dispatch(removeCurses());\n            dispatch(updateGameState({screen:'Map'}));\n            dispatch(updateScreen('Map'))\n            break;\n\n        case 'rest':\n            let twentyFivePercent = player.health * 0.25\n            \n            if( Math.floor(player.health + twentyFivePercent) > player.maxHealth){\n                dispatch(updatePlayer({health: player.maxHealth}));\n            }else{\n                dispatch(updatePlayer({health: Math.floor(player.health + twentyFivePercent) }));\n            }\n\n            dispatch(updateGameState({screen:'Map'}));\n            setTimeout( function(){\n                dispatch(updateScreen('Map'))\n            }, 1000);\n\n            break;\n        case 'resurrect':\n            dispatch(updatePlayer( {utilityHeroStatus: 'standing', defenseHeroStatus: 'standing', offenseHeroStatus: 'standing'}))\n            dispatch(updateGameState({screen:'Map'}));\n            dispatch(updateScreen('Map'))\n            break;\n    }\n}\n\nfunction playMenuSound(){\n    let sounds = document.createElement('audio');\n    sounds.src = menuSound;\n    sounds.volume = 0.1;\n    sounds.play();\n}\n\nconst BonfireScreen = () => {\n\n    const dispatch = useDispatch();\n    const player = usePlayer();\n\n    return (\n        <div className={styles.screenContainer}>\n            <div className={styles.screen}>\n                <PartyStatus />\n\n\n                <h1>🔥 Bonfire 🔥 </h1>\n\n\n                <div className={styles.heroLineUp}>\n                    <Hero \n                        heroType={'mage'} \n                        status={'normal'}\n                    />\n\n                    <Hero \n                        heroType={'sword'} \n                        status={'normal'}\n                    />\n\n                    <Hero \n                        heroType={'shield'} \n                        status={'normal'}\n                    />\n                </div>\n\n\n                <div style={{display: 'flex', flexDirection: 'column'}}>\n                    <div style={{display: 'flex', flexDirection: 'row'}}>\n\n                        <button id=\"trainButton\" onMouseEnter={()=>playMenuSound()} className={styles.bonfireOption} onClick={() => handleOption('cleanse', dispatch, player)} >\n                            🕯️ Cleanse\n                            <div className={styles.subtext}>Remove all curses from deck...</div>\n                        </button>\n\n                        <button id=\"restButton\" onMouseEnter={()=>playMenuSound()} className={styles.bonfireOption} onClick={() => handleOption('rest', dispatch, player)}>\n                            🔥 Rest\n                            <div className={styles.subtext}>Heal 25% of parties health points...</div>\n                        </button>\n\n                        <button id=\"resurectButton\"  onMouseEnter={()=>playMenuSound()} className={styles.bonfireOptionOff} >\n                            ✨ Resurrect  \n                            <div className={styles.subtext}>Resurect all dead heros... [ currently not in the game ]</div>\n                        </button>\n\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default BonfireScreen;\n","export const trials = [\n    {\n        title: 'Great Relics',\n        description: 'The party stumbles upon a cavern of relics, but the tresaure reeks of death.',\n        skipable: true,\n        options: [\n            {\n                description: '[ Relic of Life ] A chance to increase your parties max health. The relic could be cursed ...',\n                odds: 50,\n                reward: 'maxHealth',\n                reward_value: 10,\n                lose: 'curse',\n                lose_value: 2\n            },\n            {\n                description: '[ Relic of Wealth ] A relic worth it\\'s weight in gold. The relic could be cursed ...',\n                odds: 40,\n                reward: 'wealth',\n                reward_value: 40,\n                lose: 'curse',\n                lose_value: 1\n            }\n        ]\n    },\n\n]","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from \"./trial.module.scss\";\n\nimport { updateGameState } from '../../../ducks/game_state'\nimport { usePlayer, updatePlayer, addCard } from '../../../ducks/player';\nimport { updateScreen } from '../../../ducks/screen';\nimport PartyStatus from '../../combat-components/player-status';\n\nimport {trials} from '../../../game-data/trials-data';\n\nimport {afflictionCards} from '../../../game-data/affliction-card-data';\n\n\n// const updateGame = (dispatch, choice) =>{\n//     dispatch(updateGameState({screen:'Map'}));\n//     dispatch(updateScreen('Map'));\n// }\n\nconst trialOptionMade = (choice, dispatch, player) => {\n\n\n    // odds: 40,\n    // reward: 'wealth',\n    // reward_value: 40,\n    // lose: 'curse',\n    // lose_value: 1\n\n    let rw = document.getElementById('resultWindow');\n    rw.style.opacity = 1;\n    rw.style.zIndex = 100;\n\n    let text = document.getElementById('result');\n    let result = rollDice(0,100);\n\n    if ( result > choice.odds){\n\n        if (choice.reward == 'maxHealth'){\n            let prev = player.maxHealth\n            let newMax = player.maxHealth + choice.reward_value\n            console.log('! newMax health:', newMax)\n            dispatch( updatePlayer( {maxHealth: newMax}) )\n            text.innerHTML = 'Success, max health of party increased. ❤️' + prev +' > >  ❤️'+ newMax\n        }\n\n        if (choice.reward == 'wealth'){\n            let g = player.gold\n            dispatch( updatePlayer( {gold: (player.gold + choice.reward_value)}) )\n            text.innerHTML = 'Success, the party aquired great fortune. G' + g +' + '+ choice.reward_value\n        }\n\n    }else{\n        \n        if (choice.lose == 'curse'){\n            for (let i = 0; i < choice.lose_value; i++) {\n                dispatch(addCard( afflictionCards.find( affliction => affliction.name === 'Curse') ) )              \n            }\n            text.innerHTML = 'The party accidently grabbed a cursed relic.' + choice.lose_value + ' curses have been added to the parties deck.'\n        }\n    }\n    \n\n\n\n}\n\nconst continueButton = (dispatch) => {\n    dispatch(updateGameState({screen:'Map'}));\n    dispatch(updateScreen('Map'));\n}\n\nfunction rollDice(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; \n}\n\nconst TrialScreen = () => {\n\n    const dispatch = useDispatch();\n    const player = usePlayer();\n\n    const trial = trials[rollDice(0,trials.length)];\n\n    return (\n    <div className={styles.screenContainer}>\n\n        <div id='resultWindow' className={styles.resultWindow}>\n            <div className={styles.reultText}>\n                <div className={styles.trialDescription}>\n                    <h5 id=\"result\"/>\n                </div>\n                <button className={styles.trialOptions} onClick={()=>continueButton(dispatch)}>continue</button>\n            </div>\n        </div>\n\n        <div className={styles.screen}>\n        <PartyStatus />\n\n\n        <div style={{display:\"flex\", flexDirection:\"row\"}}>\n\n            {/* <div className={styles.artContainer}>\n                <h4> trial art here </h4>\n            </div> */}\n\n            <div className={styles.trialInfoContainer}>\n                <div className={styles.trialDescription}>\n                    <h5> {trial.description} </h5>\n                </div>\n\n                <div className={styles.trialOptionsContainer}>\n                    {\n                        trial.options.map( option => \n                            <button className={styles.trialOptions} onClick={() => trialOptionMade(option, dispatch, player) }>\n                                {option.description}\n                            </button>\n                        )\n                    }\n                    <button className={styles.trialOptions} onClick={() => continueButton(dispatch) }>\n                        Leave\n                    </button>\n                </div>\n\n            </div>\n\n        </div>\n\n        </div>\n    </div>\n    );\n}\n\nexport default TrialScreen;\n","export const track_list = [\n    {\n      for: \"Title\",\n      name: \"Night in a seashell\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_42_-_Night_in_a_seashell.mp3\"\n    },\n    {\n      for: \"Map\",\n      name: \"The adventure\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_22_-_The_adventure.mp3\"\n    },\n    {\n      for: \"Combat\",\n      name: \"Intensive puzzle resolution\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_36_-_Intensive_puzzle_resolution.mp3\"\n    },\n    {\n      for: \"Resolution\",\n      name: \"WIN\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_11_-_WIN.mp3\"\n    },\n    {\n      for: \"Fail\",\n      name: \"Chocolate Valley\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_51_-_Chocolate_Valley.mp3\"\n    },\n    {\n      for: \"Shop\",\n      name: \"Tea with Granma\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_56_-_Tea_with_Granma.mp3\"\n    },{\n      for: \"Bonfire\",\n      name: \"Night in a seashell\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_42_-_Night_in_a_seashell.mp3\"\n    },{\n      for: \"Trial\",\n      name: \"The Challenge\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_62_-_The_Challenge.mp3\"\n    },{\n      for: \"end\",\n      name: \"Night in a seashell\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_70_-_Ending.mp3\"\n    },\n    {\n      for: \"HeroSelection\",\n      name: \"Night in a seashell\",\n      artist: \"Komuki\",\n      path: \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Music_for_Video/Komiku/Poupis_incredible_adventures_/Komiku_-_70_-_Ending.mp3\"\n    },\n\n  ];","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nimport {track_list} from \"../game-data/tracks\"\n\nexport const setTrack = createAction('music/SET_TRACK');\nexport const load = createAction('music/LOAD');\nexport const loop = createAction('music/LOOP');\nexport const mute = createAction('music/MUTE');\nexport const updateVolume = createAction('music/UPDATE_VOLUME');\n\n\nconst initialState = {\n    curr_track : document.createElement('audio'),\n    is_playing : false,\n    is_looping : false,\n    is_muted: true,\n    curr_volume: parseFloat(0.5),\n}\n\nconst reduceMuteTrack = ({ curr_track, is_muted, ...rest}) => {\n    if (is_muted){\n        curr_track.muted = false\n        return { ...rest, is_muted: false, curr_track: curr_track}\n    }else{\n        curr_track.muted = true\n        return { ...rest, is_muted: true, curr_track: curr_track}\n    }\n}\n\nconst reduceLoadTrack = ({ curr_track, track, is_looping, curr_volume, ...rest}) => {\n    curr_track.src = track.path;\n    curr_track.load();\n    curr_track.autoplay = true; \n    curr_track.loop = is_looping;\n    curr_track.volume = curr_volume;\n    return { ...rest, curr_track: curr_track, track: track, is_looping: is_looping, curr_volume: curr_volume }\n}\n\nconst reduceUpdateVoulme = (state, volume) => {\n    state.curr_volume = parseFloat(volume);\n    state.curr_track.volume = parseFloat(volume);\n}\n\nexport default handleActions({\n    [setTrack]: (state, action) => ({ ...state, track: action.payload}),\n    [load]: reduceLoadTrack,\n    [loop]: (state, action) => ({ ...state, is_looping: action.payload}),\n    [mute]: reduceMuteTrack,\n    [updateVolume]: (state, action) => {\n        reduceUpdateVoulme( state, action.payload )\n        return({ ...state, curr_volume: parseFloat(action.payload)})\n    }\n}, initialState);\n\n\nconst selectMusic = createSelector(\n    state => state.music,\n    music => music   \n)\n\nexport const useMusic = () => useSelector(selectMusic);\n","import React, { useEffect } from 'react';\nimport { useMusic, load, loop, mute, setTrack, updateVolume} from '../../ducks/music';\nimport { track_list } from '../../game-data/tracks';\nimport { useDispatch } from 'react-redux'\nimport {useScreen} from '../../ducks/screen';\n\n\nconst playButton = (dispatch, screen) => {    \n    const screenTrack = track_list.find(track => track.for === String(screen));\n    dispatch(setTrack(screenTrack));\n\n    dispatch(mute());\n\n    if(screen !== 'Resolution'){\n        dispatch(loop(true));\n    }else{\n        dispatch(loop(false));\n    }\n    dispatch(load());\n\n    let playButton = document.getElementById('musicPlayButton');\n    playButton.style.opacity = '0';\n    playButton.style.position = 'absolute';\n    playButton.style.zIndex = '-1';\n    playButton.disabled = 'disabled';\n\n    let muteToggleButton = document.getElementById('musicToggle');\n    muteToggleButton.style.opacity = '1';\n}\n\nconst muteToggleButton = (dispatch, is_muted, screen) => {\n    let musicToggle = document.getElementById('musicToggle');\n    dispatch(mute());\n\n    if (is_muted){\n        document.getElementById(\"musicToggle\").innerHTML = \"Sound: ON\";\n        musicToggle.style.opacity = 1;\n        \n        const screenTrack = track_list.find(track => track.for === String(screen));\n        \n        if (screen !== 'Resolution'){\n            dispatch(loop(true));\n        }else{\n            dispatch(loop(false));\n        }\n\n        dispatch(setTrack(screenTrack));\n        dispatch(load());\n\n    }else{\n        document.getElementById(\"musicToggle\").innerHTML = \"Sound: OFF\";\n        musicToggle.style.opacity = .5;\n\n    }\n    \n}\n\nconst Music = () => {\n\n    const music = useMusic();\n    const dispatch = useDispatch();\n    const screen = useScreen();\n\n    useEffect(() => {\n        if (!music.is_muted){\n            const screenTrack = track_list.find(track => track.for === String(screen));\n            if(screen !== 'Resolution'){\n                dispatch(loop(true));\n            }else{\n                dispatch(loop(false));\n            }\n            dispatch(setTrack(screenTrack));\n            dispatch(load());\n        }\n    },[screen])\n\n    return(\n        <>\n            <div>\n                <button id=\"musicPlayButton\" onClick={ () => playButton(dispatch, screen) }>\n                    Allow Music\n                </button>\n                <button id=\"musicToggle\" style={{opacity:'0', zIndex:'-1'}} onClick={ () => muteToggleButton(dispatch, music.is_muted, screen) }> \n                    Sound: ON\n                </button>\n                <br/> \n                <input id=\"volume\" type=\"range\" min=\"10\" max=\"100\" onChange={ (e) => dispatch(updateVolume(e.target.value/100)) }/>\n                <audio id='audio'> </audio>\n            </div>\n        </>\n    )\n    \n    \n}\n\nexport default Music;\n\n","import React from 'react';\nimport styles from './transition.module.scss'\n\n\nconst Transition = () => {\n    return(\n        <div id='overlayT' className={styles.overlay}>\n        </div>        \n    )\n}\n\nexport default Transition;\n","import React from 'react';\n\n// Screens\nimport Title from './components/screens/title';\nimport Combat from './components/screens/combat';\nimport Resolution from './components/screens/resolution';\nimport HeroSelection from './components/screens/hero-selection';\nimport Map from './components/screens/map';\nimport Shop from './components/screens/shop';\nimport Bonfire from './components/screens/bonfire';\nimport Trial from './components/screens/trial';\n\nimport Music from './components/music';\n\nimport { useScreen } from './ducks/screen';\n\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\n\nimport Transition from './components/transition';\n\nconst screens = {\n  Title,\n  Combat,\n  Resolution,\n  HeroSelection,\n  Map,\n  Shop,\n  Bonfire,\n  Trial\n}\n\n\n\nconst App = () => {\n  const screen = useScreen();\n  const Screen = screens[screen];\n\n  const handle = useFullScreenHandle();\n  \n  return (\n    <>\n      <button onClick={handle.enter}>\n        Enter fullscreen\n      </button>\n\n      <Music />\n\n      <FullScreen handle={handle}>\n        <Transition />\n        <Screen />\n      </FullScreen>\n    </>\n  )\n\n}\n\nexport default App\n","import { combineReducers } from 'redux';\nimport player from './player';\nimport monster from './monster';\nimport screen from './screen';\nimport combat from './combat';\nimport game_state from './game_state';\nimport map from './map';\nimport shop from './shop';\nimport music from './music';\n\nexport default combineReducers({\n    player,\n    monster,\n    screen,\n    combat,\n    game_state,\n    map,\n    shop,\n    music\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport { Provider } from 'react-redux'\nimport configureStore from './configurestore'\n\nconst rootElement = document.getElementById('root');\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    rootElement\n);\n","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport rootReducer from './ducks/'\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers)\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n  return store;\n}\n\n\n"],"sourceRoot":""}